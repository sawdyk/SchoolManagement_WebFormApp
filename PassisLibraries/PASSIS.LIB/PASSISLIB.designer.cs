#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PASSIS.LIB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "plive")]
	public partial class PASSISLIBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertYearFee(YearFee instance);
    partial void UpdateYearFee(YearFee instance);
    partial void DeleteYearFee(YearFee instance);
    partial void InsertAcademicSessionName(AcademicSessionName instance);
    partial void UpdateAcademicSessionName(AcademicSessionName instance);
    partial void DeleteAcademicSessionName(AcademicSessionName instance);
    partial void InsertAcademicTerm1(AcademicTerm1 instance);
    partial void UpdateAcademicTerm1(AcademicTerm1 instance);
    partial void DeleteAcademicTerm1(AcademicTerm1 instance);
    partial void InsertActivitiesList(ActivitiesList instance);
    partial void UpdateActivitiesList(ActivitiesList instance);
    partial void DeleteActivitiesList(ActivitiesList instance);
    partial void InsertAdmissionApp(AdmissionApp instance);
    partial void UpdateAdmissionApp(AdmissionApp instance);
    partial void DeleteAdmissionApp(AdmissionApp instance);
    partial void InsertAdmissionApplicationList(AdmissionApplicationList instance);
    partial void UpdateAdmissionApplicationList(AdmissionApplicationList instance);
    partial void DeleteAdmissionApplicationList(AdmissionApplicationList instance);
    partial void InsertAdmissionConfiguration(AdmissionConfiguration instance);
    partial void UpdateAdmissionConfiguration(AdmissionConfiguration instance);
    partial void DeleteAdmissionConfiguration(AdmissionConfiguration instance);
    partial void InsertAdmissionInterviewRequirement(AdmissionInterviewRequirement instance);
    partial void UpdateAdmissionInterviewRequirement(AdmissionInterviewRequirement instance);
    partial void DeleteAdmissionInterviewRequirement(AdmissionInterviewRequirement instance);
    partial void InsertAdmissionPayment(AdmissionPayment instance);
    partial void UpdateAdmissionPayment(AdmissionPayment instance);
    partial void DeleteAdmissionPayment(AdmissionPayment instance);
    partial void InsertAdmissionTestRequirement(AdmissionTestRequirement instance);
    partial void UpdateAdmissionTestRequirement(AdmissionTestRequirement instance);
    partial void DeleteAdmissionTestRequirement(AdmissionTestRequirement instance);
    partial void InsertAdmissionUser(AdmissionUser instance);
    partial void UpdateAdmissionUser(AdmissionUser instance);
    partial void DeleteAdmissionUser(AdmissionUser instance);
    partial void InsertAssignment(Assignment instance);
    partial void UpdateAssignment(Assignment instance);
    partial void DeleteAssignment(Assignment instance);
    partial void InsertAssignmentsGraded(AssignmentsGraded instance);
    partial void UpdateAssignmentsGraded(AssignmentsGraded instance);
    partial void DeleteAssignmentsGraded(AssignmentsGraded instance);
    partial void InsertAssignmentSubmitted(AssignmentSubmitted instance);
    partial void UpdateAssignmentSubmitted(AssignmentSubmitted instance);
    partial void DeleteAssignmentSubmitted(AssignmentSubmitted instance);
    partial void InsertAttendancePeriod(AttendancePeriod instance);
    partial void UpdateAttendancePeriod(AttendancePeriod instance);
    partial void DeleteAttendancePeriod(AttendancePeriod instance);
    partial void InsertAttendanceRegister(AttendanceRegister instance);
    partial void UpdateAttendanceRegister(AttendanceRegister instance);
    partial void DeleteAttendanceRegister(AttendanceRegister instance);
    partial void InsertBatch(Batch instance);
    partial void UpdateBatch(Batch instance);
    partial void DeleteBatch(Batch instance);
    partial void InsertBatchFee(BatchFee instance);
    partial void UpdateBatchFee(BatchFee instance);
    partial void DeleteBatchFee(BatchFee instance);
    partial void InsertBatchFeesForSage(BatchFeesForSage instance);
    partial void UpdateBatchFeesForSage(BatchFeesForSage instance);
    partial void DeleteBatchFeesForSage(BatchFeesForSage instance);
    partial void InsertBatchStudent(BatchStudent instance);
    partial void UpdateBatchStudent(BatchStudent instance);
    partial void DeleteBatchStudent(BatchStudent instance);
    partial void InsertBehavioral(Behavioral instance);
    partial void UpdateBehavioral(Behavioral instance);
    partial void DeleteBehavioral(Behavioral instance);
    partial void InsertBehaviorRating(BehaviorRating instance);
    partial void UpdateBehaviorRating(BehaviorRating instance);
    partial void DeleteBehaviorRating(BehaviorRating instance);
    partial void InsertBroadSheetDescriptionCode(BroadSheetDescriptionCode instance);
    partial void UpdateBroadSheetDescriptionCode(BroadSheetDescriptionCode instance);
    partial void DeleteBroadSheetDescriptionCode(BroadSheetDescriptionCode instance);
    partial void InsertCardPaymentLog(CardPaymentLog instance);
    partial void UpdateCardPaymentLog(CardPaymentLog instance);
    partial void DeleteCardPaymentLog(CardPaymentLog instance);
    partial void InsertClass_Grade(Class_Grade instance);
    partial void UpdateClass_Grade(Class_Grade instance);
    partial void DeleteClass_Grade(Class_Grade instance);
    partial void InsertClassAttendance(ClassAttendance instance);
    partial void UpdateClassAttendance(ClassAttendance instance);
    partial void DeleteClassAttendance(ClassAttendance instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertCurriculum(Curriculum instance);
    partial void UpdateCurriculum(Curriculum instance);
    partial void DeleteCurriculum(Curriculum instance);
    partial void InsertDay(Day instance);
    partial void UpdateDay(Day instance);
    partial void DeleteDay(Day instance);
    partial void InsertDayOfWeek(DayOfWeek instance);
    partial void UpdateDayOfWeek(DayOfWeek instance);
    partial void DeleteDayOfWeek(DayOfWeek instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    partial void InsertExternalResourceCenter(ExternalResourceCenter instance);
    partial void UpdateExternalResourceCenter(ExternalResourceCenter instance);
    partial void DeleteExternalResourceCenter(ExternalResourceCenter instance);
    partial void InsertExtraCurricularActivity(ExtraCurricularActivity instance);
    partial void UpdateExtraCurricularActivity(ExtraCurricularActivity instance);
    partial void DeleteExtraCurricularActivity(ExtraCurricularActivity instance);
    partial void InsertFee(Fee instance);
    partial void UpdateFee(Fee instance);
    partial void DeleteFee(Fee instance);
    partial void InsertFeedBackDetail(FeedBackDetail instance);
    partial void UpdateFeedBackDetail(FeedBackDetail instance);
    partial void DeleteFeedBackDetail(FeedBackDetail instance);
    partial void InsertFeesConfig(FeesConfig instance);
    partial void UpdateFeesConfig(FeesConfig instance);
    partial void DeleteFeesConfig(FeesConfig instance);
    partial void InsertFeeStatus(FeeStatus instance);
    partial void UpdateFeeStatus(FeeStatus instance);
    partial void DeleteFeeStatus(FeeStatus instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertGeneralResourceCenter(GeneralResourceCenter instance);
    partial void UpdateGeneralResourceCenter(GeneralResourceCenter instance);
    partial void DeleteGeneralResourceCenter(GeneralResourceCenter instance);
    partial void InsertGrade(Grade instance);
    partial void UpdateGrade(Grade instance);
    partial void DeleteGrade(Grade instance);
    partial void InsertGradeClassTeacher(GradeClassTeacher instance);
    partial void UpdateGradeClassTeacher(GradeClassTeacher instance);
    partial void DeleteGradeClassTeacher(GradeClassTeacher instance);
    partial void InsertGrouping(Grouping instance);
    partial void UpdateGrouping(Grouping instance);
    partial void DeleteGrouping(Grouping instance);
    partial void InsertGroupStudent(GroupStudent instance);
    partial void UpdateGroupStudent(GroupStudent instance);
    partial void DeleteGroupStudent(GroupStudent instance);
    partial void InsertHomeRoom(HomeRoom instance);
    partial void UpdateHomeRoom(HomeRoom instance);
    partial void DeleteHomeRoom(HomeRoom instance);
    partial void InsertHomeRoomTeacher(HomeRoomTeacher instance);
    partial void UpdateHomeRoomTeacher(HomeRoomTeacher instance);
    partial void DeleteHomeRoomTeacher(HomeRoomTeacher instance);
    partial void InsertLedgerAccount(LedgerAccount instance);
    partial void UpdateLedgerAccount(LedgerAccount instance);
    partial void DeleteLedgerAccount(LedgerAccount instance);
    partial void InsertMailMessaging(MailMessaging instance);
    partial void UpdateMailMessaging(MailMessaging instance);
    partial void DeleteMailMessaging(MailMessaging instance);
    partial void InsertOptionGroup(OptionGroup instance);
    partial void UpdateOptionGroup(OptionGroup instance);
    partial void DeleteOptionGroup(OptionGroup instance);
    partial void InsertOptionGroupStudent(OptionGroupStudent instance);
    partial void UpdateOptionGroupStudent(OptionGroupStudent instance);
    partial void DeleteOptionGroupStudent(OptionGroupStudent instance);
    partial void InsertOptionGroupSubject(OptionGroupSubject instance);
    partial void UpdateOptionGroupSubject(OptionGroupSubject instance);
    partial void DeleteOptionGroupSubject(OptionGroupSubject instance);
    partial void InsertPAActionName(PAActionName instance);
    partial void UpdatePAActionName(PAActionName instance);
    partial void DeletePAActionName(PAActionName instance);
    partial void InsertPAAuditTrial(PAAuditTrial instance);
    partial void UpdatePAAuditTrial(PAAuditTrial instance);
    partial void DeletePAAuditTrial(PAAuditTrial instance);
    partial void InsertParentDetail(ParentDetail instance);
    partial void UpdateParentDetail(ParentDetail instance);
    partial void DeleteParentDetail(ParentDetail instance);
    partial void InsertParentStudentMap(ParentStudentMap instance);
    partial void UpdateParentStudentMap(ParentStudentMap instance);
    partial void DeleteParentStudentMap(ParentStudentMap instance);
    partial void InsertPassportIdAdmissionNumberMatch(PassportIdAdmissionNumberMatch instance);
    partial void UpdatePassportIdAdmissionNumberMatch(PassportIdAdmissionNumberMatch instance);
    partial void DeletePassportIdAdmissionNumberMatch(PassportIdAdmissionNumberMatch instance);
    partial void InsertPaymentSubControl(PaymentSubControl instance);
    partial void UpdatePaymentSubControl(PaymentSubControl instance);
    partial void DeletePaymentSubControl(PaymentSubControl instance);
    partial void InsertPendingEmail(PendingEmail instance);
    partial void UpdatePendingEmail(PendingEmail instance);
    partial void DeletePendingEmail(PendingEmail instance);
    partial void InsertPeriod(Period instance);
    partial void UpdatePeriod(Period instance);
    partial void DeletePeriod(Period instance);
    partial void InsertPeriodAllocator(PeriodAllocator instance);
    partial void UpdatePeriodAllocator(PeriodAllocator instance);
    partial void DeletePeriodAllocator(PeriodAllocator instance);
    partial void InsertPositionInSchool(PositionInSchool instance);
    partial void UpdatePositionInSchool(PositionInSchool instance);
    partial void DeletePositionInSchool(PositionInSchool instance);
    partial void InsertRatingList(RatingList instance);
    partial void UpdateRatingList(RatingList instance);
    partial void DeleteRatingList(RatingList instance);
    partial void InsertResourceCenter(ResourceCenter instance);
    partial void UpdateResourceCenter(ResourceCenter instance);
    partial void DeleteResourceCenter(ResourceCenter instance);
    partial void InsertResultBase(ResultBase instance);
    partial void UpdateResultBase(ResultBase instance);
    partial void DeleteResultBase(ResultBase instance);
    partial void InsertResultFormatConfig(ResultFormatConfig instance);
    partial void UpdateResultFormatConfig(ResultFormatConfig instance);
    partial void DeleteResultFormatConfig(ResultFormatConfig instance);
    partial void InsertResultType(ResultType instance);
    partial void UpdateResultType(ResultType instance);
    partial void DeleteResultType(ResultType instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSchoolAccount(SchoolAccount instance);
    partial void UpdateSchoolAccount(SchoolAccount instance);
    partial void DeleteSchoolAccount(SchoolAccount instance);
    partial void InsertSchoolCampus(SchoolCampus instance);
    partial void UpdateSchoolCampus(SchoolCampus instance);
    partial void DeleteSchoolCampus(SchoolCampus instance);
    partial void InsertSchoolType(SchoolType instance);
    partial void UpdateSchoolType(SchoolType instance);
    partial void DeleteSchoolType(SchoolType instance);
    partial void InsertScoreConfiguration(ScoreConfiguration instance);
    partial void UpdateScoreConfiguration(ScoreConfiguration instance);
    partial void DeleteScoreConfiguration(ScoreConfiguration instance);
    partial void InsertScoreGradeConfiguration(ScoreGradeConfiguration instance);
    partial void UpdateScoreGradeConfiguration(ScoreGradeConfiguration instance);
    partial void DeleteScoreGradeConfiguration(ScoreGradeConfiguration instance);
    partial void InsertSelfSetupDetail(SelfSetupDetail instance);
    partial void UpdateSelfSetupDetail(SelfSetupDetail instance);
    partial void DeleteSelfSetupDetail(SelfSetupDetail instance);
    partial void Insertsm(sm instance);
    partial void Updatesm(sm instance);
    partial void Deletesm(sm instance);
    partial void InsertStudentAcademicProgression(StudentAcademicProgression instance);
    partial void UpdateStudentAcademicProgression(StudentAcademicProgression instance);
    partial void DeleteStudentAcademicProgression(StudentAcademicProgression instance);
    partial void InsertStudentBill(StudentBill instance);
    partial void UpdateStudentBill(StudentBill instance);
    partial void DeleteStudentBill(StudentBill instance);
    partial void InsertSubject_Theme(Subject_Theme instance);
    partial void UpdateSubject_Theme(Subject_Theme instance);
    partial void DeleteSubject_Theme(Subject_Theme instance);
    partial void InsertSubjectThemeTopic(SubjectThemeTopic instance);
    partial void UpdateSubjectThemeTopic(SubjectThemeTopic instance);
    partial void DeleteSubjectThemeTopic(SubjectThemeTopic instance);
    partial void InsertSubscriptionPaymentDetail(SubscriptionPaymentDetail instance);
    partial void UpdateSubscriptionPaymentDetail(SubscriptionPaymentDetail instance);
    partial void DeleteSubscriptionPaymentDetail(SubscriptionPaymentDetail instance);
    partial void InsertSweepTransactionLog(SweepTransactionLog instance);
    partial void UpdateSweepTransactionLog(SweepTransactionLog instance);
    partial void DeleteSweepTransactionLog(SweepTransactionLog instance);
    partial void InsertTeachersProfile(TeachersProfile instance);
    partial void UpdateTeachersProfile(TeachersProfile instance);
    partial void DeleteTeachersProfile(TeachersProfile instance);
    partial void InsertTestAssigenmentBroadSheetTemplate(TestAssigenmentBroadSheetTemplate instance);
    partial void UpdateTestAssigenmentBroadSheetTemplate(TestAssigenmentBroadSheetTemplate instance);
    partial void DeleteTestAssigenmentBroadSheetTemplate(TestAssigenmentBroadSheetTemplate instance);
    partial void InsertTestAssignmentScoreTemplate(TestAssignmentScoreTemplate instance);
    partial void UpdateTestAssignmentScoreTemplate(TestAssignmentScoreTemplate instance);
    partial void DeleteTestAssignmentScoreTemplate(TestAssignmentScoreTemplate instance);
    partial void InsertTimeTable(TimeTable instance);
    partial void UpdateTimeTable(TimeTable instance);
    partial void DeleteTimeTable(TimeTable instance);
    partial void InsertTransactionFee(TransactionFee instance);
    partial void UpdateTransactionFee(TransactionFee instance);
    partial void DeleteTransactionFee(TransactionFee instance);
    partial void InsertTransactionHistory(TransactionHistory instance);
    partial void UpdateTransactionHistory(TransactionHistory instance);
    partial void DeleteTransactionHistory(TransactionHistory instance);
    partial void InsertTransactionLog(TransactionLog instance);
    partial void UpdateTransactionLog(TransactionLog instance);
    partial void DeleteTransactionLog(TransactionLog instance);
    partial void InsertTransactionReference(TransactionReference instance);
    partial void UpdateTransactionReference(TransactionReference instance);
    partial void DeleteTransactionReference(TransactionReference instance);
    partial void InsertUrl(Url instance);
    partial void UpdateUrl(Url instance);
    partial void DeleteUrl(Url instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertYearBill(YearBill instance);
    partial void UpdateYearBill(YearBill instance);
    partial void DeleteYearBill(YearBill instance);
    partial void InsertReportCardPosition(ReportCardPosition instance);
    partial void UpdateReportCardPosition(ReportCardPosition instance);
    partial void DeleteReportCardPosition(ReportCardPosition instance);
    partial void InsertStudentNameDuplicateException(StudentNameDuplicateException instance);
    partial void UpdateStudentNameDuplicateException(StudentNameDuplicateException instance);
    partial void DeleteStudentNameDuplicateException(StudentNameDuplicateException instance);
    partial void InsertGradeStudent(GradeStudent instance);
    partial void UpdateGradeStudent(GradeStudent instance);
    partial void DeleteGradeStudent(GradeStudent instance);
    partial void InsertStudentStatus(StudentStatus instance);
    partial void UpdateStudentStatus(StudentStatus instance);
    partial void DeleteStudentStatus(StudentStatus instance);
    partial void InsertAlumni(Alumni instance);
    partial void UpdateAlumni(Alumni instance);
    partial void DeleteAlumni(Alumni instance);
    partial void InsertPaymentCategory(PaymentCategory instance);
    partial void UpdatePaymentCategory(PaymentCategory instance);
    partial void DeletePaymentCategory(PaymentCategory instance);
    partial void InsertPaymentFeeTemplateList(PaymentFeeTemplateList instance);
    partial void UpdatePaymentFeeTemplateList(PaymentFeeTemplateList instance);
    partial void DeletePaymentFeeTemplateList(PaymentFeeTemplateList instance);
    partial void InsertPaymentFeeType(PaymentFeeType instance);
    partial void UpdatePaymentFeeType(PaymentFeeType instance);
    partial void DeletePaymentFeeType(PaymentFeeType instance);
    partial void InsertPaymentFee(PaymentFee instance);
    partial void UpdatePaymentFee(PaymentFee instance);
    partial void DeletePaymentFee(PaymentFee instance);
    partial void InsertPaymentFeeTemplate(PaymentFeeTemplate instance);
    partial void UpdatePaymentFeeTemplate(PaymentFeeTemplate instance);
    partial void DeletePaymentFeeTemplate(PaymentFeeTemplate instance);
    partial void InsertApprovalStatus(ApprovalStatus instance);
    partial void UpdateApprovalStatus(ApprovalStatus instance);
    partial void DeleteApprovalStatus(ApprovalStatus instance);
    partial void InsertPaymentTemporary(PaymentTemporary instance);
    partial void UpdatePaymentTemporary(PaymentTemporary instance);
    partial void DeletePaymentTemporary(PaymentTemporary instance);
    partial void InsertSubjectDepartment(SubjectDepartment instance);
    partial void UpdateSubjectDepartment(SubjectDepartment instance);
    partial void DeleteSubjectDepartment(SubjectDepartment instance);
    partial void InsertPaymentInvoiceList(PaymentInvoiceList instance);
    partial void UpdatePaymentInvoiceList(PaymentInvoiceList instance);
    partial void DeletePaymentInvoiceList(PaymentInvoiceList instance);
    partial void InsertSubject(Subject instance);
    partial void UpdateSubject(Subject instance);
    partial void DeleteSubject(Subject instance);
    partial void InsertStudentScoreCA(StudentScoreCA instance);
    partial void UpdateStudentScoreCA(StudentScoreCA instance);
    partial void DeleteStudentScoreCA(StudentScoreCA instance);
    partial void InsertLessonNote(LessonNote instance);
    partial void UpdateLessonNote(LessonNote instance);
    partial void DeleteLessonNote(LessonNote instance);
    partial void InsertReportCardData(ReportCardData instance);
    partial void UpdateReportCardData(ReportCardData instance);
    partial void DeleteReportCardData(ReportCardData instance);
    partial void InsertScoreSheetRepo(ScoreSheetRepo instance);
    partial void UpdateScoreSheetRepo(ScoreSheetRepo instance);
    partial void DeleteScoreSheetRepo(ScoreSheetRepo instance);
    partial void InsertScoreCategorySystem(ScoreCategorySystem instance);
    partial void UpdateScoreCategorySystem(ScoreCategorySystem instance);
    partial void DeleteScoreCategorySystem(ScoreCategorySystem instance);
    partial void InsertStudentScoreCategory(StudentScoreCategory instance);
    partial void UpdateStudentScoreCategory(StudentScoreCategory instance);
    partial void DeleteStudentScoreCategory(StudentScoreCategory instance);
    partial void InsertStudentScoreBehavioral(StudentScoreBehavioral instance);
    partial void UpdateStudentScoreBehavioral(StudentScoreBehavioral instance);
    partial void DeleteStudentScoreBehavioral(StudentScoreBehavioral instance);
    partial void InsertScoreCategoryConfiguration(ScoreCategoryConfiguration instance);
    partial void UpdateScoreCategoryConfiguration(ScoreCategoryConfiguration instance);
    partial void DeleteScoreCategoryConfiguration(ScoreCategoryConfiguration instance);
    partial void InsertScoreSubCategoryConfiguration(ScoreSubCategoryConfiguration instance);
    partial void UpdateScoreSubCategoryConfiguration(ScoreSubCategoryConfiguration instance);
    partial void DeleteScoreSubCategoryConfiguration(ScoreSubCategoryConfiguration instance);
    partial void InsertReportCardComment(ReportCardComment instance);
    partial void UpdateReportCardComment(ReportCardComment instance);
    partial void DeleteReportCardComment(ReportCardComment instance);
    partial void InsertReportCardCommentConfig(ReportCardCommentConfig instance);
    partial void UpdateReportCardCommentConfig(ReportCardCommentConfig instance);
    partial void DeleteReportCardCommentConfig(ReportCardCommentConfig instance);
    partial void InsertStudentScoreExtraCurricular(StudentScoreExtraCurricular instance);
    partial void UpdateStudentScoreExtraCurricular(StudentScoreExtraCurricular instance);
    partial void DeleteStudentScoreExtraCurricular(StudentScoreExtraCurricular instance);
    partial void InsertSubjectTeacher(SubjectTeacher instance);
    partial void UpdateSubjectTeacher(SubjectTeacher instance);
    partial void DeleteSubjectTeacher(SubjectTeacher instance);
    partial void InsertStudentScoreRepository(StudentScoreRepository instance);
    partial void UpdateStudentScoreRepository(StudentScoreRepository instance);
    partial void DeleteStudentScoreRepository(StudentScoreRepository instance);
    partial void InsertStudentScore(StudentScore instance);
    partial void UpdateStudentScore(StudentScore instance);
    partial void DeleteStudentScore(StudentScore instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertFinanceDiscount(FinanceDiscount instance);
    partial void UpdateFinanceDiscount(FinanceDiscount instance);
    partial void DeleteFinanceDiscount(FinanceDiscount instance);
    partial void InsertPaymentPermanent(PaymentPermanent instance);
    partial void UpdatePaymentPermanent(PaymentPermanent instance);
    partial void DeletePaymentPermanent(PaymentPermanent instance);
    partial void InsertMenuSub(MenuSub instance);
    partial void UpdateMenuSub(MenuSub instance);
    partial void DeleteMenuSub(MenuSub instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertMenuRole(MenuRole instance);
    partial void UpdateMenuRole(MenuRole instance);
    partial void DeleteMenuRole(MenuRole instance);
    partial void InsertStudentScoreTransaction(StudentScoreTransaction instance);
    partial void UpdateStudentScoreTransaction(StudentScoreTransaction instance);
    partial void DeleteStudentScoreTransaction(StudentScoreTransaction instance);
    partial void InsertStudentScoreRepositoryTransaction(StudentScoreRepositoryTransaction instance);
    partial void UpdateStudentScoreRepositoryTransaction(StudentScoreRepositoryTransaction instance);
    partial void DeleteStudentScoreRepositoryTransaction(StudentScoreRepositoryTransaction instance);
    partial void InsertRpComment(RpComment instance);
    partial void UpdateRpComment(RpComment instance);
    partial void DeleteRpComment(RpComment instance);
    partial void InsertSchool(School instance);
    partial void UpdateSchool(School instance);
    partial void DeleteSchool(School instance);
    partial void InsertReportCardNextTermBegin(ReportCardNextTermBegin instance);
    partial void UpdateReportCardNextTermBegin(ReportCardNextTermBegin instance);
    partial void DeleteReportCardNextTermBegin(ReportCardNextTermBegin instance);
    partial void InsertNewsLetter(NewsLetter instance);
    partial void UpdateNewsLetter(NewsLetter instance);
    partial void DeleteNewsLetter(NewsLetter instance);
    partial void InsertStudentScoreTemporary(StudentScoreTemporary instance);
    partial void UpdateStudentScoreTemporary(StudentScoreTemporary instance);
    partial void DeleteStudentScoreTemporary(StudentScoreTemporary instance);
    partial void InsertSubjectsInSchool(SubjectsInSchool instance);
    partial void UpdateSubjectsInSchool(SubjectsInSchool instance);
    partial void DeleteSubjectsInSchool(SubjectsInSchool instance);
    partial void InsertAcademicSession(AcademicSession instance);
    partial void UpdateAcademicSession(AcademicSession instance);
    partial void DeleteAcademicSession(AcademicSession instance);
    partial void InsertReportCardPrintConfig(ReportCardPrintConfig instance);
    partial void UpdateReportCardPrintConfig(ReportCardPrintConfig instance);
    partial void DeleteReportCardPrintConfig(ReportCardPrintConfig instance);
    partial void InsertExternalResourceType(ExternalResourceType instance);
    partial void UpdateExternalResourceType(ExternalResourceType instance);
    partial void DeleteExternalResourceType(ExternalResourceType instance);
    partial void InsertExternalResourceLink(ExternalResourceLink instance);
    partial void UpdateExternalResourceLink(ExternalResourceLink instance);
    partial void DeleteExternalResourceLink(ExternalResourceLink instance);
    partial void InsertExternalResourceDocument(ExternalResourceDocument instance);
    partial void UpdateExternalResourceDocument(ExternalResourceDocument instance);
    partial void DeleteExternalResourceDocument(ExternalResourceDocument instance);
    partial void InsertExternalResourceMediaType(ExternalResourceMediaType instance);
    partial void UpdateExternalResourceMediaType(ExternalResourceMediaType instance);
    partial void DeleteExternalResourceMediaType(ExternalResourceMediaType instance);
    partial void InsertExternalResourceMultimedia(ExternalResourceMultimedia instance);
    partial void UpdateExternalResourceMultimedia(ExternalResourceMultimedia instance);
    partial void DeleteExternalResourceMultimedia(ExternalResourceMultimedia instance);
    partial void InsertCbtAssessmentRecord(CbtAssessmentRecord instance);
    partial void UpdateCbtAssessmentRecord(CbtAssessmentRecord instance);
    partial void DeleteCbtAssessmentRecord(CbtAssessmentRecord instance);
    partial void InsertCbtCategory(CbtCategory instance);
    partial void UpdateCbtCategory(CbtCategory instance);
    partial void DeleteCbtCategory(CbtCategory instance);
    partial void InsertCbtExamination(CbtExamination instance);
    partial void UpdateCbtExamination(CbtExamination instance);
    partial void DeleteCbtExamination(CbtExamination instance);
    partial void InsertCbtNotice(CbtNotice instance);
    partial void UpdateCbtNotice(CbtNotice instance);
    partial void DeleteCbtNotice(CbtNotice instance);
    partial void InsertCbtPracticeExamination(CbtPracticeExamination instance);
    partial void UpdateCbtPracticeExamination(CbtPracticeExamination instance);
    partial void DeleteCbtPracticeExamination(CbtPracticeExamination instance);
    partial void InsertCbtQuestion(CbtQuestion instance);
    partial void UpdateCbtQuestion(CbtQuestion instance);
    partial void DeleteCbtQuestion(CbtQuestion instance);
    partial void InsertCbtType(CbtType instance);
    partial void UpdateCbtType(CbtType instance);
    partial void DeleteCbtType(CbtType instance);
    #endregion
		
		public PASSISLIBDataContext() : 
				base(global::PASSIS.LIB.Properties.Settings.Default.pliveConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public PASSISLIBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PASSISLIBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PASSISLIBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PASSISLIBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<YearFee> YearFees
		{
			get
			{
				return this.GetTable<YearFee>();
			}
		}
		
		public System.Data.Linq.Table<AcademicSessionName> AcademicSessionNames
		{
			get
			{
				return this.GetTable<AcademicSessionName>();
			}
		}
		
		public System.Data.Linq.Table<AcademicTerm1> AcademicTerm1s
		{
			get
			{
				return this.GetTable<AcademicTerm1>();
			}
		}
		
		public System.Data.Linq.Table<ActivitiesList> ActivitiesLists
		{
			get
			{
				return this.GetTable<ActivitiesList>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionApp> AdmissionApps
		{
			get
			{
				return this.GetTable<AdmissionApp>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionApplicationList> AdmissionApplicationLists
		{
			get
			{
				return this.GetTable<AdmissionApplicationList>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionConfiguration> AdmissionConfigurations
		{
			get
			{
				return this.GetTable<AdmissionConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionInterviewRequirement> AdmissionInterviewRequirements
		{
			get
			{
				return this.GetTable<AdmissionInterviewRequirement>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionPayment> AdmissionPayments
		{
			get
			{
				return this.GetTable<AdmissionPayment>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionTestRequirement> AdmissionTestRequirements
		{
			get
			{
				return this.GetTable<AdmissionTestRequirement>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionUser> AdmissionUsers
		{
			get
			{
				return this.GetTable<AdmissionUser>();
			}
		}
		
		public System.Data.Linq.Table<Assignment> Assignments
		{
			get
			{
				return this.GetTable<Assignment>();
			}
		}
		
		public System.Data.Linq.Table<AssignmentsGraded> AssignmentsGradeds
		{
			get
			{
				return this.GetTable<AssignmentsGraded>();
			}
		}
		
		public System.Data.Linq.Table<AssignmentSubmitted> AssignmentSubmitteds
		{
			get
			{
				return this.GetTable<AssignmentSubmitted>();
			}
		}
		
		public System.Data.Linq.Table<AttendancePeriod> AttendancePeriods
		{
			get
			{
				return this.GetTable<AttendancePeriod>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceRegister> AttendanceRegisters
		{
			get
			{
				return this.GetTable<AttendanceRegister>();
			}
		}
		
		public System.Data.Linq.Table<Batch> Batches
		{
			get
			{
				return this.GetTable<Batch>();
			}
		}
		
		public System.Data.Linq.Table<BatchFee> BatchFees
		{
			get
			{
				return this.GetTable<BatchFee>();
			}
		}
		
		public System.Data.Linq.Table<BatchFeesForSage> BatchFeesForSages
		{
			get
			{
				return this.GetTable<BatchFeesForSage>();
			}
		}
		
		public System.Data.Linq.Table<BatchStudent> BatchStudents
		{
			get
			{
				return this.GetTable<BatchStudent>();
			}
		}
		
		public System.Data.Linq.Table<Behavioral> Behaviorals
		{
			get
			{
				return this.GetTable<Behavioral>();
			}
		}
		
		public System.Data.Linq.Table<BehaviorRating> BehaviorRatings
		{
			get
			{
				return this.GetTable<BehaviorRating>();
			}
		}
		
		public System.Data.Linq.Table<BroadSheetDescriptionCode> BroadSheetDescriptionCodes
		{
			get
			{
				return this.GetTable<BroadSheetDescriptionCode>();
			}
		}
		
		public System.Data.Linq.Table<CardPaymentLog> CardPaymentLogs
		{
			get
			{
				return this.GetTable<CardPaymentLog>();
			}
		}
		
		public System.Data.Linq.Table<Class_Grade> Class_Grades
		{
			get
			{
				return this.GetTable<Class_Grade>();
			}
		}
		
		public System.Data.Linq.Table<ClassAttendance> ClassAttendances
		{
			get
			{
				return this.GetTable<ClassAttendance>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<Curriculum> Curriculums
		{
			get
			{
				return this.GetTable<Curriculum>();
			}
		}
		
		public System.Data.Linq.Table<Day> Days
		{
			get
			{
				return this.GetTable<Day>();
			}
		}
		
		public System.Data.Linq.Table<DayOfWeek> DayOfWeeks
		{
			get
			{
				return this.GetTable<DayOfWeek>();
			}
		}
		
		public System.Data.Linq.Table<DegreeClassification> DegreeClassifications
		{
			get
			{
				return this.GetTable<DegreeClassification>();
			}
		}
		
		public System.Data.Linq.Table<DegreeObtained> DegreeObtaineds
		{
			get
			{
				return this.GetTable<DegreeObtained>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<ExternalResourceCenter> ExternalResourceCenters
		{
			get
			{
				return this.GetTable<ExternalResourceCenter>();
			}
		}
		
		public System.Data.Linq.Table<ExtraCurricularActivity> ExtraCurricularActivities
		{
			get
			{
				return this.GetTable<ExtraCurricularActivity>();
			}
		}
		
		public System.Data.Linq.Table<Fee> Fees
		{
			get
			{
				return this.GetTable<Fee>();
			}
		}
		
		public System.Data.Linq.Table<FeedBackDetail> FeedBackDetails
		{
			get
			{
				return this.GetTable<FeedBackDetail>();
			}
		}
		
		public System.Data.Linq.Table<FeesConfig> FeesConfigs
		{
			get
			{
				return this.GetTable<FeesConfig>();
			}
		}
		
		public System.Data.Linq.Table<FeeStatus> FeeStatus
		{
			get
			{
				return this.GetTable<FeeStatus>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<GeneralResourceCenter> GeneralResourceCenters
		{
			get
			{
				return this.GetTable<GeneralResourceCenter>();
			}
		}
		
		public System.Data.Linq.Table<Grade> Grades
		{
			get
			{
				return this.GetTable<Grade>();
			}
		}
		
		public System.Data.Linq.Table<GradeClassTeacher> GradeClassTeachers
		{
			get
			{
				return this.GetTable<GradeClassTeacher>();
			}
		}
		
		public System.Data.Linq.Table<Grouping> Groupings
		{
			get
			{
				return this.GetTable<Grouping>();
			}
		}
		
		public System.Data.Linq.Table<GroupStudent> GroupStudents
		{
			get
			{
				return this.GetTable<GroupStudent>();
			}
		}
		
		public System.Data.Linq.Table<HomeRoom> HomeRooms
		{
			get
			{
				return this.GetTable<HomeRoom>();
			}
		}
		
		public System.Data.Linq.Table<HomeRoomTeacher> HomeRoomTeachers
		{
			get
			{
				return this.GetTable<HomeRoomTeacher>();
			}
		}
		
		public System.Data.Linq.Table<LedgerAccount> LedgerAccounts
		{
			get
			{
				return this.GetTable<LedgerAccount>();
			}
		}
		
		public System.Data.Linq.Table<MailMessaging> MailMessagings
		{
			get
			{
				return this.GetTable<MailMessaging>();
			}
		}
		
		public System.Data.Linq.Table<OptionGroup> OptionGroups
		{
			get
			{
				return this.GetTable<OptionGroup>();
			}
		}
		
		public System.Data.Linq.Table<OptionGroupStudent> OptionGroupStudents
		{
			get
			{
				return this.GetTable<OptionGroupStudent>();
			}
		}
		
		public System.Data.Linq.Table<OptionGroupSubject> OptionGroupSubjects
		{
			get
			{
				return this.GetTable<OptionGroupSubject>();
			}
		}
		
		public System.Data.Linq.Table<PAActionName> PAActionNames
		{
			get
			{
				return this.GetTable<PAActionName>();
			}
		}
		
		public System.Data.Linq.Table<PAAuditTrial> PAAuditTrials
		{
			get
			{
				return this.GetTable<PAAuditTrial>();
			}
		}
		
		public System.Data.Linq.Table<ParentDetail> ParentDetails
		{
			get
			{
				return this.GetTable<ParentDetail>();
			}
		}
		
		public System.Data.Linq.Table<ParentStudentMap> ParentStudentMaps
		{
			get
			{
				return this.GetTable<ParentStudentMap>();
			}
		}
		
		public System.Data.Linq.Table<PassportIdAdmissionNumberMatch> PassportIdAdmissionNumberMatches
		{
			get
			{
				return this.GetTable<PassportIdAdmissionNumberMatch>();
			}
		}
		
		public System.Data.Linq.Table<PaymentSubControl> PaymentSubControls
		{
			get
			{
				return this.GetTable<PaymentSubControl>();
			}
		}
		
		public System.Data.Linq.Table<PendingEmail> PendingEmails
		{
			get
			{
				return this.GetTable<PendingEmail>();
			}
		}
		
		public System.Data.Linq.Table<Period> Periods
		{
			get
			{
				return this.GetTable<Period>();
			}
		}
		
		public System.Data.Linq.Table<PeriodAllocator> PeriodAllocators
		{
			get
			{
				return this.GetTable<PeriodAllocator>();
			}
		}
		
		public System.Data.Linq.Table<PositionInSchool> PositionInSchools
		{
			get
			{
				return this.GetTable<PositionInSchool>();
			}
		}
		
		public System.Data.Linq.Table<ProfessionalCertification> ProfessionalCertifications
		{
			get
			{
				return this.GetTable<ProfessionalCertification>();
			}
		}
		
		public System.Data.Linq.Table<RatingList> RatingLists
		{
			get
			{
				return this.GetTable<RatingList>();
			}
		}
		
		public System.Data.Linq.Table<ResourceCenter> ResourceCenters
		{
			get
			{
				return this.GetTable<ResourceCenter>();
			}
		}
		
		public System.Data.Linq.Table<ResultBase> ResultBases
		{
			get
			{
				return this.GetTable<ResultBase>();
			}
		}
		
		public System.Data.Linq.Table<ResultFormatConfig> ResultFormatConfigs
		{
			get
			{
				return this.GetTable<ResultFormatConfig>();
			}
		}
		
		public System.Data.Linq.Table<ResultType> ResultTypes
		{
			get
			{
				return this.GetTable<ResultType>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SchoolAccount> SchoolAccounts
		{
			get
			{
				return this.GetTable<SchoolAccount>();
			}
		}
		
		public System.Data.Linq.Table<SchoolCampus> SchoolCampus
		{
			get
			{
				return this.GetTable<SchoolCampus>();
			}
		}
		
		public System.Data.Linq.Table<SchoolType> SchoolTypes
		{
			get
			{
				return this.GetTable<SchoolType>();
			}
		}
		
		public System.Data.Linq.Table<ScoreConfiguration> ScoreConfigurations
		{
			get
			{
				return this.GetTable<ScoreConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<ScoreGradeConfiguration> ScoreGradeConfigurations
		{
			get
			{
				return this.GetTable<ScoreGradeConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<SelfSetupDetail> SelfSetupDetails
		{
			get
			{
				return this.GetTable<SelfSetupDetail>();
			}
		}
		
		public System.Data.Linq.Table<sm> sms
		{
			get
			{
				return this.GetTable<sm>();
			}
		}
		
		public System.Data.Linq.Table<StudentAcademicProgression> StudentAcademicProgressions
		{
			get
			{
				return this.GetTable<StudentAcademicProgression>();
			}
		}
		
		public System.Data.Linq.Table<StudentBill> StudentBills
		{
			get
			{
				return this.GetTable<StudentBill>();
			}
		}
		
		public System.Data.Linq.Table<Subject_Theme> Subject_Themes
		{
			get
			{
				return this.GetTable<Subject_Theme>();
			}
		}
		
		public System.Data.Linq.Table<SubjectThemeTopic> SubjectThemeTopics
		{
			get
			{
				return this.GetTable<SubjectThemeTopic>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionPaymentDetail> SubscriptionPaymentDetails
		{
			get
			{
				return this.GetTable<SubscriptionPaymentDetail>();
			}
		}
		
		public System.Data.Linq.Table<SweepTransactionLog> SweepTransactionLogs
		{
			get
			{
				return this.GetTable<SweepTransactionLog>();
			}
		}
		
		public System.Data.Linq.Table<TeachersAssignedToGrade> TeachersAssignedToGrades
		{
			get
			{
				return this.GetTable<TeachersAssignedToGrade>();
			}
		}
		
		public System.Data.Linq.Table<TeachersProfile> TeachersProfiles
		{
			get
			{
				return this.GetTable<TeachersProfile>();
			}
		}
		
		public System.Data.Linq.Table<TestAssigenmentBroadSheetTemplate> TestAssigenmentBroadSheetTemplates
		{
			get
			{
				return this.GetTable<TestAssigenmentBroadSheetTemplate>();
			}
		}
		
		public System.Data.Linq.Table<TestAssignmentScoreTemplate> TestAssignmentScoreTemplates
		{
			get
			{
				return this.GetTable<TestAssignmentScoreTemplate>();
			}
		}
		
		public System.Data.Linq.Table<TimeTable> TimeTables
		{
			get
			{
				return this.GetTable<TimeTable>();
			}
		}
		
		public System.Data.Linq.Table<TransactionFee> TransactionFees
		{
			get
			{
				return this.GetTable<TransactionFee>();
			}
		}
		
		public System.Data.Linq.Table<TransactionHistory> TransactionHistories
		{
			get
			{
				return this.GetTable<TransactionHistory>();
			}
		}
		
		public System.Data.Linq.Table<TransactionLog> TransactionLogs
		{
			get
			{
				return this.GetTable<TransactionLog>();
			}
		}
		
		public System.Data.Linq.Table<TransactionReference> TransactionReferences
		{
			get
			{
				return this.GetTable<TransactionReference>();
			}
		}
		
		public System.Data.Linq.Table<Url> Urls
		{
			get
			{
				return this.GetTable<Url>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<YearBill> YearBills
		{
			get
			{
				return this.GetTable<YearBill>();
			}
		}
		
		public System.Data.Linq.Table<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this.GetTable<ReportCardPosition>();
			}
		}
		
		public System.Data.Linq.Table<StudentNameDuplicateException> StudentNameDuplicateExceptions
		{
			get
			{
				return this.GetTable<StudentNameDuplicateException>();
			}
		}
		
		public System.Data.Linq.Table<GradeStudent> GradeStudents
		{
			get
			{
				return this.GetTable<GradeStudent>();
			}
		}
		
		public System.Data.Linq.Table<StudentStatus> StudentStatus
		{
			get
			{
				return this.GetTable<StudentStatus>();
			}
		}
		
		public System.Data.Linq.Table<Alumni> Alumnis
		{
			get
			{
				return this.GetTable<Alumni>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCategory> PaymentCategories
		{
			get
			{
				return this.GetTable<PaymentCategory>();
			}
		}
		
		public System.Data.Linq.Table<PaymentFeeTemplateList> PaymentFeeTemplateLists
		{
			get
			{
				return this.GetTable<PaymentFeeTemplateList>();
			}
		}
		
		public System.Data.Linq.Table<PaymentFeeType> PaymentFeeTypes
		{
			get
			{
				return this.GetTable<PaymentFeeType>();
			}
		}
		
		public System.Data.Linq.Table<PaymentFee> PaymentFees
		{
			get
			{
				return this.GetTable<PaymentFee>();
			}
		}
		
		public System.Data.Linq.Table<PaymentFeeTemplate> PaymentFeeTemplates
		{
			get
			{
				return this.GetTable<PaymentFeeTemplate>();
			}
		}
		
		public System.Data.Linq.Table<ApprovalStatus> ApprovalStatus
		{
			get
			{
				return this.GetTable<ApprovalStatus>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this.GetTable<PaymentTemporary>();
			}
		}
		
		public System.Data.Linq.Table<SubjectDepartment> SubjectDepartments
		{
			get
			{
				return this.GetTable<SubjectDepartment>();
			}
		}
		
		public System.Data.Linq.Table<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this.GetTable<PaymentInvoiceList>();
			}
		}
		
		public System.Data.Linq.Table<Subject> Subjects
		{
			get
			{
				return this.GetTable<Subject>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this.GetTable<StudentScoreCA>();
			}
		}
		
		public System.Data.Linq.Table<LessonNote> LessonNotes
		{
			get
			{
				return this.GetTable<LessonNote>();
			}
		}
		
		public System.Data.Linq.Table<ReportCardData> ReportCardDatas
		{
			get
			{
				return this.GetTable<ReportCardData>();
			}
		}
		
		public System.Data.Linq.Table<ScoreSheetRepo> ScoreSheetRepos
		{
			get
			{
				return this.GetTable<ScoreSheetRepo>();
			}
		}
		
		public System.Data.Linq.Table<ScoreCategorySystem> ScoreCategorySystems
		{
			get
			{
				return this.GetTable<ScoreCategorySystem>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this.GetTable<StudentScoreCategory>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this.GetTable<StudentScoreBehavioral>();
			}
		}
		
		public System.Data.Linq.Table<ScoreCategoryConfiguration> ScoreCategoryConfigurations
		{
			get
			{
				return this.GetTable<ScoreCategoryConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<ScoreSubCategoryConfiguration> ScoreSubCategoryConfigurations
		{
			get
			{
				return this.GetTable<ScoreSubCategoryConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<ReportCardComment> ReportCardComments
		{
			get
			{
				return this.GetTable<ReportCardComment>();
			}
		}
		
		public System.Data.Linq.Table<ReportCardCommentConfig> ReportCardCommentConfigs
		{
			get
			{
				return this.GetTable<ReportCardCommentConfig>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this.GetTable<StudentScoreExtraCurricular>();
			}
		}
		
		public System.Data.Linq.Table<SubjectTeacher> SubjectTeachers
		{
			get
			{
				return this.GetTable<SubjectTeacher>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this.GetTable<StudentScoreRepository>();
			}
		}
		
		public System.Data.Linq.Table<StudentScore> StudentScores
		{
			get
			{
				return this.GetTable<StudentScore>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this.GetTable<FinanceDiscount>();
			}
		}
		
		public System.Data.Linq.Table<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this.GetTable<PaymentPermanent>();
			}
		}
		
		public System.Data.Linq.Table<MenuSub> MenuSubs
		{
			get
			{
				return this.GetTable<MenuSub>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<MenuRole> MenuRoles
		{
			get
			{
				return this.GetTable<MenuRole>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this.GetTable<StudentScoreTransaction>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this.GetTable<StudentScoreRepositoryTransaction>();
			}
		}
		
		public System.Data.Linq.Table<RpComment> RpComments
		{
			get
			{
				return this.GetTable<RpComment>();
			}
		}
		
		public System.Data.Linq.Table<School> Schools
		{
			get
			{
				return this.GetTable<School>();
			}
		}
		
		public System.Data.Linq.Table<ReportCardNextTermBegin> ReportCardNextTermBegins
		{
			get
			{
				return this.GetTable<ReportCardNextTermBegin>();
			}
		}
		
		public System.Data.Linq.Table<ReportCardNextTermBegin1> ReportCardNextTermBegin1s
		{
			get
			{
				return this.GetTable<ReportCardNextTermBegin1>();
			}
		}
		
		public System.Data.Linq.Table<NewsLetter> NewsLetters
		{
			get
			{
				return this.GetTable<NewsLetter>();
			}
		}
		
		public System.Data.Linq.Table<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this.GetTable<StudentScoreTemporary>();
			}
		}
		
		public System.Data.Linq.Table<SubjectsInSchool> SubjectsInSchools
		{
			get
			{
				return this.GetTable<SubjectsInSchool>();
			}
		}
		
		public System.Data.Linq.Table<AcademicSession> AcademicSessions
		{
			get
			{
				return this.GetTable<AcademicSession>();
			}
		}
		
		public System.Data.Linq.Table<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this.GetTable<ReportCardPrintConfig>();
			}
		}
		
		public System.Data.Linq.Table<ExternalResourceType> ExternalResourceTypes
		{
			get
			{
				return this.GetTable<ExternalResourceType>();
			}
		}
		
		public System.Data.Linq.Table<ExternalResourceLink> ExternalResourceLinks
		{
			get
			{
				return this.GetTable<ExternalResourceLink>();
			}
		}
		
		public System.Data.Linq.Table<ExternalResourceDocument> ExternalResourceDocuments
		{
			get
			{
				return this.GetTable<ExternalResourceDocument>();
			}
		}
		
		public System.Data.Linq.Table<ExternalResourceMediaType> ExternalResourceMediaTypes
		{
			get
			{
				return this.GetTable<ExternalResourceMediaType>();
			}
		}
		
		public System.Data.Linq.Table<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this.GetTable<ExternalResourceMultimedia>();
			}
		}
		
		public System.Data.Linq.Table<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this.GetTable<CbtAssessmentRecord>();
			}
		}
		
		public System.Data.Linq.Table<CbtCategory> CbtCategories
		{
			get
			{
				return this.GetTable<CbtCategory>();
			}
		}
		
		public System.Data.Linq.Table<CbtExamination> CbtExaminations
		{
			get
			{
				return this.GetTable<CbtExamination>();
			}
		}
		
		public System.Data.Linq.Table<CbtNotice> CbtNotices
		{
			get
			{
				return this.GetTable<CbtNotice>();
			}
		}
		
		public System.Data.Linq.Table<CbtPracticeExamination> CbtPracticeExaminations
		{
			get
			{
				return this.GetTable<CbtPracticeExamination>();
			}
		}
		
		public System.Data.Linq.Table<CbtQuestion> CbtQuestions
		{
			get
			{
				return this.GetTable<CbtQuestion>();
			}
		}
		
		public System.Data.Linq.Table<CbtType> CbtTypes
		{
			get
			{
				return this.GetTable<CbtType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YearFee")]
	public partial class YearFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private int _Status;
		
		private System.Nullable<long> _SchoolId;
		
		private string _Description;
		
		private EntitySet<YearBill> _YearBills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public YearFee()
		{
			this._YearBills = new EntitySet<YearBill>(new Action<YearBill>(this.attach_YearBills), new Action<YearBill>(this.detach_YearBills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YearFee_YearBill", Storage="_YearBills", ThisKey="Id", OtherKey="FeeYear")]
		public EntitySet<YearBill> YearBills
		{
			get
			{
				return this._YearBills;
			}
			set
			{
				this._YearBills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YearBills(YearBill entity)
		{
			this.SendPropertyChanging();
			entity.YearFee = this;
		}
		
		private void detach_YearBills(YearBill entity)
		{
			this.SendPropertyChanging();
			entity.YearFee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcademicSessionName")]
	public partial class AcademicSessionName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _SessionName;
		
		private EntitySet<AdmissionApp> _AdmissionApps;
		
		private EntitySet<AttendanceRegister> _AttendanceRegisters;
		
		private EntitySet<Batch> _Batches;
		
		private EntitySet<BatchStudent> _BatchStudents;
		
		private EntitySet<FeesConfig> _FeesConfigs;
		
		private EntitySet<SubscriptionPaymentDetail> _SubscriptionPaymentDetails;
		
		private EntitySet<ReportCardPosition> _ReportCardPositions;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<LessonNote> _LessonNotes;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<StudentScoreCategory> _StudentScoreCategories;
		
		private EntitySet<ScoreCategoryConfiguration> _ScoreCategoryConfigurations;
		
		private EntitySet<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfigurations;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<NewsLetter> _NewsLetters;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<AcademicSession> _AcademicSessions;
		
		private EntitySet<ReportCardPrintConfig> _ReportCardPrintConfigs;
		
		private EntitySet<ExternalResourceLink> _ExternalResourceLinks;
		
		private EntitySet<ExternalResourceDocument> _ExternalResourceDocuments;
		
		private EntitySet<ExternalResourceMultimedia> _ExternalResourceMultimedias;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSessionNameChanging(string value);
    partial void OnSessionNameChanged();
    #endregion
		
		public AcademicSessionName()
		{
			this._AdmissionApps = new EntitySet<AdmissionApp>(new Action<AdmissionApp>(this.attach_AdmissionApps), new Action<AdmissionApp>(this.detach_AdmissionApps));
			this._AttendanceRegisters = new EntitySet<AttendanceRegister>(new Action<AttendanceRegister>(this.attach_AttendanceRegisters), new Action<AttendanceRegister>(this.detach_AttendanceRegisters));
			this._Batches = new EntitySet<Batch>(new Action<Batch>(this.attach_Batches), new Action<Batch>(this.detach_Batches));
			this._BatchStudents = new EntitySet<BatchStudent>(new Action<BatchStudent>(this.attach_BatchStudents), new Action<BatchStudent>(this.detach_BatchStudents));
			this._FeesConfigs = new EntitySet<FeesConfig>(new Action<FeesConfig>(this.attach_FeesConfigs), new Action<FeesConfig>(this.detach_FeesConfigs));
			this._SubscriptionPaymentDetails = new EntitySet<SubscriptionPaymentDetail>(new Action<SubscriptionPaymentDetail>(this.attach_SubscriptionPaymentDetails), new Action<SubscriptionPaymentDetail>(this.detach_SubscriptionPaymentDetails));
			this._ReportCardPositions = new EntitySet<ReportCardPosition>(new Action<ReportCardPosition>(this.attach_ReportCardPositions), new Action<ReportCardPosition>(this.detach_ReportCardPositions));
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._LessonNotes = new EntitySet<LessonNote>(new Action<LessonNote>(this.attach_LessonNotes), new Action<LessonNote>(this.detach_LessonNotes));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._StudentScoreCategories = new EntitySet<StudentScoreCategory>(new Action<StudentScoreCategory>(this.attach_StudentScoreCategories), new Action<StudentScoreCategory>(this.detach_StudentScoreCategories));
			this._ScoreCategoryConfigurations = new EntitySet<ScoreCategoryConfiguration>(new Action<ScoreCategoryConfiguration>(this.attach_ScoreCategoryConfigurations), new Action<ScoreCategoryConfiguration>(this.detach_ScoreCategoryConfigurations));
			this._ScoreSubCategoryConfigurations = new EntitySet<ScoreSubCategoryConfiguration>(new Action<ScoreSubCategoryConfiguration>(this.attach_ScoreSubCategoryConfigurations), new Action<ScoreSubCategoryConfiguration>(this.detach_ScoreSubCategoryConfigurations));
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			this._PaymentPermanents = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents), new Action<PaymentPermanent>(this.detach_PaymentPermanents));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._NewsLetters = new EntitySet<NewsLetter>(new Action<NewsLetter>(this.attach_NewsLetters), new Action<NewsLetter>(this.detach_NewsLetters));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._AcademicSessions = new EntitySet<AcademicSession>(new Action<AcademicSession>(this.attach_AcademicSessions), new Action<AcademicSession>(this.detach_AcademicSessions));
			this._ReportCardPrintConfigs = new EntitySet<ReportCardPrintConfig>(new Action<ReportCardPrintConfig>(this.attach_ReportCardPrintConfigs), new Action<ReportCardPrintConfig>(this.detach_ReportCardPrintConfigs));
			this._ExternalResourceLinks = new EntitySet<ExternalResourceLink>(new Action<ExternalResourceLink>(this.attach_ExternalResourceLinks), new Action<ExternalResourceLink>(this.detach_ExternalResourceLinks));
			this._ExternalResourceDocuments = new EntitySet<ExternalResourceDocument>(new Action<ExternalResourceDocument>(this.attach_ExternalResourceDocuments), new Action<ExternalResourceDocument>(this.detach_ExternalResourceDocuments));
			this._ExternalResourceMultimedias = new EntitySet<ExternalResourceMultimedia>(new Action<ExternalResourceMultimedia>(this.attach_ExternalResourceMultimedias), new Action<ExternalResourceMultimedia>(this.detach_ExternalResourceMultimedias));
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionName", DbType="VarChar(50)")]
		public string SessionName
		{
			get
			{
				return this._SessionName;
			}
			set
			{
				if ((this._SessionName != value))
				{
					this.OnSessionNameChanging(value);
					this.SendPropertyChanging();
					this._SessionName = value;
					this.SendPropertyChanged("SessionName");
					this.OnSessionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_AdmissionApp", Storage="_AdmissionApps", ThisKey="ID", OtherKey="AdmissionSessionId")]
		public EntitySet<AdmissionApp> AdmissionApps
		{
			get
			{
				return this._AdmissionApps;
			}
			set
			{
				this._AdmissionApps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_AttendanceRegister", Storage="_AttendanceRegisters", ThisKey="ID", OtherKey="AcademicSessionId")]
		public EntitySet<AttendanceRegister> AttendanceRegisters
		{
			get
			{
				return this._AttendanceRegisters;
			}
			set
			{
				this._AttendanceRegisters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_Batch", Storage="_Batches", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<Batch> Batches
		{
			get
			{
				return this._Batches;
			}
			set
			{
				this._Batches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_BatchStudent", Storage="_BatchStudents", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<BatchStudent> BatchStudents
		{
			get
			{
				return this._BatchStudents;
			}
			set
			{
				this._BatchStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_FeesConfig", Storage="_FeesConfigs", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<FeesConfig> FeesConfigs
		{
			get
			{
				return this._FeesConfigs;
			}
			set
			{
				this._FeesConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_SubscriptionPaymentDetail", Storage="_SubscriptionPaymentDetails", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<SubscriptionPaymentDetail> SubscriptionPaymentDetails
		{
			get
			{
				return this._SubscriptionPaymentDetails;
			}
			set
			{
				this._SubscriptionPaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardPosition", Storage="_ReportCardPositions", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this._ReportCardPositions;
			}
			set
			{
				this._ReportCardPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="ID", OtherKey="AcademicSessionID")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_LessonNote", Storage="_LessonNotes", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<LessonNote> LessonNotes
		{
			get
			{
				return this._LessonNotes;
			}
			set
			{
				this._LessonNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardData", Storage="_ReportCardDatas", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreCategory", Storage="_StudentScoreCategories", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this._StudentScoreCategories;
			}
			set
			{
				this._StudentScoreCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ScoreCategoryConfiguration", Storage="_ScoreCategoryConfigurations", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ScoreCategoryConfiguration> ScoreCategoryConfigurations
		{
			get
			{
				return this._ScoreCategoryConfigurations;
			}
			set
			{
				this._ScoreCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ScoreSubCategoryConfiguration", Storage="_ScoreSubCategoryConfigurations", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ScoreSubCategoryConfiguration> ScoreSubCategoryConfigurations
		{
			get
			{
				return this._ScoreSubCategoryConfigurations;
			}
			set
			{
				this._ScoreSubCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardComment", Storage="_ReportCardComments", ThisKey="ID", OtherKey="AcademicSessionID")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScore", Storage="_StudentScores", ThisKey="ID", OtherKey="AcademicSessionID")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_PaymentPermanent", Storage="_PaymentPermanents", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this._PaymentPermanents;
			}
			set
			{
				this._PaymentPermanents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="ID", OtherKey="AcademicSessionID")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_NewsLetter", Storage="_NewsLetters", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<NewsLetter> NewsLetters
		{
			get
			{
				return this._NewsLetters;
			}
			set
			{
				this._NewsLetters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="ID", OtherKey="AcademicSessionID")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_AcademicSession", Storage="_AcademicSessions", ThisKey="ID", OtherKey="AcademicSessionId")]
		public EntitySet<AcademicSession> AcademicSessions
		{
			get
			{
				return this._AcademicSessions;
			}
			set
			{
				this._AcademicSessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardPrintConfig", Storage="_ReportCardPrintConfigs", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this._ReportCardPrintConfigs;
			}
			set
			{
				this._ReportCardPrintConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ExternalResourceLink", Storage="_ExternalResourceLinks", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ExternalResourceLink> ExternalResourceLinks
		{
			get
			{
				return this._ExternalResourceLinks;
			}
			set
			{
				this._ExternalResourceLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ExternalResourceDocument", Storage="_ExternalResourceDocuments", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ExternalResourceDocument> ExternalResourceDocuments
		{
			get
			{
				return this._ExternalResourceDocuments;
			}
			set
			{
				this._ExternalResourceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ExternalResourceMultimedia", Storage="_ExternalResourceMultimedias", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this._ExternalResourceMultimedias;
			}
			set
			{
				this._ExternalResourceMultimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_CbtExamination", Storage="_CbtExaminations", ThisKey="ID", OtherKey="SessionId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionApps(AdmissionApp entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_AdmissionApps(AdmissionApp entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_AttendanceRegisters(AttendanceRegister entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_AttendanceRegisters(AttendanceRegister entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_Batches(Batch entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_Batches(Batch entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_AcademicSessions(AcademicSession entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_AcademicSessions(AcademicSession entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSessionName = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcademicTerm1")]
	public partial class AcademicTerm1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _AcademicTermName;
		
		private EntitySet<AttendanceRegister> _AttendanceRegisters;
		
		private EntitySet<Batch> _Batches;
		
		private EntitySet<BatchStudent> _BatchStudents;
		
		private EntitySet<SubscriptionPaymentDetail> _SubscriptionPaymentDetails;
		
		private EntitySet<ReportCardPosition> _ReportCardPositions;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<LessonNote> _LessonNotes;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<StudentScoreCategory> _StudentScoreCategories;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<ScoreCategoryConfiguration> _ScoreCategoryConfigurations;
		
		private EntitySet<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfigurations;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<NewsLetter> _NewsLetters;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<AcademicSession> _AcademicSessions;
		
		private EntitySet<ReportCardPrintConfig> _ReportCardPrintConfigs;
		
		private EntitySet<ExternalResourceLink> _ExternalResourceLinks;
		
		private EntitySet<ExternalResourceDocument> _ExternalResourceDocuments;
		
		private EntitySet<ExternalResourceMultimedia> _ExternalResourceMultimedias;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAcademicTermNameChanging(string value);
    partial void OnAcademicTermNameChanged();
    #endregion
		
		public AcademicTerm1()
		{
			this._AttendanceRegisters = new EntitySet<AttendanceRegister>(new Action<AttendanceRegister>(this.attach_AttendanceRegisters), new Action<AttendanceRegister>(this.detach_AttendanceRegisters));
			this._Batches = new EntitySet<Batch>(new Action<Batch>(this.attach_Batches), new Action<Batch>(this.detach_Batches));
			this._BatchStudents = new EntitySet<BatchStudent>(new Action<BatchStudent>(this.attach_BatchStudents), new Action<BatchStudent>(this.detach_BatchStudents));
			this._SubscriptionPaymentDetails = new EntitySet<SubscriptionPaymentDetail>(new Action<SubscriptionPaymentDetail>(this.attach_SubscriptionPaymentDetails), new Action<SubscriptionPaymentDetail>(this.detach_SubscriptionPaymentDetails));
			this._ReportCardPositions = new EntitySet<ReportCardPosition>(new Action<ReportCardPosition>(this.attach_ReportCardPositions), new Action<ReportCardPosition>(this.detach_ReportCardPositions));
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._LessonNotes = new EntitySet<LessonNote>(new Action<LessonNote>(this.attach_LessonNotes), new Action<LessonNote>(this.detach_LessonNotes));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._StudentScoreCategories = new EntitySet<StudentScoreCategory>(new Action<StudentScoreCategory>(this.attach_StudentScoreCategories), new Action<StudentScoreCategory>(this.detach_StudentScoreCategories));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._ScoreCategoryConfigurations = new EntitySet<ScoreCategoryConfiguration>(new Action<ScoreCategoryConfiguration>(this.attach_ScoreCategoryConfigurations), new Action<ScoreCategoryConfiguration>(this.detach_ScoreCategoryConfigurations));
			this._ScoreSubCategoryConfigurations = new EntitySet<ScoreSubCategoryConfiguration>(new Action<ScoreSubCategoryConfiguration>(this.attach_ScoreSubCategoryConfigurations), new Action<ScoreSubCategoryConfiguration>(this.detach_ScoreSubCategoryConfigurations));
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			this._PaymentPermanents = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents), new Action<PaymentPermanent>(this.detach_PaymentPermanents));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._NewsLetters = new EntitySet<NewsLetter>(new Action<NewsLetter>(this.attach_NewsLetters), new Action<NewsLetter>(this.detach_NewsLetters));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._AcademicSessions = new EntitySet<AcademicSession>(new Action<AcademicSession>(this.attach_AcademicSessions), new Action<AcademicSession>(this.detach_AcademicSessions));
			this._ReportCardPrintConfigs = new EntitySet<ReportCardPrintConfig>(new Action<ReportCardPrintConfig>(this.attach_ReportCardPrintConfigs), new Action<ReportCardPrintConfig>(this.detach_ReportCardPrintConfigs));
			this._ExternalResourceLinks = new EntitySet<ExternalResourceLink>(new Action<ExternalResourceLink>(this.attach_ExternalResourceLinks), new Action<ExternalResourceLink>(this.detach_ExternalResourceLinks));
			this._ExternalResourceDocuments = new EntitySet<ExternalResourceDocument>(new Action<ExternalResourceDocument>(this.attach_ExternalResourceDocuments), new Action<ExternalResourceDocument>(this.detach_ExternalResourceDocuments));
			this._ExternalResourceMultimedias = new EntitySet<ExternalResourceMultimedia>(new Action<ExternalResourceMultimedia>(this.attach_ExternalResourceMultimedias), new Action<ExternalResourceMultimedia>(this.detach_ExternalResourceMultimedias));
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicTermName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AcademicTermName
		{
			get
			{
				return this._AcademicTermName;
			}
			set
			{
				if ((this._AcademicTermName != value))
				{
					this.OnAcademicTermNameChanging(value);
					this.SendPropertyChanging();
					this._AcademicTermName = value;
					this.SendPropertyChanged("AcademicTermName");
					this.OnAcademicTermNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_AttendanceRegister", Storage="_AttendanceRegisters", ThisKey="Id", OtherKey="AcademicTermId")]
		public EntitySet<AttendanceRegister> AttendanceRegisters
		{
			get
			{
				return this._AttendanceRegisters;
			}
			set
			{
				this._AttendanceRegisters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_Batch", Storage="_Batches", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<Batch> Batches
		{
			get
			{
				return this._Batches;
			}
			set
			{
				this._Batches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_BatchStudent", Storage="_BatchStudents", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<BatchStudent> BatchStudents
		{
			get
			{
				return this._BatchStudents;
			}
			set
			{
				this._BatchStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_SubscriptionPaymentDetail", Storage="_SubscriptionPaymentDetails", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<SubscriptionPaymentDetail> SubscriptionPaymentDetails
		{
			get
			{
				return this._SubscriptionPaymentDetails;
			}
			set
			{
				this._SubscriptionPaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardPosition", Storage="_ReportCardPositions", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this._ReportCardPositions;
			}
			set
			{
				this._ReportCardPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_LessonNote", Storage="_LessonNotes", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<LessonNote> LessonNotes
		{
			get
			{
				return this._LessonNotes;
			}
			set
			{
				this._LessonNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardData", Storage="_ReportCardDatas", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreCategory", Storage="_StudentScoreCategories", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this._StudentScoreCategories;
			}
			set
			{
				this._StudentScoreCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ScoreCategoryConfiguration", Storage="_ScoreCategoryConfigurations", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ScoreCategoryConfiguration> ScoreCategoryConfigurations
		{
			get
			{
				return this._ScoreCategoryConfigurations;
			}
			set
			{
				this._ScoreCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ScoreSubCategoryConfiguration", Storage="_ScoreSubCategoryConfigurations", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ScoreSubCategoryConfiguration> ScoreSubCategoryConfigurations
		{
			get
			{
				return this._ScoreSubCategoryConfigurations;
			}
			set
			{
				this._ScoreSubCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardComment", Storage="_ReportCardComments", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_PaymentPermanent", Storage="_PaymentPermanents", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this._PaymentPermanents;
			}
			set
			{
				this._PaymentPermanents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_NewsLetter", Storage="_NewsLetters", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<NewsLetter> NewsLetters
		{
			get
			{
				return this._NewsLetters;
			}
			set
			{
				this._NewsLetters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_AcademicSession", Storage="_AcademicSessions", ThisKey="Id", OtherKey="AcademicTermId")]
		public EntitySet<AcademicSession> AcademicSessions
		{
			get
			{
				return this._AcademicSessions;
			}
			set
			{
				this._AcademicSessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardPrintConfig", Storage="_ReportCardPrintConfigs", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this._ReportCardPrintConfigs;
			}
			set
			{
				this._ReportCardPrintConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ExternalResourceLink", Storage="_ExternalResourceLinks", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ExternalResourceLink> ExternalResourceLinks
		{
			get
			{
				return this._ExternalResourceLinks;
			}
			set
			{
				this._ExternalResourceLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ExternalResourceDocument", Storage="_ExternalResourceDocuments", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ExternalResourceDocument> ExternalResourceDocuments
		{
			get
			{
				return this._ExternalResourceDocuments;
			}
			set
			{
				this._ExternalResourceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ExternalResourceMultimedia", Storage="_ExternalResourceMultimedias", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this._ExternalResourceMultimedias;
			}
			set
			{
				this._ExternalResourceMultimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendanceRegisters(AttendanceRegister entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_AttendanceRegisters(AttendanceRegister entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_Batches(Batch entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_Batches(Batch entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_AcademicSessions(AcademicSession entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_AcademicSessions(AcademicSession entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.AcademicTerm1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivitiesList")]
	public partial class ActivitiesList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _ExtraCurricularActivitiesName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnExtraCurricularActivitiesNameChanging(string value);
    partial void OnExtraCurricularActivitiesNameChanged();
    #endregion
		
		public ActivitiesList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraCurricularActivitiesName", DbType="NVarChar(100)")]
		public string ExtraCurricularActivitiesName
		{
			get
			{
				return this._ExtraCurricularActivitiesName;
			}
			set
			{
				if ((this._ExtraCurricularActivitiesName != value))
				{
					this.OnExtraCurricularActivitiesNameChanging(value);
					this.SendPropertyChanging();
					this._ExtraCurricularActivitiesName = value;
					this.SendPropertyChanged("ExtraCurricularActivitiesName");
					this.OnExtraCurricularActivitiesNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionApp")]
	public partial class AdmissionApp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ApplicationID;
		
		private System.Nullable<long> _ParentAdmissionUserId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _Gender;
		
		private System.DateTime _LastLoginDate;
		
		private string _AdmissionNumber;
		
		private string _DateOfBirth;
		
		private string _Occupation;
		
		private string _PlaceOfWork;
		
		private string _GuardianName;
		
		private string _GuardianPhoneNumber;
		
		private string _GuardianAddress;
		
		private string _GuardianEmail;
		
		private System.Nullable<long> _AdmissionSessionId;
		
		private string _GuardianRelationship;
		
		private string _SpecialNoteAlert;
		
		private string _LastSchoolAttended;
		
		private string _LastSchoolAttendedYear;
		
		private string _LastSchoolAttendedAddress;
		
		private string _LastSchoolAttendedClass;
		
		private string _AccomodationType;
		
		private string _Disability;
		
		private string _PassportFileName;
		
		private System.Nullable<int> _IsLearningSupport;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _UserStatus;
		
		private EntitySet<AdmissionApplicationList> _AdmissionApplicationLists;
		
		private EntitySet<AdmissionPayment> _AdmissionPayments;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AdmissionUser> _AdmissionUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicationIDChanging(string value);
    partial void OnApplicationIDChanged();
    partial void OnParentAdmissionUserIdChanging(System.Nullable<long> value);
    partial void OnParentAdmissionUserIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnDateOfBirthChanging(string value);
    partial void OnDateOfBirthChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnPlaceOfWorkChanging(string value);
    partial void OnPlaceOfWorkChanged();
    partial void OnGuardianNameChanging(string value);
    partial void OnGuardianNameChanged();
    partial void OnGuardianPhoneNumberChanging(string value);
    partial void OnGuardianPhoneNumberChanged();
    partial void OnGuardianAddressChanging(string value);
    partial void OnGuardianAddressChanged();
    partial void OnGuardianEmailChanging(string value);
    partial void OnGuardianEmailChanged();
    partial void OnAdmissionSessionIdChanging(System.Nullable<long> value);
    partial void OnAdmissionSessionIdChanged();
    partial void OnGuardianRelationshipChanging(string value);
    partial void OnGuardianRelationshipChanged();
    partial void OnSpecialNoteAlertChanging(string value);
    partial void OnSpecialNoteAlertChanged();
    partial void OnLastSchoolAttendedChanging(string value);
    partial void OnLastSchoolAttendedChanged();
    partial void OnLastSchoolAttendedYearChanging(string value);
    partial void OnLastSchoolAttendedYearChanged();
    partial void OnLastSchoolAttendedAddressChanging(string value);
    partial void OnLastSchoolAttendedAddressChanged();
    partial void OnLastSchoolAttendedClassChanging(string value);
    partial void OnLastSchoolAttendedClassChanged();
    partial void OnAccomodationTypeChanging(string value);
    partial void OnAccomodationTypeChanged();
    partial void OnDisabilityChanging(string value);
    partial void OnDisabilityChanged();
    partial void OnPassportFileNameChanging(string value);
    partial void OnPassportFileNameChanged();
    partial void OnIsLearningSupportChanging(System.Nullable<int> value);
    partial void OnIsLearningSupportChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnUserStatusChanging(System.Nullable<int> value);
    partial void OnUserStatusChanged();
    #endregion
		
		public AdmissionApp()
		{
			this._AdmissionApplicationLists = new EntitySet<AdmissionApplicationList>(new Action<AdmissionApplicationList>(this.attach_AdmissionApplicationLists), new Action<AdmissionApplicationList>(this.detach_AdmissionApplicationLists));
			this._AdmissionPayments = new EntitySet<AdmissionPayment>(new Action<AdmissionPayment>(this.attach_AdmissionPayments), new Action<AdmissionPayment>(this.detach_AdmissionPayments));
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AdmissionUser = default(EntityRef<AdmissionUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentAdmissionUserId", DbType="BigInt")]
		public System.Nullable<long> ParentAdmissionUserId
		{
			get
			{
				return this._ParentAdmissionUserId;
			}
			set
			{
				if ((this._ParentAdmissionUserId != value))
				{
					if (this._AdmissionUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentAdmissionUserIdChanging(value);
					this.SendPropertyChanging();
					this._ParentAdmissionUserId = value;
					this.SendPropertyChanged("ParentAdmissionUserId");
					this.OnParentAdmissionUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(100)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(100)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(100)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfWork", DbType="VarChar(100)")]
		public string PlaceOfWork
		{
			get
			{
				return this._PlaceOfWork;
			}
			set
			{
				if ((this._PlaceOfWork != value))
				{
					this.OnPlaceOfWorkChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfWork = value;
					this.SendPropertyChanged("PlaceOfWork");
					this.OnPlaceOfWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianName", DbType="VarChar(1000)")]
		public string GuardianName
		{
			get
			{
				return this._GuardianName;
			}
			set
			{
				if ((this._GuardianName != value))
				{
					this.OnGuardianNameChanging(value);
					this.SendPropertyChanging();
					this._GuardianName = value;
					this.SendPropertyChanged("GuardianName");
					this.OnGuardianNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianPhoneNumber", DbType="VarChar(100)")]
		public string GuardianPhoneNumber
		{
			get
			{
				return this._GuardianPhoneNumber;
			}
			set
			{
				if ((this._GuardianPhoneNumber != value))
				{
					this.OnGuardianPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._GuardianPhoneNumber = value;
					this.SendPropertyChanged("GuardianPhoneNumber");
					this.OnGuardianPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianAddress", DbType="VarChar(100)")]
		public string GuardianAddress
		{
			get
			{
				return this._GuardianAddress;
			}
			set
			{
				if ((this._GuardianAddress != value))
				{
					this.OnGuardianAddressChanging(value);
					this.SendPropertyChanging();
					this._GuardianAddress = value;
					this.SendPropertyChanged("GuardianAddress");
					this.OnGuardianAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianEmail", DbType="VarChar(100)")]
		public string GuardianEmail
		{
			get
			{
				return this._GuardianEmail;
			}
			set
			{
				if ((this._GuardianEmail != value))
				{
					this.OnGuardianEmailChanging(value);
					this.SendPropertyChanging();
					this._GuardianEmail = value;
					this.SendPropertyChanged("GuardianEmail");
					this.OnGuardianEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionSessionId", DbType="BigInt")]
		public System.Nullable<long> AdmissionSessionId
		{
			get
			{
				return this._AdmissionSessionId;
			}
			set
			{
				if ((this._AdmissionSessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmissionSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AdmissionSessionId = value;
					this.SendPropertyChanged("AdmissionSessionId");
					this.OnAdmissionSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianRelationship", DbType="VarChar(100)")]
		public string GuardianRelationship
		{
			get
			{
				return this._GuardianRelationship;
			}
			set
			{
				if ((this._GuardianRelationship != value))
				{
					this.OnGuardianRelationshipChanging(value);
					this.SendPropertyChanging();
					this._GuardianRelationship = value;
					this.SendPropertyChanged("GuardianRelationship");
					this.OnGuardianRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialNoteAlert", DbType="VarChar(200)")]
		public string SpecialNoteAlert
		{
			get
			{
				return this._SpecialNoteAlert;
			}
			set
			{
				if ((this._SpecialNoteAlert != value))
				{
					this.OnSpecialNoteAlertChanging(value);
					this.SendPropertyChanging();
					this._SpecialNoteAlert = value;
					this.SendPropertyChanged("SpecialNoteAlert");
					this.OnSpecialNoteAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttended", DbType="VarChar(500)")]
		public string LastSchoolAttended
		{
			get
			{
				return this._LastSchoolAttended;
			}
			set
			{
				if ((this._LastSchoolAttended != value))
				{
					this.OnLastSchoolAttendedChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttended = value;
					this.SendPropertyChanged("LastSchoolAttended");
					this.OnLastSchoolAttendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttendedYear", DbType="VarChar(50)")]
		public string LastSchoolAttendedYear
		{
			get
			{
				return this._LastSchoolAttendedYear;
			}
			set
			{
				if ((this._LastSchoolAttendedYear != value))
				{
					this.OnLastSchoolAttendedYearChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttendedYear = value;
					this.SendPropertyChanged("LastSchoolAttendedYear");
					this.OnLastSchoolAttendedYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttendedAddress", DbType="VarChar(100)")]
		public string LastSchoolAttendedAddress
		{
			get
			{
				return this._LastSchoolAttendedAddress;
			}
			set
			{
				if ((this._LastSchoolAttendedAddress != value))
				{
					this.OnLastSchoolAttendedAddressChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttendedAddress = value;
					this.SendPropertyChanged("LastSchoolAttendedAddress");
					this.OnLastSchoolAttendedAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttendedClass", DbType="VarChar(50)")]
		public string LastSchoolAttendedClass
		{
			get
			{
				return this._LastSchoolAttendedClass;
			}
			set
			{
				if ((this._LastSchoolAttendedClass != value))
				{
					this.OnLastSchoolAttendedClassChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttendedClass = value;
					this.SendPropertyChanged("LastSchoolAttendedClass");
					this.OnLastSchoolAttendedClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationType", DbType="VarChar(50)")]
		public string AccomodationType
		{
			get
			{
				return this._AccomodationType;
			}
			set
			{
				if ((this._AccomodationType != value))
				{
					this.OnAccomodationTypeChanging(value);
					this.SendPropertyChanging();
					this._AccomodationType = value;
					this.SendPropertyChanged("AccomodationType");
					this.OnAccomodationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disability", DbType="VarChar(500)")]
		public string Disability
		{
			get
			{
				return this._Disability;
			}
			set
			{
				if ((this._Disability != value))
				{
					this.OnDisabilityChanging(value);
					this.SendPropertyChanging();
					this._Disability = value;
					this.SendPropertyChanged("Disability");
					this.OnDisabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportFileName", DbType="VarChar(200)")]
		public string PassportFileName
		{
			get
			{
				return this._PassportFileName;
			}
			set
			{
				if ((this._PassportFileName != value))
				{
					this.OnPassportFileNameChanging(value);
					this.SendPropertyChanging();
					this._PassportFileName = value;
					this.SendPropertyChanged("PassportFileName");
					this.OnPassportFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLearningSupport", DbType="Int")]
		public System.Nullable<int> IsLearningSupport
		{
			get
			{
				return this._IsLearningSupport;
			}
			set
			{
				if ((this._IsLearningSupport != value))
				{
					this.OnIsLearningSupportChanging(value);
					this.SendPropertyChanging();
					this._IsLearningSupport = value;
					this.SendPropertyChanged("IsLearningSupport");
					this.OnIsLearningSupportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatus", DbType="Int")]
		public System.Nullable<int> UserStatus
		{
			get
			{
				return this._UserStatus;
			}
			set
			{
				if ((this._UserStatus != value))
				{
					this.OnUserStatusChanging(value);
					this.SendPropertyChanging();
					this._UserStatus = value;
					this.SendPropertyChanged("UserStatus");
					this.OnUserStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionApp_AdmissionApplicationList", Storage="_AdmissionApplicationLists", ThisKey="ApplicationID", OtherKey="ApplicantId")]
		public EntitySet<AdmissionApplicationList> AdmissionApplicationLists
		{
			get
			{
				return this._AdmissionApplicationLists;
			}
			set
			{
				this._AdmissionApplicationLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionApp_AdmissionPayment", Storage="_AdmissionPayments", ThisKey="ApplicationID", OtherKey="ApplicantId")]
		public EntitySet<AdmissionPayment> AdmissionPayments
		{
			get
			{
				return this._AdmissionPayments;
			}
			set
			{
				this._AdmissionPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_AdmissionApp", Storage="_AcademicSessionName", ThisKey="AdmissionSessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.AdmissionApps.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.AdmissionApps.Add(this);
						this._AdmissionSessionId = value.ID;
					}
					else
					{
						this._AdmissionSessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionUser_AdmissionApp", Storage="_AdmissionUser", ThisKey="ParentAdmissionUserId", OtherKey="Id", IsForeignKey=true)]
		public AdmissionUser AdmissionUser
		{
			get
			{
				return this._AdmissionUser.Entity;
			}
			set
			{
				AdmissionUser previousValue = this._AdmissionUser.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionUser.Entity = null;
						previousValue.AdmissionApps.Remove(this);
					}
					this._AdmissionUser.Entity = value;
					if ((value != null))
					{
						value.AdmissionApps.Add(this);
						this._ParentAdmissionUserId = value.Id;
					}
					else
					{
						this._ParentAdmissionUserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AdmissionUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionApplicationLists(AdmissionApplicationList entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionApp = this;
		}
		
		private void detach_AdmissionApplicationLists(AdmissionApplicationList entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionApp = null;
		}
		
		private void attach_AdmissionPayments(AdmissionPayment entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionApp = this;
		}
		
		private void detach_AdmissionPayments(AdmissionPayment entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionApp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionApplicationList")]
	public partial class AdmissionApplicationList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SchoolId;
		
		private string _ApplicantId;
		
		private System.Nullable<int> _InterviewScore;
		
		private System.Nullable<int> _TestScore;
		
		private string _Admissionstatus;
		
		private System.Nullable<int> _AdmissionApprovalStatus;
		
		private System.Nullable<int> _ProcessingLevel;
		
		private System.Nullable<System.DateTime> _DateApplied;
		
		private string _TestInvitation;
		
		private System.Nullable<int> _TestInvitationStatus;
		
		private string _DateScheduleforTest;
		
		private string _InterviewInvitation;
		
		private System.Nullable<int> _InterviewInvitationStatus;
		
		private string _DateScheduleforInterview;
		
		private System.Nullable<System.DateTime> _DateTestTaken;
		
		private System.Nullable<System.DateTime> _DateInterviewTaken;
		
		private System.Nullable<bool> _VerifyCredentails;
		
		private System.Data.Linq.Binary _VerifyCredentailsFile;
		
		private System.Nullable<bool> _VerifyFeesPayment;
		
		private System.Nullable<bool> _HasApplicantRegistered;
		
		private EntitySet<AdmissionPayment> _AdmissionPayments;
		
		private EntityRef<AdmissionApp> _AdmissionApp;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnApplicantIdChanging(string value);
    partial void OnApplicantIdChanged();
    partial void OnInterviewScoreChanging(System.Nullable<int> value);
    partial void OnInterviewScoreChanged();
    partial void OnTestScoreChanging(System.Nullable<int> value);
    partial void OnTestScoreChanged();
    partial void OnAdmissionstatusChanging(string value);
    partial void OnAdmissionstatusChanged();
    partial void OnAdmissionApprovalStatusChanging(System.Nullable<int> value);
    partial void OnAdmissionApprovalStatusChanged();
    partial void OnProcessingLevelChanging(System.Nullable<int> value);
    partial void OnProcessingLevelChanged();
    partial void OnDateAppliedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAppliedChanged();
    partial void OnTestInvitationChanging(string value);
    partial void OnTestInvitationChanged();
    partial void OnTestInvitationStatusChanging(System.Nullable<int> value);
    partial void OnTestInvitationStatusChanged();
    partial void OnDateScheduleforTestChanging(string value);
    partial void OnDateScheduleforTestChanged();
    partial void OnInterviewInvitationChanging(string value);
    partial void OnInterviewInvitationChanged();
    partial void OnInterviewInvitationStatusChanging(System.Nullable<int> value);
    partial void OnInterviewInvitationStatusChanged();
    partial void OnDateScheduleforInterviewChanging(string value);
    partial void OnDateScheduleforInterviewChanged();
    partial void OnDateTestTakenChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTestTakenChanged();
    partial void OnDateInterviewTakenChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInterviewTakenChanged();
    partial void OnVerifyCredentailsChanging(System.Nullable<bool> value);
    partial void OnVerifyCredentailsChanged();
    partial void OnVerifyCredentailsFileChanging(System.Data.Linq.Binary value);
    partial void OnVerifyCredentailsFileChanged();
    partial void OnVerifyFeesPaymentChanging(System.Nullable<bool> value);
    partial void OnVerifyFeesPaymentChanged();
    partial void OnHasApplicantRegisteredChanging(System.Nullable<bool> value);
    partial void OnHasApplicantRegisteredChanged();
    #endregion
		
		public AdmissionApplicationList()
		{
			this._AdmissionPayments = new EntitySet<AdmissionPayment>(new Action<AdmissionPayment>(this.attach_AdmissionPayments), new Action<AdmissionPayment>(this.detach_AdmissionPayments));
			this._AdmissionApp = default(EntityRef<AdmissionApp>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._AdmissionApp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewScore", DbType="Int")]
		public System.Nullable<int> InterviewScore
		{
			get
			{
				return this._InterviewScore;
			}
			set
			{
				if ((this._InterviewScore != value))
				{
					this.OnInterviewScoreChanging(value);
					this.SendPropertyChanging();
					this._InterviewScore = value;
					this.SendPropertyChanged("InterviewScore");
					this.OnInterviewScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScore", DbType="Int")]
		public System.Nullable<int> TestScore
		{
			get
			{
				return this._TestScore;
			}
			set
			{
				if ((this._TestScore != value))
				{
					this.OnTestScoreChanging(value);
					this.SendPropertyChanging();
					this._TestScore = value;
					this.SendPropertyChanged("TestScore");
					this.OnTestScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admissionstatus", DbType="VarChar(50)")]
		public string Admissionstatus
		{
			get
			{
				return this._Admissionstatus;
			}
			set
			{
				if ((this._Admissionstatus != value))
				{
					this.OnAdmissionstatusChanging(value);
					this.SendPropertyChanging();
					this._Admissionstatus = value;
					this.SendPropertyChanged("Admissionstatus");
					this.OnAdmissionstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionApprovalStatus", DbType="Int")]
		public System.Nullable<int> AdmissionApprovalStatus
		{
			get
			{
				return this._AdmissionApprovalStatus;
			}
			set
			{
				if ((this._AdmissionApprovalStatus != value))
				{
					this.OnAdmissionApprovalStatusChanging(value);
					this.SendPropertyChanging();
					this._AdmissionApprovalStatus = value;
					this.SendPropertyChanged("AdmissionApprovalStatus");
					this.OnAdmissionApprovalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingLevel", DbType="Int")]
		public System.Nullable<int> ProcessingLevel
		{
			get
			{
				return this._ProcessingLevel;
			}
			set
			{
				if ((this._ProcessingLevel != value))
				{
					this.OnProcessingLevelChanging(value);
					this.SendPropertyChanging();
					this._ProcessingLevel = value;
					this.SendPropertyChanged("ProcessingLevel");
					this.OnProcessingLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateApplied", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateApplied
		{
			get
			{
				return this._DateApplied;
			}
			set
			{
				if ((this._DateApplied != value))
				{
					this.OnDateAppliedChanging(value);
					this.SendPropertyChanging();
					this._DateApplied = value;
					this.SendPropertyChanged("DateApplied");
					this.OnDateAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInvitation", DbType="VarChar(MAX)")]
		public string TestInvitation
		{
			get
			{
				return this._TestInvitation;
			}
			set
			{
				if ((this._TestInvitation != value))
				{
					this.OnTestInvitationChanging(value);
					this.SendPropertyChanging();
					this._TestInvitation = value;
					this.SendPropertyChanged("TestInvitation");
					this.OnTestInvitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInvitationStatus", DbType="Int")]
		public System.Nullable<int> TestInvitationStatus
		{
			get
			{
				return this._TestInvitationStatus;
			}
			set
			{
				if ((this._TestInvitationStatus != value))
				{
					this.OnTestInvitationStatusChanging(value);
					this.SendPropertyChanging();
					this._TestInvitationStatus = value;
					this.SendPropertyChanged("TestInvitationStatus");
					this.OnTestInvitationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateScheduleforTest", DbType="VarChar(50)")]
		public string DateScheduleforTest
		{
			get
			{
				return this._DateScheduleforTest;
			}
			set
			{
				if ((this._DateScheduleforTest != value))
				{
					this.OnDateScheduleforTestChanging(value);
					this.SendPropertyChanging();
					this._DateScheduleforTest = value;
					this.SendPropertyChanged("DateScheduleforTest");
					this.OnDateScheduleforTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewInvitation", DbType="VarChar(MAX)")]
		public string InterviewInvitation
		{
			get
			{
				return this._InterviewInvitation;
			}
			set
			{
				if ((this._InterviewInvitation != value))
				{
					this.OnInterviewInvitationChanging(value);
					this.SendPropertyChanging();
					this._InterviewInvitation = value;
					this.SendPropertyChanged("InterviewInvitation");
					this.OnInterviewInvitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewInvitationStatus", DbType="Int")]
		public System.Nullable<int> InterviewInvitationStatus
		{
			get
			{
				return this._InterviewInvitationStatus;
			}
			set
			{
				if ((this._InterviewInvitationStatus != value))
				{
					this.OnInterviewInvitationStatusChanging(value);
					this.SendPropertyChanging();
					this._InterviewInvitationStatus = value;
					this.SendPropertyChanged("InterviewInvitationStatus");
					this.OnInterviewInvitationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateScheduleforInterview", DbType="VarChar(50)")]
		public string DateScheduleforInterview
		{
			get
			{
				return this._DateScheduleforInterview;
			}
			set
			{
				if ((this._DateScheduleforInterview != value))
				{
					this.OnDateScheduleforInterviewChanging(value);
					this.SendPropertyChanging();
					this._DateScheduleforInterview = value;
					this.SendPropertyChanged("DateScheduleforInterview");
					this.OnDateScheduleforInterviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTestTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTestTaken
		{
			get
			{
				return this._DateTestTaken;
			}
			set
			{
				if ((this._DateTestTaken != value))
				{
					this.OnDateTestTakenChanging(value);
					this.SendPropertyChanging();
					this._DateTestTaken = value;
					this.SendPropertyChanged("DateTestTaken");
					this.OnDateTestTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInterviewTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInterviewTaken
		{
			get
			{
				return this._DateInterviewTaken;
			}
			set
			{
				if ((this._DateInterviewTaken != value))
				{
					this.OnDateInterviewTakenChanging(value);
					this.SendPropertyChanging();
					this._DateInterviewTaken = value;
					this.SendPropertyChanged("DateInterviewTaken");
					this.OnDateInterviewTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCredentails", DbType="Bit")]
		public System.Nullable<bool> VerifyCredentails
		{
			get
			{
				return this._VerifyCredentails;
			}
			set
			{
				if ((this._VerifyCredentails != value))
				{
					this.OnVerifyCredentailsChanging(value);
					this.SendPropertyChanging();
					this._VerifyCredentails = value;
					this.SendPropertyChanged("VerifyCredentails");
					this.OnVerifyCredentailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCredentailsFile", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary VerifyCredentailsFile
		{
			get
			{
				return this._VerifyCredentailsFile;
			}
			set
			{
				if ((this._VerifyCredentailsFile != value))
				{
					this.OnVerifyCredentailsFileChanging(value);
					this.SendPropertyChanging();
					this._VerifyCredentailsFile = value;
					this.SendPropertyChanged("VerifyCredentailsFile");
					this.OnVerifyCredentailsFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyFeesPayment", DbType="Bit")]
		public System.Nullable<bool> VerifyFeesPayment
		{
			get
			{
				return this._VerifyFeesPayment;
			}
			set
			{
				if ((this._VerifyFeesPayment != value))
				{
					this.OnVerifyFeesPaymentChanging(value);
					this.SendPropertyChanging();
					this._VerifyFeesPayment = value;
					this.SendPropertyChanged("VerifyFeesPayment");
					this.OnVerifyFeesPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasApplicantRegistered", DbType="Bit")]
		public System.Nullable<bool> HasApplicantRegistered
		{
			get
			{
				return this._HasApplicantRegistered;
			}
			set
			{
				if ((this._HasApplicantRegistered != value))
				{
					this.OnHasApplicantRegisteredChanging(value);
					this.SendPropertyChanging();
					this._HasApplicantRegistered = value;
					this.SendPropertyChanged("HasApplicantRegistered");
					this.OnHasApplicantRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionApplicationList_AdmissionPayment", Storage="_AdmissionPayments", ThisKey="ID", OtherKey="ApplicationListId")]
		public EntitySet<AdmissionPayment> AdmissionPayments
		{
			get
			{
				return this._AdmissionPayments;
			}
			set
			{
				this._AdmissionPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionApp_AdmissionApplicationList", Storage="_AdmissionApp", ThisKey="ApplicantId", OtherKey="ApplicationID", IsForeignKey=true)]
		public AdmissionApp AdmissionApp
		{
			get
			{
				return this._AdmissionApp.Entity;
			}
			set
			{
				AdmissionApp previousValue = this._AdmissionApp.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionApp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionApp.Entity = null;
						previousValue.AdmissionApplicationLists.Remove(this);
					}
					this._AdmissionApp.Entity = value;
					if ((value != null))
					{
						value.AdmissionApplicationLists.Add(this);
						this._ApplicantId = value.ApplicationID;
					}
					else
					{
						this._ApplicantId = default(string);
					}
					this.SendPropertyChanged("AdmissionApp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionApplicationList", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.AdmissionApplicationLists.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.AdmissionApplicationLists.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionPayments(AdmissionPayment entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionApplicationList = this;
		}
		
		private void detach_AdmissionPayments(AdmissionPayment entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionApplicationList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionConfiguration")]
	public partial class AdmissionConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _SchoolId;
		
		private string _IsProcessAdmissionOnPassis;
		
		private string _AdmissionMode;
		
		private string _IsRedirect;
		
		private string _WebsiteUrl;
		
		private string _SelectFormFee;
		
		private string _FormFee;
		
		private string _AccountDetail;
		
		private string _MinimiumTestScore;
		
		private string _MinimiumInterviewScore;
		
		private System.Nullable<System.DateTime> _DateScheduleforTest;
		
		private System.Nullable<System.DateTime> _DateScheduleforInterview;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIdChanging(long value);
    partial void OnSchoolIdChanged();
    partial void OnIsProcessAdmissionOnPassisChanging(string value);
    partial void OnIsProcessAdmissionOnPassisChanged();
    partial void OnAdmissionModeChanging(string value);
    partial void OnAdmissionModeChanged();
    partial void OnIsRedirectChanging(string value);
    partial void OnIsRedirectChanged();
    partial void OnWebsiteUrlChanging(string value);
    partial void OnWebsiteUrlChanged();
    partial void OnSelectFormFeeChanging(string value);
    partial void OnSelectFormFeeChanged();
    partial void OnFormFeeChanging(string value);
    partial void OnFormFeeChanged();
    partial void OnAccountDetailChanging(string value);
    partial void OnAccountDetailChanged();
    partial void OnMinimiumTestScoreChanging(string value);
    partial void OnMinimiumTestScoreChanged();
    partial void OnMinimiumInterviewScoreChanging(string value);
    partial void OnMinimiumInterviewScoreChanged();
    partial void OnDateScheduleforTestChanging(System.Nullable<System.DateTime> value);
    partial void OnDateScheduleforTestChanged();
    partial void OnDateScheduleforInterviewChanging(System.Nullable<System.DateTime> value);
    partial void OnDateScheduleforInterviewChanged();
    #endregion
		
		public AdmissionConfiguration()
		{
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt NOT NULL")]
		public long SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessAdmissionOnPassis", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IsProcessAdmissionOnPassis
		{
			get
			{
				return this._IsProcessAdmissionOnPassis;
			}
			set
			{
				if ((this._IsProcessAdmissionOnPassis != value))
				{
					this.OnIsProcessAdmissionOnPassisChanging(value);
					this.SendPropertyChanging();
					this._IsProcessAdmissionOnPassis = value;
					this.SendPropertyChanged("IsProcessAdmissionOnPassis");
					this.OnIsProcessAdmissionOnPassisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionMode", DbType="VarChar(50)")]
		public string AdmissionMode
		{
			get
			{
				return this._AdmissionMode;
			}
			set
			{
				if ((this._AdmissionMode != value))
				{
					this.OnAdmissionModeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionMode = value;
					this.SendPropertyChanged("AdmissionMode");
					this.OnAdmissionModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRedirect", DbType="VarChar(50)")]
		public string IsRedirect
		{
			get
			{
				return this._IsRedirect;
			}
			set
			{
				if ((this._IsRedirect != value))
				{
					this.OnIsRedirectChanging(value);
					this.SendPropertyChanging();
					this._IsRedirect = value;
					this.SendPropertyChanged("IsRedirect");
					this.OnIsRedirectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteUrl", DbType="VarChar(100)")]
		public string WebsiteUrl
		{
			get
			{
				return this._WebsiteUrl;
			}
			set
			{
				if ((this._WebsiteUrl != value))
				{
					this.OnWebsiteUrlChanging(value);
					this.SendPropertyChanging();
					this._WebsiteUrl = value;
					this.SendPropertyChanged("WebsiteUrl");
					this.OnWebsiteUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectFormFee", DbType="VarChar(50)")]
		public string SelectFormFee
		{
			get
			{
				return this._SelectFormFee;
			}
			set
			{
				if ((this._SelectFormFee != value))
				{
					this.OnSelectFormFeeChanging(value);
					this.SendPropertyChanging();
					this._SelectFormFee = value;
					this.SendPropertyChanged("SelectFormFee");
					this.OnSelectFormFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormFee", DbType="VarChar(50)")]
		public string FormFee
		{
			get
			{
				return this._FormFee;
			}
			set
			{
				if ((this._FormFee != value))
				{
					this.OnFormFeeChanging(value);
					this.SendPropertyChanging();
					this._FormFee = value;
					this.SendPropertyChanged("FormFee");
					this.OnFormFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDetail", DbType="VarChar(50)")]
		public string AccountDetail
		{
			get
			{
				return this._AccountDetail;
			}
			set
			{
				if ((this._AccountDetail != value))
				{
					this.OnAccountDetailChanging(value);
					this.SendPropertyChanging();
					this._AccountDetail = value;
					this.SendPropertyChanged("AccountDetail");
					this.OnAccountDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimiumTestScore", DbType="VarChar(50)")]
		public string MinimiumTestScore
		{
			get
			{
				return this._MinimiumTestScore;
			}
			set
			{
				if ((this._MinimiumTestScore != value))
				{
					this.OnMinimiumTestScoreChanging(value);
					this.SendPropertyChanging();
					this._MinimiumTestScore = value;
					this.SendPropertyChanged("MinimiumTestScore");
					this.OnMinimiumTestScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimiumInterviewScore", DbType="VarChar(50)")]
		public string MinimiumInterviewScore
		{
			get
			{
				return this._MinimiumInterviewScore;
			}
			set
			{
				if ((this._MinimiumInterviewScore != value))
				{
					this.OnMinimiumInterviewScoreChanging(value);
					this.SendPropertyChanging();
					this._MinimiumInterviewScore = value;
					this.SendPropertyChanged("MinimiumInterviewScore");
					this.OnMinimiumInterviewScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateScheduleforTest", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateScheduleforTest
		{
			get
			{
				return this._DateScheduleforTest;
			}
			set
			{
				if ((this._DateScheduleforTest != value))
				{
					this.OnDateScheduleforTestChanging(value);
					this.SendPropertyChanging();
					this._DateScheduleforTest = value;
					this.SendPropertyChanged("DateScheduleforTest");
					this.OnDateScheduleforTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateScheduleforInterview", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateScheduleforInterview
		{
			get
			{
				return this._DateScheduleforInterview;
			}
			set
			{
				if ((this._DateScheduleforInterview != value))
				{
					this.OnDateScheduleforInterviewChanging(value);
					this.SendPropertyChanging();
					this._DateScheduleforInterview = value;
					this.SendPropertyChanged("DateScheduleforInterview");
					this.OnDateScheduleforInterviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionConfiguration", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.AdmissionConfigurations.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.AdmissionConfigurations.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(long);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionInterviewRequirement")]
	public partial class AdmissionInterviewRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private string _Item;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    #endregion
		
		public AdmissionInterviewRequirement()
		{
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(500)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionInterviewRequirement", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.AdmissionInterviewRequirements.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.AdmissionInterviewRequirements.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionPayment")]
	public partial class AdmissionPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SchoolId;
		
		private string _ApplicantId;
		
		private string _PaymentChannel;
		
		private string _AmountPaid;
		
		private string _PaymentDate;
		
		private string _BankReferenceNo;
		
		private System.Nullable<bool> _HasPaid;
		
		private System.Nullable<long> _ApplicationListId;
		
		private EntityRef<AdmissionApp> _AdmissionApp;
		
		private EntityRef<AdmissionApplicationList> _AdmissionApplicationList;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnApplicantIdChanging(string value);
    partial void OnApplicantIdChanged();
    partial void OnPaymentChannelChanging(string value);
    partial void OnPaymentChannelChanged();
    partial void OnAmountPaidChanging(string value);
    partial void OnAmountPaidChanged();
    partial void OnPaymentDateChanging(string value);
    partial void OnPaymentDateChanged();
    partial void OnBankReferenceNoChanging(string value);
    partial void OnBankReferenceNoChanged();
    partial void OnHasPaidChanging(System.Nullable<bool> value);
    partial void OnHasPaidChanged();
    partial void OnApplicationListIdChanging(System.Nullable<long> value);
    partial void OnApplicationListIdChanged();
    #endregion
		
		public AdmissionPayment()
		{
			this._AdmissionApp = default(EntityRef<AdmissionApp>);
			this._AdmissionApplicationList = default(EntityRef<AdmissionApplicationList>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="VarChar(50)")]
		public string ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._AdmissionApp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentChannel", DbType="VarChar(50)")]
		public string PaymentChannel
		{
			get
			{
				return this._PaymentChannel;
			}
			set
			{
				if ((this._PaymentChannel != value))
				{
					this.OnPaymentChannelChanging(value);
					this.SendPropertyChanging();
					this._PaymentChannel = value;
					this.SendPropertyChanged("PaymentChannel");
					this.OnPaymentChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="VarChar(50)")]
		public string AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="VarChar(50)")]
		public string PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankReferenceNo", DbType="VarChar(50)")]
		public string BankReferenceNo
		{
			get
			{
				return this._BankReferenceNo;
			}
			set
			{
				if ((this._BankReferenceNo != value))
				{
					this.OnBankReferenceNoChanging(value);
					this.SendPropertyChanging();
					this._BankReferenceNo = value;
					this.SendPropertyChanged("BankReferenceNo");
					this.OnBankReferenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPaid", DbType="Bit")]
		public System.Nullable<bool> HasPaid
		{
			get
			{
				return this._HasPaid;
			}
			set
			{
				if ((this._HasPaid != value))
				{
					this.OnHasPaidChanging(value);
					this.SendPropertyChanging();
					this._HasPaid = value;
					this.SendPropertyChanged("HasPaid");
					this.OnHasPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationListId", DbType="BigInt")]
		public System.Nullable<long> ApplicationListId
		{
			get
			{
				return this._ApplicationListId;
			}
			set
			{
				if ((this._ApplicationListId != value))
				{
					if (this._AdmissionApplicationList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationListIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationListId = value;
					this.SendPropertyChanged("ApplicationListId");
					this.OnApplicationListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionApp_AdmissionPayment", Storage="_AdmissionApp", ThisKey="ApplicantId", OtherKey="ApplicationID", IsForeignKey=true)]
		public AdmissionApp AdmissionApp
		{
			get
			{
				return this._AdmissionApp.Entity;
			}
			set
			{
				AdmissionApp previousValue = this._AdmissionApp.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionApp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionApp.Entity = null;
						previousValue.AdmissionPayments.Remove(this);
					}
					this._AdmissionApp.Entity = value;
					if ((value != null))
					{
						value.AdmissionPayments.Add(this);
						this._ApplicantId = value.ApplicationID;
					}
					else
					{
						this._ApplicantId = default(string);
					}
					this.SendPropertyChanged("AdmissionApp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionApplicationList_AdmissionPayment", Storage="_AdmissionApplicationList", ThisKey="ApplicationListId", OtherKey="ID", IsForeignKey=true)]
		public AdmissionApplicationList AdmissionApplicationList
		{
			get
			{
				return this._AdmissionApplicationList.Entity;
			}
			set
			{
				AdmissionApplicationList previousValue = this._AdmissionApplicationList.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionApplicationList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionApplicationList.Entity = null;
						previousValue.AdmissionPayments.Remove(this);
					}
					this._AdmissionApplicationList.Entity = value;
					if ((value != null))
					{
						value.AdmissionPayments.Add(this);
						this._ApplicationListId = value.ID;
					}
					else
					{
						this._ApplicationListId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AdmissionApplicationList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionPayment", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.AdmissionPayments.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.AdmissionPayments.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionTestRequirement")]
	public partial class AdmissionTestRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private string _Item;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    #endregion
		
		public AdmissionTestRequirement()
		{
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(500)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionTestRequirement", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.AdmissionTestRequirements.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.AdmissionTestRequirements.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionUsers")]
	public partial class AdmissionUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FIrstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Username;
		
		private string _Password;
		
		private EntitySet<AdmissionApp> _AdmissionApps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFIrstNameChanging(string value);
    partial void OnFIrstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public AdmissionUser()
		{
			this._AdmissionApps = new EntitySet<AdmissionApp>(new Action<AdmissionApp>(this.attach_AdmissionApps), new Action<AdmissionApp>(this.detach_AdmissionApps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIrstName", DbType="NVarChar(100)")]
		public string FIrstName
		{
			get
			{
				return this._FIrstName;
			}
			set
			{
				if ((this._FIrstName != value))
				{
					this.OnFIrstNameChanging(value);
					this.SendPropertyChanging();
					this._FIrstName = value;
					this.SendPropertyChanged("FIrstName");
					this.OnFIrstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionUser_AdmissionApp", Storage="_AdmissionApps", ThisKey="Id", OtherKey="ParentAdmissionUserId")]
		public EntitySet<AdmissionApp> AdmissionApps
		{
			get
			{
				return this._AdmissionApps;
			}
			set
			{
				this._AdmissionApps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionApps(AdmissionApp entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionUser = this;
		}
		
		private void detach_AdmissionApps(AdmissionApp entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assignments")]
	public partial class Assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Description;
		
		private string _FileName;
		
		private System.Nullable<long> _TeacherId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<decimal> _MaximumObtainableScore;
		
		private System.Nullable<long> _SessionId;
		
		private System.DateTime _DateUploaded;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<long> _GroupId;
		
		private EntitySet<AssignmentSubmitted> _AssignmentSubmitteds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnTeacherIdChanging(System.Nullable<long> value);
    partial void OnTeacherIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnMaximumObtainableScoreChanging(System.Nullable<decimal> value);
    partial void OnMaximumObtainableScoreChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnDateUploadedChanging(System.DateTime value);
    partial void OnDateUploadedChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnGroupIdChanging(System.Nullable<long> value);
    partial void OnGroupIdChanged();
    #endregion
		
		public Assignment()
		{
			this._AssignmentSubmitteds = new EntitySet<AssignmentSubmitted>(new Action<AssignmentSubmitted>(this.attach_AssignmentSubmitteds), new Action<AssignmentSubmitted>(this.detach_AssignmentSubmitteds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt")]
		public System.Nullable<long> TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumObtainableScore", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> MaximumObtainableScore
		{
			get
			{
				return this._MaximumObtainableScore;
			}
			set
			{
				if ((this._MaximumObtainableScore != value))
				{
					this.OnMaximumObtainableScoreChanging(value);
					this.SendPropertyChanging();
					this._MaximumObtainableScore = value;
					this.SendPropertyChanged("MaximumObtainableScore");
					this.OnMaximumObtainableScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUploaded", DbType="DateTime NOT NULL")]
		public System.DateTime DateUploaded
		{
			get
			{
				return this._DateUploaded;
			}
			set
			{
				if ((this._DateUploaded != value))
				{
					this.OnDateUploadedChanging(value);
					this.SendPropertyChanging();
					this._DateUploaded = value;
					this.SendPropertyChanged("DateUploaded");
					this.OnDateUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="BigInt")]
		public System.Nullable<long> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assignment_AssignmentSubmitted", Storage="_AssignmentSubmitteds", ThisKey="Id", OtherKey="AssignmentId")]
		public EntitySet<AssignmentSubmitted> AssignmentSubmitteds
		{
			get
			{
				return this._AssignmentSubmitteds;
			}
			set
			{
				this._AssignmentSubmitteds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssignmentSubmitteds(AssignmentSubmitted entity)
		{
			this.SendPropertyChanging();
			entity.Assignment = this;
		}
		
		private void detach_AssignmentSubmitteds(AssignmentSubmitted entity)
		{
			this.SendPropertyChanging();
			entity.Assignment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssignmentsGraded")]
	public partial class AssignmentsGraded : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SubmittedAssignmentId;
		
		private System.DateTime _DateUploaded;
		
		private string _GradedAssignmentFileName;
		
		private EntityRef<AssignmentSubmitted> _AssignmentSubmitted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSubmittedAssignmentIdChanging(long value);
    partial void OnSubmittedAssignmentIdChanged();
    partial void OnDateUploadedChanging(System.DateTime value);
    partial void OnDateUploadedChanged();
    partial void OnGradedAssignmentFileNameChanging(string value);
    partial void OnGradedAssignmentFileNameChanged();
    #endregion
		
		public AssignmentsGraded()
		{
			this._AssignmentSubmitted = default(EntityRef<AssignmentSubmitted>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedAssignmentId", DbType="BigInt NOT NULL")]
		public long SubmittedAssignmentId
		{
			get
			{
				return this._SubmittedAssignmentId;
			}
			set
			{
				if ((this._SubmittedAssignmentId != value))
				{
					if (this._AssignmentSubmitted.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmittedAssignmentIdChanging(value);
					this.SendPropertyChanging();
					this._SubmittedAssignmentId = value;
					this.SendPropertyChanged("SubmittedAssignmentId");
					this.OnSubmittedAssignmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUploaded", DbType="DateTime NOT NULL")]
		public System.DateTime DateUploaded
		{
			get
			{
				return this._DateUploaded;
			}
			set
			{
				if ((this._DateUploaded != value))
				{
					this.OnDateUploadedChanging(value);
					this.SendPropertyChanging();
					this._DateUploaded = value;
					this.SendPropertyChanged("DateUploaded");
					this.OnDateUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradedAssignmentFileName", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string GradedAssignmentFileName
		{
			get
			{
				return this._GradedAssignmentFileName;
			}
			set
			{
				if ((this._GradedAssignmentFileName != value))
				{
					this.OnGradedAssignmentFileNameChanging(value);
					this.SendPropertyChanging();
					this._GradedAssignmentFileName = value;
					this.SendPropertyChanged("GradedAssignmentFileName");
					this.OnGradedAssignmentFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssignmentSubmitted_AssignmentsGraded", Storage="_AssignmentSubmitted", ThisKey="SubmittedAssignmentId", OtherKey="Id", IsForeignKey=true)]
		public AssignmentSubmitted AssignmentSubmitted
		{
			get
			{
				return this._AssignmentSubmitted.Entity;
			}
			set
			{
				AssignmentSubmitted previousValue = this._AssignmentSubmitted.Entity;
				if (((previousValue != value) 
							|| (this._AssignmentSubmitted.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssignmentSubmitted.Entity = null;
						previousValue.AssignmentsGradeds.Remove(this);
					}
					this._AssignmentSubmitted.Entity = value;
					if ((value != null))
					{
						value.AssignmentsGradeds.Add(this);
						this._SubmittedAssignmentId = value.Id;
					}
					else
					{
						this._SubmittedAssignmentId = default(long);
					}
					this.SendPropertyChanged("AssignmentSubmitted");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssignmentSubmitted")]
	public partial class AssignmentSubmitted : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AssignmentId;
		
		private long _StudentId;
		
		private System.DateTime _DateSubmitted;
		
		private System.Nullable<decimal> _Mark;
		
		private string _StudentFileName;
		
		private System.Nullable<int> _MarkStatus;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _GroupId;
		
		private EntitySet<AssignmentsGraded> _AssignmentsGradeds;
		
		private EntityRef<Assignment> _Assignment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAssignmentIdChanging(long value);
    partial void OnAssignmentIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OnDateSubmittedChanging(System.DateTime value);
    partial void OnDateSubmittedChanged();
    partial void OnMarkChanging(System.Nullable<decimal> value);
    partial void OnMarkChanged();
    partial void OnStudentFileNameChanging(string value);
    partial void OnStudentFileNameChanged();
    partial void OnMarkStatusChanging(System.Nullable<int> value);
    partial void OnMarkStatusChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnGroupIdChanging(System.Nullable<long> value);
    partial void OnGroupIdChanged();
    #endregion
		
		public AssignmentSubmitted()
		{
			this._AssignmentsGradeds = new EntitySet<AssignmentsGraded>(new Action<AssignmentsGraded>(this.attach_AssignmentsGradeds), new Action<AssignmentsGraded>(this.detach_AssignmentsGradeds));
			this._Assignment = default(EntityRef<Assignment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentId", DbType="BigInt NOT NULL")]
		public long AssignmentId
		{
			get
			{
				return this._AssignmentId;
			}
			set
			{
				if ((this._AssignmentId != value))
				{
					if (this._Assignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignmentIdChanging(value);
					this.SendPropertyChanging();
					this._AssignmentId = value;
					this.SendPropertyChanged("AssignmentId");
					this.OnAssignmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSubmitted", DbType="DateTime NOT NULL")]
		public System.DateTime DateSubmitted
		{
			get
			{
				return this._DateSubmitted;
			}
			set
			{
				if ((this._DateSubmitted != value))
				{
					this.OnDateSubmittedChanging(value);
					this.SendPropertyChanging();
					this._DateSubmitted = value;
					this.SendPropertyChanged("DateSubmitted");
					this.OnDateSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentFileName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string StudentFileName
		{
			get
			{
				return this._StudentFileName;
			}
			set
			{
				if ((this._StudentFileName != value))
				{
					this.OnStudentFileNameChanging(value);
					this.SendPropertyChanging();
					this._StudentFileName = value;
					this.SendPropertyChanged("StudentFileName");
					this.OnStudentFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkStatus", DbType="Int")]
		public System.Nullable<int> MarkStatus
		{
			get
			{
				return this._MarkStatus;
			}
			set
			{
				if ((this._MarkStatus != value))
				{
					this.OnMarkStatusChanging(value);
					this.SendPropertyChanging();
					this._MarkStatus = value;
					this.SendPropertyChanged("MarkStatus");
					this.OnMarkStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="BigInt")]
		public System.Nullable<long> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssignmentSubmitted_AssignmentsGraded", Storage="_AssignmentsGradeds", ThisKey="Id", OtherKey="SubmittedAssignmentId")]
		public EntitySet<AssignmentsGraded> AssignmentsGradeds
		{
			get
			{
				return this._AssignmentsGradeds;
			}
			set
			{
				this._AssignmentsGradeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assignment_AssignmentSubmitted", Storage="_Assignment", ThisKey="AssignmentId", OtherKey="Id", IsForeignKey=true)]
		public Assignment Assignment
		{
			get
			{
				return this._Assignment.Entity;
			}
			set
			{
				Assignment previousValue = this._Assignment.Entity;
				if (((previousValue != value) 
							|| (this._Assignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assignment.Entity = null;
						previousValue.AssignmentSubmitteds.Remove(this);
					}
					this._Assignment.Entity = value;
					if ((value != null))
					{
						value.AssignmentSubmitteds.Add(this);
						this._AssignmentId = value.Id;
					}
					else
					{
						this._AssignmentId = default(long);
					}
					this.SendPropertyChanged("Assignment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssignmentsGradeds(AssignmentsGraded entity)
		{
			this.SendPropertyChanging();
			entity.AssignmentSubmitted = this;
		}
		
		private void detach_AssignmentsGradeds(AssignmentsGraded entity)
		{
			this.SendPropertyChanging();
			entity.AssignmentSubmitted = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendancePeriod")]
	public partial class AttendancePeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AttendancePeriodName;
		
		private EntitySet<AttendanceRegister> _AttendanceRegisters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAttendancePeriodNameChanging(string value);
    partial void OnAttendancePeriodNameChanged();
    #endregion
		
		public AttendancePeriod()
		{
			this._AttendanceRegisters = new EntitySet<AttendanceRegister>(new Action<AttendanceRegister>(this.attach_AttendanceRegisters), new Action<AttendanceRegister>(this.detach_AttendanceRegisters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendancePeriodName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AttendancePeriodName
		{
			get
			{
				return this._AttendancePeriodName;
			}
			set
			{
				if ((this._AttendancePeriodName != value))
				{
					this.OnAttendancePeriodNameChanging(value);
					this.SendPropertyChanging();
					this._AttendancePeriodName = value;
					this.SendPropertyChanged("AttendancePeriodName");
					this.OnAttendancePeriodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttendancePeriod_AttendanceRegister", Storage="_AttendanceRegisters", ThisKey="ID", OtherKey="AttendancePeriodID")]
		public EntitySet<AttendanceRegister> AttendanceRegisters
		{
			get
			{
				return this._AttendanceRegisters;
			}
			set
			{
				this._AttendanceRegisters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendanceRegisters(AttendanceRegister entity)
		{
			this.SendPropertyChanging();
			entity.AttendancePeriod = this;
		}
		
		private void detach_AttendanceRegisters(AttendanceRegister entity)
		{
			this.SendPropertyChanging();
			entity.AttendancePeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendanceRegister")]
	public partial class AttendanceRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AdmissionNo;
		
		private System.Nullable<long> _schoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<int> _PresentAbsent;
		
		private System.Nullable<System.DateTime> _AttendanceDate;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _AcademicSessionId;
		
		private System.Nullable<long> _AcademicTermId;
		
		private System.Nullable<int> _AttendancePeriodID;
		
		private System.Nullable<int> _AttendancePeriodIDMorning;
		
		private System.Nullable<int> _AttendancePeriodIDAfternoon;
		
		private System.Nullable<bool> _SupervisorApproval;
		
		private EntityRef<AttendanceRegister> _AttendanceRegister2;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<AttendancePeriod> _AttendancePeriod;
		
		private EntityRef<AttendanceRegister> _AttendanceRegister1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnschoolIdChanging(System.Nullable<long> value);
    partial void OnschoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnPresentAbsentChanging(System.Nullable<int> value);
    partial void OnPresentAbsentChanged();
    partial void OnAttendanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAttendanceDateChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnAcademicSessionIdChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIdChanged();
    partial void OnAcademicTermIdChanging(System.Nullable<long> value);
    partial void OnAcademicTermIdChanged();
    partial void OnAttendancePeriodIDChanging(System.Nullable<int> value);
    partial void OnAttendancePeriodIDChanged();
    partial void OnAttendancePeriodIDMorningChanging(System.Nullable<int> value);
    partial void OnAttendancePeriodIDMorningChanged();
    partial void OnAttendancePeriodIDAfternoonChanging(System.Nullable<int> value);
    partial void OnAttendancePeriodIDAfternoonChanged();
    partial void OnSupervisorApprovalChanging(System.Nullable<bool> value);
    partial void OnSupervisorApprovalChanged();
    #endregion
		
		public AttendanceRegister()
		{
			this._AttendanceRegister2 = default(EntityRef<AttendanceRegister>);
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._AttendancePeriod = default(EntityRef<AttendancePeriod>);
			this._AttendanceRegister1 = default(EntityRef<AttendanceRegister>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._AttendanceRegister1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="VarChar(50)")]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolId", DbType="BigInt")]
		public System.Nullable<long> schoolId
		{
			get
			{
				return this._schoolId;
			}
			set
			{
				if ((this._schoolId != value))
				{
					this.OnschoolIdChanging(value);
					this.SendPropertyChanging();
					this._schoolId = value;
					this.SendPropertyChanged("schoolId");
					this.OnschoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentAbsent", DbType="Int")]
		public System.Nullable<int> PresentAbsent
		{
			get
			{
				return this._PresentAbsent;
			}
			set
			{
				if ((this._PresentAbsent != value))
				{
					this.OnPresentAbsentChanging(value);
					this.SendPropertyChanging();
					this._PresentAbsent = value;
					this.SendPropertyChanged("PresentAbsent");
					this.OnPresentAbsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceDate", DbType="Date")]
		public System.Nullable<System.DateTime> AttendanceDate
		{
			get
			{
				return this._AttendanceDate;
			}
			set
			{
				if ((this._AttendanceDate != value))
				{
					this.OnAttendanceDateChanging(value);
					this.SendPropertyChanging();
					this._AttendanceDate = value;
					this.SendPropertyChanged("AttendanceDate");
					this.OnAttendanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionId", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionId
		{
			get
			{
				return this._AcademicSessionId;
			}
			set
			{
				if ((this._AcademicSessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionId = value;
					this.SendPropertyChanged("AcademicSessionId");
					this.OnAcademicSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicTermId", DbType="BigInt")]
		public System.Nullable<long> AcademicTermId
		{
			get
			{
				return this._AcademicTermId;
			}
			set
			{
				if ((this._AcademicTermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicTermIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicTermId = value;
					this.SendPropertyChanged("AcademicTermId");
					this.OnAcademicTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendancePeriodID", DbType="Int")]
		public System.Nullable<int> AttendancePeriodID
		{
			get
			{
				return this._AttendancePeriodID;
			}
			set
			{
				if ((this._AttendancePeriodID != value))
				{
					if (this._AttendancePeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendancePeriodIDChanging(value);
					this.SendPropertyChanging();
					this._AttendancePeriodID = value;
					this.SendPropertyChanged("AttendancePeriodID");
					this.OnAttendancePeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendancePeriodIDMorning", DbType="Int")]
		public System.Nullable<int> AttendancePeriodIDMorning
		{
			get
			{
				return this._AttendancePeriodIDMorning;
			}
			set
			{
				if ((this._AttendancePeriodIDMorning != value))
				{
					this.OnAttendancePeriodIDMorningChanging(value);
					this.SendPropertyChanging();
					this._AttendancePeriodIDMorning = value;
					this.SendPropertyChanged("AttendancePeriodIDMorning");
					this.OnAttendancePeriodIDMorningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendancePeriodIDAfternoon", DbType="Int")]
		public System.Nullable<int> AttendancePeriodIDAfternoon
		{
			get
			{
				return this._AttendancePeriodIDAfternoon;
			}
			set
			{
				if ((this._AttendancePeriodIDAfternoon != value))
				{
					this.OnAttendancePeriodIDAfternoonChanging(value);
					this.SendPropertyChanging();
					this._AttendancePeriodIDAfternoon = value;
					this.SendPropertyChanged("AttendancePeriodIDAfternoon");
					this.OnAttendancePeriodIDAfternoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorApproval", DbType="Bit")]
		public System.Nullable<bool> SupervisorApproval
		{
			get
			{
				return this._SupervisorApproval;
			}
			set
			{
				if ((this._SupervisorApproval != value))
				{
					this.OnSupervisorApprovalChanging(value);
					this.SendPropertyChanging();
					this._SupervisorApproval = value;
					this.SendPropertyChanged("SupervisorApproval");
					this.OnSupervisorApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttendanceRegister_AttendanceRegister", Storage="_AttendanceRegister2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public AttendanceRegister AttendanceRegister2
		{
			get
			{
				return this._AttendanceRegister2.Entity;
			}
			set
			{
				AttendanceRegister previousValue = this._AttendanceRegister2.Entity;
				if (((previousValue != value) 
							|| (this._AttendanceRegister2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttendanceRegister2.Entity = null;
						previousValue.AttendanceRegister1 = null;
					}
					this._AttendanceRegister2.Entity = value;
					if ((value != null))
					{
						value.AttendanceRegister1 = this;
					}
					this.SendPropertyChanged("AttendanceRegister2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_AttendanceRegister", Storage="_AcademicSessionName", ThisKey="AcademicSessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.AttendanceRegisters.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.AttendanceRegisters.Add(this);
						this._AcademicSessionId = value.ID;
					}
					else
					{
						this._AcademicSessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_AttendanceRegister", Storage="_AcademicTerm1", ThisKey="AcademicTermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.AttendanceRegisters.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.AttendanceRegisters.Add(this);
						this._AcademicTermId = value.Id;
					}
					else
					{
						this._AcademicTermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttendancePeriod_AttendanceRegister", Storage="_AttendancePeriod", ThisKey="AttendancePeriodID", OtherKey="ID", IsForeignKey=true)]
		public AttendancePeriod AttendancePeriod
		{
			get
			{
				return this._AttendancePeriod.Entity;
			}
			set
			{
				AttendancePeriod previousValue = this._AttendancePeriod.Entity;
				if (((previousValue != value) 
							|| (this._AttendancePeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttendancePeriod.Entity = null;
						previousValue.AttendanceRegisters.Remove(this);
					}
					this._AttendancePeriod.Entity = value;
					if ((value != null))
					{
						value.AttendanceRegisters.Add(this);
						this._AttendancePeriodID = value.ID;
					}
					else
					{
						this._AttendancePeriodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AttendancePeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttendanceRegister_AttendanceRegister", Storage="_AttendanceRegister1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public AttendanceRegister AttendanceRegister1
		{
			get
			{
				return this._AttendanceRegister1.Entity;
			}
			set
			{
				AttendanceRegister previousValue = this._AttendanceRegister1.Entity;
				if (((previousValue != value) 
							|| (this._AttendanceRegister1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttendanceRegister1.Entity = null;
						previousValue.AttendanceRegister2 = null;
					}
					this._AttendanceRegister1.Entity = value;
					if ((value != null))
					{
						value.AttendanceRegister2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("AttendanceRegister1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Batch")]
	public partial class Batch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _BatchDescription;
		
		private System.DateTime _DateCreated;
		
		private long _NumberOfFeesInBatch;
		
		private System.Nullable<long> _NumberOfStudentsInBatch;
		
		private System.Nullable<decimal> _BatchFeeAmountAgregate;
		
		private long _CreatedBy;
		
		private System.Nullable<decimal> _BillTotalAmount;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private EntitySet<BatchFee> _BatchFees;
		
		private EntitySet<BatchStudent> _BatchStudents;
		
		private EntitySet<TransactionLog> _TransactionLogs;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchDescriptionChanging(string value);
    partial void OnBatchDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnNumberOfFeesInBatchChanging(long value);
    partial void OnNumberOfFeesInBatchChanged();
    partial void OnNumberOfStudentsInBatchChanging(System.Nullable<long> value);
    partial void OnNumberOfStudentsInBatchChanged();
    partial void OnBatchFeeAmountAgregateChanging(System.Nullable<decimal> value);
    partial void OnBatchFeeAmountAgregateChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnBillTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnBillTotalAmountChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    #endregion
		
		public Batch()
		{
			this._BatchFees = new EntitySet<BatchFee>(new Action<BatchFee>(this.attach_BatchFees), new Action<BatchFee>(this.detach_BatchFees));
			this._BatchStudents = new EntitySet<BatchStudent>(new Action<BatchStudent>(this.attach_BatchStudents), new Action<BatchStudent>(this.detach_BatchStudents));
			this._TransactionLogs = new EntitySet<TransactionLog>(new Action<TransactionLog>(this.attach_TransactionLogs), new Action<TransactionLog>(this.detach_TransactionLogs));
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchDescription", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BatchDescription
		{
			get
			{
				return this._BatchDescription;
			}
			set
			{
				if ((this._BatchDescription != value))
				{
					this.OnBatchDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BatchDescription = value;
					this.SendPropertyChanged("BatchDescription");
					this.OnBatchDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfFeesInBatch", DbType="BigInt NOT NULL")]
		public long NumberOfFeesInBatch
		{
			get
			{
				return this._NumberOfFeesInBatch;
			}
			set
			{
				if ((this._NumberOfFeesInBatch != value))
				{
					this.OnNumberOfFeesInBatchChanging(value);
					this.SendPropertyChanging();
					this._NumberOfFeesInBatch = value;
					this.SendPropertyChanged("NumberOfFeesInBatch");
					this.OnNumberOfFeesInBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfStudentsInBatch", DbType="BigInt")]
		public System.Nullable<long> NumberOfStudentsInBatch
		{
			get
			{
				return this._NumberOfStudentsInBatch;
			}
			set
			{
				if ((this._NumberOfStudentsInBatch != value))
				{
					this.OnNumberOfStudentsInBatchChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStudentsInBatch = value;
					this.SendPropertyChanged("NumberOfStudentsInBatch");
					this.OnNumberOfStudentsInBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchFeeAmountAgregate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BatchFeeAmountAgregate
		{
			get
			{
				return this._BatchFeeAmountAgregate;
			}
			set
			{
				if ((this._BatchFeeAmountAgregate != value))
				{
					this.OnBatchFeeAmountAgregateChanging(value);
					this.SendPropertyChanging();
					this._BatchFeeAmountAgregate = value;
					this.SendPropertyChanged("BatchFeeAmountAgregate");
					this.OnBatchFeeAmountAgregateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillTotalAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BillTotalAmount
		{
			get
			{
				return this._BillTotalAmount;
			}
			set
			{
				if ((this._BillTotalAmount != value))
				{
					this.OnBillTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._BillTotalAmount = value;
					this.SendPropertyChanged("BillTotalAmount");
					this.OnBillTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_BatchFee", Storage="_BatchFees", ThisKey="Id", OtherKey="BatchId")]
		public EntitySet<BatchFee> BatchFees
		{
			get
			{
				return this._BatchFees;
			}
			set
			{
				this._BatchFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_BatchStudent", Storage="_BatchStudents", ThisKey="Id", OtherKey="BatchId")]
		public EntitySet<BatchStudent> BatchStudents
		{
			get
			{
				return this._BatchStudents;
			}
			set
			{
				this._BatchStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_TransactionLog", Storage="_TransactionLogs", ThisKey="Id", OtherKey="BatchId")]
		public EntitySet<TransactionLog> TransactionLogs
		{
			get
			{
				return this._TransactionLogs;
			}
			set
			{
				this._TransactionLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_Batch", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.Batches.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.Batches.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_Batch", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.Batches.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.Batches.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BatchFees(BatchFee entity)
		{
			this.SendPropertyChanging();
			entity.Batch = this;
		}
		
		private void detach_BatchFees(BatchFee entity)
		{
			this.SendPropertyChanging();
			entity.Batch = null;
		}
		
		private void attach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.Batch = this;
		}
		
		private void detach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.Batch = null;
		}
		
		private void attach_TransactionLogs(TransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.Batch = this;
		}
		
		private void detach_TransactionLogs(TransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.Batch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchFees")]
	public partial class BatchFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private long _FeeId;
		
		private System.Nullable<long> _FeeCountInBatch;
		
		private EntityRef<Batch> _Batch;
		
		private EntityRef<Fee> _Fee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnFeeIdChanging(long value);
    partial void OnFeeIdChanged();
    partial void OnFeeCountInBatchChanging(System.Nullable<long> value);
    partial void OnFeeCountInBatchChanged();
    #endregion
		
		public BatchFee()
		{
			this._Batch = default(EntityRef<Batch>);
			this._Fee = default(EntityRef<Fee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					if (this._Batch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeId", DbType="BigInt NOT NULL")]
		public long FeeId
		{
			get
			{
				return this._FeeId;
			}
			set
			{
				if ((this._FeeId != value))
				{
					if (this._Fee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeIdChanging(value);
					this.SendPropertyChanging();
					this._FeeId = value;
					this.SendPropertyChanged("FeeId");
					this.OnFeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeCountInBatch", DbType="BigInt")]
		public System.Nullable<long> FeeCountInBatch
		{
			get
			{
				return this._FeeCountInBatch;
			}
			set
			{
				if ((this._FeeCountInBatch != value))
				{
					this.OnFeeCountInBatchChanging(value);
					this.SendPropertyChanging();
					this._FeeCountInBatch = value;
					this.SendPropertyChanged("FeeCountInBatch");
					this.OnFeeCountInBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_BatchFee", Storage="_Batch", ThisKey="BatchId", OtherKey="Id", IsForeignKey=true)]
		public Batch Batch
		{
			get
			{
				return this._Batch.Entity;
			}
			set
			{
				Batch previousValue = this._Batch.Entity;
				if (((previousValue != value) 
							|| (this._Batch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Batch.Entity = null;
						previousValue.BatchFees.Remove(this);
					}
					this._Batch.Entity = value;
					if ((value != null))
					{
						value.BatchFees.Add(this);
						this._BatchId = value.Id;
					}
					else
					{
						this._BatchId = default(long);
					}
					this.SendPropertyChanged("Batch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fee_BatchFee", Storage="_Fee", ThisKey="FeeId", OtherKey="Id", IsForeignKey=true)]
		public Fee Fee
		{
			get
			{
				return this._Fee.Entity;
			}
			set
			{
				Fee previousValue = this._Fee.Entity;
				if (((previousValue != value) 
							|| (this._Fee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fee.Entity = null;
						previousValue.BatchFees.Remove(this);
					}
					this._Fee.Entity = value;
					if ((value != null))
					{
						value.BatchFees.Add(this);
						this._FeeId = value.Id;
					}
					else
					{
						this._FeeId = default(long);
					}
					this.SendPropertyChanged("Fee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchFeesForSage")]
	public partial class BatchFeesForSage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private long _FeeCount;
		
		private System.Nullable<long> _FeeCountInBatch;
		
		private string _AccountCode;
		
		private string _AccountDescription;
		
		private System.Nullable<decimal> _Amount;
		
		private string _AccountNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnFeeCountChanging(long value);
    partial void OnFeeCountChanged();
    partial void OnFeeCountInBatchChanging(System.Nullable<long> value);
    partial void OnFeeCountInBatchChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountDescriptionChanging(string value);
    partial void OnAccountDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    #endregion
		
		public BatchFeesForSage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeCount", DbType="BigInt NOT NULL")]
		public long FeeCount
		{
			get
			{
				return this._FeeCount;
			}
			set
			{
				if ((this._FeeCount != value))
				{
					this.OnFeeCountChanging(value);
					this.SendPropertyChanging();
					this._FeeCount = value;
					this.SendPropertyChanged("FeeCount");
					this.OnFeeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeCountInBatch", DbType="BigInt")]
		public System.Nullable<long> FeeCountInBatch
		{
			get
			{
				return this._FeeCountInBatch;
			}
			set
			{
				if ((this._FeeCountInBatch != value))
				{
					this.OnFeeCountInBatchChanging(value);
					this.SendPropertyChanging();
					this._FeeCountInBatch = value;
					this.SendPropertyChanged("FeeCountInBatch");
					this.OnFeeCountInBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="VarChar(100)")]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDescription", DbType="VarChar(100)")]
		public string AccountDescription
		{
			get
			{
				return this._AccountDescription;
			}
			set
			{
				if ((this._AccountDescription != value))
				{
					this.OnAccountDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AccountDescription = value;
					this.SendPropertyChanged("AccountDescription");
					this.OnAccountDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchStudent")]
	public partial class BatchStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private long _StudentId;
		
		private string _BillingId;
		
		private System.Nullable<long> _StudentCountInBatch;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<bool> _Status;
		
		private EntityRef<Batch> _Batch;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OnBillingIdChanging(string value);
    partial void OnBillingIdChanged();
    partial void OnStudentCountInBatchChanging(System.Nullable<long> value);
    partial void OnStudentCountInBatchChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSchoolCampusIdChanging(System.Nullable<long> value);
    partial void OnSchoolCampusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public BatchStudent()
		{
			this._Batch = default(EntityRef<Batch>);
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					if (this._Batch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingId
		{
			get
			{
				return this._BillingId;
			}
			set
			{
				if ((this._BillingId != value))
				{
					this.OnBillingIdChanging(value);
					this.SendPropertyChanging();
					this._BillingId = value;
					this.SendPropertyChanged("BillingId");
					this.OnBillingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCountInBatch", DbType="BigInt")]
		public System.Nullable<long> StudentCountInBatch
		{
			get
			{
				return this._StudentCountInBatch;
			}
			set
			{
				if ((this._StudentCountInBatch != value))
				{
					this.OnStudentCountInBatchChanging(value);
					this.SendPropertyChanging();
					this._StudentCountInBatch = value;
					this.SendPropertyChanged("StudentCountInBatch");
					this.OnStudentCountInBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_BatchStudent", Storage="_Batch", ThisKey="BatchId", OtherKey="Id", IsForeignKey=true)]
		public Batch Batch
		{
			get
			{
				return this._Batch.Entity;
			}
			set
			{
				Batch previousValue = this._Batch.Entity;
				if (((previousValue != value) 
							|| (this._Batch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Batch.Entity = null;
						previousValue.BatchStudents.Remove(this);
					}
					this._Batch.Entity = value;
					if ((value != null))
					{
						value.BatchStudents.Add(this);
						this._BatchId = value.Id;
					}
					else
					{
						this._BatchId = default(long);
					}
					this.SendPropertyChanged("Batch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_BatchStudent", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.BatchStudents.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.BatchStudents.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_BatchStudent", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.BatchStudents.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.BatchStudents.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_BatchStudent", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.BatchStudents.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.BatchStudents.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_BatchStudent", Storage="_SchoolCampus", ThisKey="SchoolCampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.BatchStudents.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.BatchStudents.Add(this);
						this._SchoolCampusId = value.Id;
					}
					else
					{
						this._SchoolCampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BatchStudent", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BatchStudents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BatchStudents.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_BatchStudent", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.BatchStudents.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.BatchStudents.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Behavioral")]
	public partial class Behavioral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Behavior;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBehaviorChanging(string value);
    partial void OnBehaviorChanged();
    #endregion
		
		public Behavioral()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Behavior", DbType="NVarChar(50)")]
		public string Behavior
		{
			get
			{
				return this._Behavior;
			}
			set
			{
				if ((this._Behavior != value))
				{
					this.OnBehaviorChanging(value);
					this.SendPropertyChanging();
					this._Behavior = value;
					this.SendPropertyChanged("Behavior");
					this.OnBehaviorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BehaviorRating")]
	public partial class BehaviorRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Rating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRatingChanging(string value);
    partial void OnRatingChanged();
    #endregion
		
		public BehaviorRating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="VarChar(50)")]
		public string Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BroadSheetDescriptionCode")]
	public partial class BroadSheetDescriptionCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DescriptionName;
		
		private EntitySet<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDescriptionNameChanging(string value);
    partial void OnDescriptionNameChanged();
    #endregion
		
		public BroadSheetDescriptionCode()
		{
			this._TestAssigenmentBroadSheetTemplates = new EntitySet<TestAssigenmentBroadSheetTemplate>(new Action<TestAssigenmentBroadSheetTemplate>(this.attach_TestAssigenmentBroadSheetTemplates), new Action<TestAssigenmentBroadSheetTemplate>(this.detach_TestAssigenmentBroadSheetTemplates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionName", DbType="VarChar(100)")]
		public string DescriptionName
		{
			get
			{
				return this._DescriptionName;
			}
			set
			{
				if ((this._DescriptionName != value))
				{
					this.OnDescriptionNameChanging(value);
					this.SendPropertyChanging();
					this._DescriptionName = value;
					this.SendPropertyChanged("DescriptionName");
					this.OnDescriptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BroadSheetDescriptionCode_TestAssigenmentBroadSheetTemplate", Storage="_TestAssigenmentBroadSheetTemplates", ThisKey="Id", OtherKey="DescriptionId")]
		public EntitySet<TestAssigenmentBroadSheetTemplate> TestAssigenmentBroadSheetTemplates
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplates;
			}
			set
			{
				this._TestAssigenmentBroadSheetTemplates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TestAssigenmentBroadSheetTemplates(TestAssigenmentBroadSheetTemplate entity)
		{
			this.SendPropertyChanging();
			entity.BroadSheetDescriptionCode = this;
		}
		
		private void detach_TestAssigenmentBroadSheetTemplates(TestAssigenmentBroadSheetTemplate entity)
		{
			this.SendPropertyChanging();
			entity.BroadSheetDescriptionCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardPaymentLogs")]
	public partial class CardPaymentLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ReferenceID;
		
		private string _ErrorCode;
		
		private string _ErrorDescription;
		
		private decimal _AmountPaid;
		
		private System.DateTime _LoggedDate;
		
		private string _CurrencyCode;
		
		private string _GatewayName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnReferenceIDChanging(long value);
    partial void OnReferenceIDChanged();
    partial void OnErrorCodeChanging(string value);
    partial void OnErrorCodeChanged();
    partial void OnErrorDescriptionChanging(string value);
    partial void OnErrorDescriptionChanged();
    partial void OnAmountPaidChanging(decimal value);
    partial void OnAmountPaidChanged();
    partial void OnLoggedDateChanging(System.DateTime value);
    partial void OnLoggedDateChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnGatewayNameChanging(string value);
    partial void OnGatewayNameChanged();
    #endregion
		
		public CardPaymentLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="BigInt NOT NULL")]
		public long ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="VarChar(5000)")]
		public string ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorDescription", DbType="VarChar(5000)")]
		public string ErrorDescription
		{
			get
			{
				return this._ErrorDescription;
			}
			set
			{
				if ((this._ErrorDescription != value))
				{
					this.OnErrorDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ErrorDescription = value;
					this.SendPropertyChanged("ErrorDescription");
					this.OnErrorDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoggedDate
		{
			get
			{
				return this._LoggedDate;
			}
			set
			{
				if ((this._LoggedDate != value))
				{
					this.OnLoggedDateChanging(value);
					this.SendPropertyChanging();
					this._LoggedDate = value;
					this.SendPropertyChanged("LoggedDate");
					this.OnLoggedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GatewayName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GatewayName
		{
			get
			{
				return this._GatewayName;
			}
			set
			{
				if ((this._GatewayName != value))
				{
					this.OnGatewayNameChanging(value);
					this.SendPropertyChanging();
					this._GatewayName = value;
					this.SendPropertyChanged("GatewayName");
					this.OnGatewayNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class_Grade")]
	public partial class Class_Grade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<long> _School;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private string _ClassSubjectIds;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _CurriculumId;
		
		private System.Nullable<int> _SchoolTypeId;
		
		private EntitySet<BatchStudent> _BatchStudents;
		
		private EntitySet<FeesConfig> _FeesConfigs;
		
		private EntitySet<Grade> _Grades;
		
		private EntitySet<GradeClassTeacher> _GradeClassTeachers;
		
		private EntitySet<OptionGroup> _OptionGroups;
		
		private EntitySet<ResultFormatConfig> _ResultFormatConfigs;
		
		private EntitySet<ScoreGradeConfiguration> _ScoreGradeConfigurations;
		
		private EntitySet<Subject_Theme> _Subject_Themes;
		
		private EntitySet<ReportCardPosition> _ReportCardPositions;
		
		private EntitySet<GradeStudent> _GradeStudents;
		
		private EntitySet<Alumni> _Alumnis;
		
		private EntitySet<PaymentFee> _PaymentFees;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<Subject> _Subjects;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<LessonNote> _LessonNotes;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<StudentScoreCategory> _StudentScoreCategories;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<ScoreCategoryConfiguration> _ScoreCategoryConfigurations;
		
		private EntitySet<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfigurations;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<SubjectTeacher> _SubjectTeachers;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<ReportCardPrintConfig> _ReportCardPrintConfigs;
		
		private EntitySet<ExternalResourceLink> _ExternalResourceLinks;
		
		private EntitySet<ExternalResourceDocument> _ExternalResourceDocuments;
		
		private EntitySet<ExternalResourceMultimedia> _ExternalResourceMultimedias;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnSchoolChanging(System.Nullable<long> value);
    partial void OnSchoolChanged();
    partial void OnSchoolCampusIdChanging(System.Nullable<long> value);
    partial void OnSchoolCampusIdChanged();
    partial void OnClassSubjectIdsChanging(string value);
    partial void OnClassSubjectIdsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCurriculumIdChanging(System.Nullable<int> value);
    partial void OnCurriculumIdChanged();
    partial void OnSchoolTypeIdChanging(System.Nullable<int> value);
    partial void OnSchoolTypeIdChanged();
    #endregion
		
		public Class_Grade()
		{
			this._BatchStudents = new EntitySet<BatchStudent>(new Action<BatchStudent>(this.attach_BatchStudents), new Action<BatchStudent>(this.detach_BatchStudents));
			this._FeesConfigs = new EntitySet<FeesConfig>(new Action<FeesConfig>(this.attach_FeesConfigs), new Action<FeesConfig>(this.detach_FeesConfigs));
			this._Grades = new EntitySet<Grade>(new Action<Grade>(this.attach_Grades), new Action<Grade>(this.detach_Grades));
			this._GradeClassTeachers = new EntitySet<GradeClassTeacher>(new Action<GradeClassTeacher>(this.attach_GradeClassTeachers), new Action<GradeClassTeacher>(this.detach_GradeClassTeachers));
			this._OptionGroups = new EntitySet<OptionGroup>(new Action<OptionGroup>(this.attach_OptionGroups), new Action<OptionGroup>(this.detach_OptionGroups));
			this._ResultFormatConfigs = new EntitySet<ResultFormatConfig>(new Action<ResultFormatConfig>(this.attach_ResultFormatConfigs), new Action<ResultFormatConfig>(this.detach_ResultFormatConfigs));
			this._ScoreGradeConfigurations = new EntitySet<ScoreGradeConfiguration>(new Action<ScoreGradeConfiguration>(this.attach_ScoreGradeConfigurations), new Action<ScoreGradeConfiguration>(this.detach_ScoreGradeConfigurations));
			this._Subject_Themes = new EntitySet<Subject_Theme>(new Action<Subject_Theme>(this.attach_Subject_Themes), new Action<Subject_Theme>(this.detach_Subject_Themes));
			this._ReportCardPositions = new EntitySet<ReportCardPosition>(new Action<ReportCardPosition>(this.attach_ReportCardPositions), new Action<ReportCardPosition>(this.detach_ReportCardPositions));
			this._GradeStudents = new EntitySet<GradeStudent>(new Action<GradeStudent>(this.attach_GradeStudents), new Action<GradeStudent>(this.detach_GradeStudents));
			this._Alumnis = new EntitySet<Alumni>(new Action<Alumni>(this.attach_Alumnis), new Action<Alumni>(this.detach_Alumnis));
			this._PaymentFees = new EntitySet<PaymentFee>(new Action<PaymentFee>(this.attach_PaymentFees), new Action<PaymentFee>(this.detach_PaymentFees));
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._Subjects = new EntitySet<Subject>(new Action<Subject>(this.attach_Subjects), new Action<Subject>(this.detach_Subjects));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._LessonNotes = new EntitySet<LessonNote>(new Action<LessonNote>(this.attach_LessonNotes), new Action<LessonNote>(this.detach_LessonNotes));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._StudentScoreCategories = new EntitySet<StudentScoreCategory>(new Action<StudentScoreCategory>(this.attach_StudentScoreCategories), new Action<StudentScoreCategory>(this.detach_StudentScoreCategories));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._ScoreCategoryConfigurations = new EntitySet<ScoreCategoryConfiguration>(new Action<ScoreCategoryConfiguration>(this.attach_ScoreCategoryConfigurations), new Action<ScoreCategoryConfiguration>(this.detach_ScoreCategoryConfigurations));
			this._ScoreSubCategoryConfigurations = new EntitySet<ScoreSubCategoryConfiguration>(new Action<ScoreSubCategoryConfiguration>(this.attach_ScoreSubCategoryConfigurations), new Action<ScoreSubCategoryConfiguration>(this.detach_ScoreSubCategoryConfigurations));
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._SubjectTeachers = new EntitySet<SubjectTeacher>(new Action<SubjectTeacher>(this.attach_SubjectTeachers), new Action<SubjectTeacher>(this.detach_SubjectTeachers));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			this._PaymentPermanents = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents), new Action<PaymentPermanent>(this.detach_PaymentPermanents));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._ReportCardPrintConfigs = new EntitySet<ReportCardPrintConfig>(new Action<ReportCardPrintConfig>(this.attach_ReportCardPrintConfigs), new Action<ReportCardPrintConfig>(this.detach_ReportCardPrintConfigs));
			this._ExternalResourceLinks = new EntitySet<ExternalResourceLink>(new Action<ExternalResourceLink>(this.attach_ExternalResourceLinks), new Action<ExternalResourceLink>(this.detach_ExternalResourceLinks));
			this._ExternalResourceDocuments = new EntitySet<ExternalResourceDocument>(new Action<ExternalResourceDocument>(this.attach_ExternalResourceDocuments), new Action<ExternalResourceDocument>(this.detach_ExternalResourceDocuments));
			this._ExternalResourceMultimedias = new EntitySet<ExternalResourceMultimedia>(new Action<ExternalResourceMultimedia>(this.attach_ExternalResourceMultimedias), new Action<ExternalResourceMultimedia>(this.detach_ExternalResourceMultimedias));
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School", DbType="BigInt")]
		public System.Nullable<long> School
		{
			get
			{
				return this._School;
			}
			set
			{
				if ((this._School != value))
				{
					this.OnSchoolChanging(value);
					this.SendPropertyChanging();
					this._School = value;
					this.SendPropertyChanged("School");
					this.OnSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassSubjectIds", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ClassSubjectIds
		{
			get
			{
				return this._ClassSubjectIds;
			}
			set
			{
				if ((this._ClassSubjectIds != value))
				{
					this.OnClassSubjectIdsChanging(value);
					this.SendPropertyChanging();
					this._ClassSubjectIds = value;
					this.SendPropertyChanged("ClassSubjectIds");
					this.OnClassSubjectIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurriculumId", DbType="Int")]
		public System.Nullable<int> CurriculumId
		{
			get
			{
				return this._CurriculumId;
			}
			set
			{
				if ((this._CurriculumId != value))
				{
					this.OnCurriculumIdChanging(value);
					this.SendPropertyChanging();
					this._CurriculumId = value;
					this.SendPropertyChanged("CurriculumId");
					this.OnCurriculumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolTypeId", DbType="Int")]
		public System.Nullable<int> SchoolTypeId
		{
			get
			{
				return this._SchoolTypeId;
			}
			set
			{
				if ((this._SchoolTypeId != value))
				{
					this.OnSchoolTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolTypeId = value;
					this.SendPropertyChanged("SchoolTypeId");
					this.OnSchoolTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_BatchStudent", Storage="_BatchStudents", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<BatchStudent> BatchStudents
		{
			get
			{
				return this._BatchStudents;
			}
			set
			{
				this._BatchStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_FeesConfig", Storage="_FeesConfigs", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<FeesConfig> FeesConfigs
		{
			get
			{
				return this._FeesConfigs;
			}
			set
			{
				this._FeesConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Grade", Storage="_Grades", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<Grade> Grades
		{
			get
			{
				return this._Grades;
			}
			set
			{
				this._Grades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_GradeClassTeacher", Storage="_GradeClassTeachers", ThisKey="Id", OtherKey="ClassGrade")]
		public EntitySet<GradeClassTeacher> GradeClassTeachers
		{
			get
			{
				return this._GradeClassTeachers;
			}
			set
			{
				this._GradeClassTeachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_OptionGroup", Storage="_OptionGroups", ThisKey="Id", OtherKey="YearId")]
		public EntitySet<OptionGroup> OptionGroups
		{
			get
			{
				return this._OptionGroups;
			}
			set
			{
				this._OptionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ResultFormatConfig", Storage="_ResultFormatConfigs", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ResultFormatConfig> ResultFormatConfigs
		{
			get
			{
				return this._ResultFormatConfigs;
			}
			set
			{
				this._ResultFormatConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ScoreGradeConfiguration", Storage="_ScoreGradeConfigurations", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<ScoreGradeConfiguration> ScoreGradeConfigurations
		{
			get
			{
				return this._ScoreGradeConfigurations;
			}
			set
			{
				this._ScoreGradeConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Subject_Theme", Storage="_Subject_Themes", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<Subject_Theme> Subject_Themes
		{
			get
			{
				return this._Subject_Themes;
			}
			set
			{
				this._Subject_Themes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardPosition", Storage="_ReportCardPositions", ThisKey="Id", OtherKey="YearId")]
		public EntitySet<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this._ReportCardPositions;
			}
			set
			{
				this._ReportCardPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_GradeStudent", Storage="_GradeStudents", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<GradeStudent> GradeStudents
		{
			get
			{
				return this._GradeStudents;
			}
			set
			{
				this._GradeStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Alumni", Storage="_Alumnis", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<Alumni> Alumnis
		{
			get
			{
				return this._Alumnis;
			}
			set
			{
				this._Alumnis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentFee", Storage="_PaymentFees", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<PaymentFee> PaymentFees
		{
			get
			{
				return this._PaymentFees;
			}
			set
			{
				this._PaymentFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Subject", Storage="_Subjects", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<Subject> Subjects
		{
			get
			{
				return this._Subjects;
			}
			set
			{
				this._Subjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_LessonNote", Storage="_LessonNotes", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<LessonNote> LessonNotes
		{
			get
			{
				return this._LessonNotes;
			}
			set
			{
				this._LessonNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardData", Storage="_ReportCardDatas", ThisKey="Id", OtherKey="YearId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreCategory", Storage="_StudentScoreCategories", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this._StudentScoreCategories;
			}
			set
			{
				this._StudentScoreCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ScoreCategoryConfiguration", Storage="_ScoreCategoryConfigurations", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<ScoreCategoryConfiguration> ScoreCategoryConfigurations
		{
			get
			{
				return this._ScoreCategoryConfigurations;
			}
			set
			{
				this._ScoreCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ScoreSubCategoryConfiguration", Storage="_ScoreSubCategoryConfigurations", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<ScoreSubCategoryConfiguration> ScoreSubCategoryConfigurations
		{
			get
			{
				return this._ScoreSubCategoryConfigurations;
			}
			set
			{
				this._ScoreSubCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardComment", Storage="_ReportCardComments", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_SubjectTeacher", Storage="_SubjectTeachers", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<SubjectTeacher> SubjectTeachers
		{
			get
			{
				return this._SubjectTeachers;
			}
			set
			{
				this._SubjectTeachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentPermanent", Storage="_PaymentPermanents", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this._PaymentPermanents;
			}
			set
			{
				this._PaymentPermanents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardPrintConfig", Storage="_ReportCardPrintConfigs", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this._ReportCardPrintConfigs;
			}
			set
			{
				this._ReportCardPrintConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ExternalResourceLink", Storage="_ExternalResourceLinks", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ExternalResourceLink> ExternalResourceLinks
		{
			get
			{
				return this._ExternalResourceLinks;
			}
			set
			{
				this._ExternalResourceLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ExternalResourceDocument", Storage="_ExternalResourceDocuments", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ExternalResourceDocument> ExternalResourceDocuments
		{
			get
			{
				return this._ExternalResourceDocuments;
			}
			set
			{
				this._ExternalResourceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ExternalResourceMultimedia", Storage="_ExternalResourceMultimedias", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this._ExternalResourceMultimedias;
			}
			set
			{
				this._ExternalResourceMultimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_Grades(Grade entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_Grades(Grade entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_GradeClassTeachers(GradeClassTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_GradeClassTeachers(GradeClassTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_OptionGroups(OptionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_OptionGroups(OptionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ResultFormatConfigs(ResultFormatConfig entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ResultFormatConfigs(ResultFormatConfig entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ScoreGradeConfigurations(ScoreGradeConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ScoreGradeConfigurations(ScoreGradeConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_Subject_Themes(Subject_Theme entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_Subject_Themes(Subject_Theme entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_GradeStudents(GradeStudent entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_GradeStudents(GradeStudent entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_SubjectTeachers(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_SubjectTeachers(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.Class_Grade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassAttendance")]
	public partial class ClassAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _AttendanceDate;
		
		private string _AdmissionNo;
		
		private System.Nullable<int> _IsPresentAbsent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnAttendanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAttendanceDateChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnIsPresentAbsentChanging(System.Nullable<int> value);
    partial void OnIsPresentAbsentChanged();
    #endregion
		
		public ClassAttendance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceDate", DbType="Date")]
		public System.Nullable<System.DateTime> AttendanceDate
		{
			get
			{
				return this._AttendanceDate;
			}
			set
			{
				if ((this._AttendanceDate != value))
				{
					this.OnAttendanceDateChanging(value);
					this.SendPropertyChanging();
					this._AttendanceDate = value;
					this.SendPropertyChanged("AttendanceDate");
					this.OnAttendanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="VarChar(50)")]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPresentAbsent", DbType="Int")]
		public System.Nullable<int> IsPresentAbsent
		{
			get
			{
				return this._IsPresentAbsent;
			}
			set
			{
				if ((this._IsPresentAbsent != value))
				{
					this.OnIsPresentAbsentChanging(value);
					this.SendPropertyChanging();
					this._IsPresentAbsent = value;
					this.SendPropertyChanged("IsPresentAbsent");
					this.OnIsPresentAbsentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public Currency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Curriculum")]
	public partial class Curriculum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CurriculumName;
		
		private EntityRef<Curriculum> _Curriculum2;
		
		private EntitySet<SchoolType> _SchoolTypes;
		
		private EntitySet<Subject> _Subjects;
		
		private EntitySet<School> _Schools;
		
		private EntityRef<Curriculum> _Curriculum1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCurriculumNameChanging(string value);
    partial void OnCurriculumNameChanged();
    #endregion
		
		public Curriculum()
		{
			this._Curriculum2 = default(EntityRef<Curriculum>);
			this._SchoolTypes = new EntitySet<SchoolType>(new Action<SchoolType>(this.attach_SchoolTypes), new Action<SchoolType>(this.detach_SchoolTypes));
			this._Subjects = new EntitySet<Subject>(new Action<Subject>(this.attach_Subjects), new Action<Subject>(this.detach_Subjects));
			this._Schools = new EntitySet<School>(new Action<School>(this.attach_Schools), new Action<School>(this.detach_Schools));
			this._Curriculum1 = default(EntityRef<Curriculum>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Curriculum1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurriculumName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurriculumName
		{
			get
			{
				return this._CurriculumName;
			}
			set
			{
				if ((this._CurriculumName != value))
				{
					this.OnCurriculumNameChanging(value);
					this.SendPropertyChanging();
					this._CurriculumName = value;
					this.SendPropertyChanged("CurriculumName");
					this.OnCurriculumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_Curriculum", Storage="_Curriculum2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Curriculum Curriculum2
		{
			get
			{
				return this._Curriculum2.Entity;
			}
			set
			{
				Curriculum previousValue = this._Curriculum2.Entity;
				if (((previousValue != value) 
							|| (this._Curriculum2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curriculum2.Entity = null;
						previousValue.Curriculum1 = null;
					}
					this._Curriculum2.Entity = value;
					if ((value != null))
					{
						value.Curriculum1 = this;
					}
					this.SendPropertyChanged("Curriculum2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_SchoolType", Storage="_SchoolTypes", ThisKey="Id", OtherKey="CurriculumId")]
		public EntitySet<SchoolType> SchoolTypes
		{
			get
			{
				return this._SchoolTypes;
			}
			set
			{
				this._SchoolTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_Subject", Storage="_Subjects", ThisKey="Id", OtherKey="CurriculumId")]
		public EntitySet<Subject> Subjects
		{
			get
			{
				return this._Subjects;
			}
			set
			{
				this._Subjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_School", Storage="_Schools", ThisKey="Id", OtherKey="CurriculumId")]
		public EntitySet<School> Schools
		{
			get
			{
				return this._Schools;
			}
			set
			{
				this._Schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_Curriculum", Storage="_Curriculum1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Curriculum Curriculum1
		{
			get
			{
				return this._Curriculum1.Entity;
			}
			set
			{
				Curriculum previousValue = this._Curriculum1.Entity;
				if (((previousValue != value) 
							|| (this._Curriculum1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curriculum1.Entity = null;
						previousValue.Curriculum2 = null;
					}
					this._Curriculum1.Entity = value;
					if ((value != null))
					{
						value.Curriculum2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Curriculum1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SchoolTypes(SchoolType entity)
		{
			this.SendPropertyChanging();
			entity.Curriculum = this;
		}
		
		private void detach_SchoolTypes(SchoolType entity)
		{
			this.SendPropertyChanging();
			entity.Curriculum = null;
		}
		
		private void attach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.Curriculum = this;
		}
		
		private void detach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.Curriculum = null;
		}
		
		private void attach_Schools(School entity)
		{
			this.SendPropertyChanging();
			entity.Curriculum = this;
		}
		
		private void detach_Schools(School entity)
		{
			this.SendPropertyChanging();
			entity.Curriculum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Day")]
	public partial class Day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Day1;
		
		private System.Nullable<long> _CampusID;
		
		private System.Nullable<long> _SchoolID;
		
		private System.Nullable<long> _ClientDayID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDay1Changing(string value);
    partial void OnDay1Changed();
    partial void OnCampusIDChanging(System.Nullable<long> value);
    partial void OnCampusIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<long> value);
    partial void OnSchoolIDChanged();
    partial void OnClientDayIDChanging(System.Nullable<long> value);
    partial void OnClientDayIDChanged();
    #endregion
		
		public Day()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Day", Storage="_Day1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Day1
		{
			get
			{
				return this._Day1;
			}
			set
			{
				if ((this._Day1 != value))
				{
					this.OnDay1Changing(value);
					this.SendPropertyChanging();
					this._Day1 = value;
					this.SendPropertyChanged("Day1");
					this.OnDay1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusID", DbType="BigInt")]
		public System.Nullable<long> CampusID
		{
			get
			{
				return this._CampusID;
			}
			set
			{
				if ((this._CampusID != value))
				{
					this.OnCampusIDChanging(value);
					this.SendPropertyChanging();
					this._CampusID = value;
					this.SendPropertyChanged("CampusID");
					this.OnCampusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientDayID", DbType="BigInt")]
		public System.Nullable<long> ClientDayID
		{
			get
			{
				return this._ClientDayID;
			}
			set
			{
				if ((this._ClientDayID != value))
				{
					this.OnClientDayIDChanging(value);
					this.SendPropertyChanging();
					this._ClientDayID = value;
					this.SendPropertyChanged("ClientDayID");
					this.OnClientDayIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DayOfWeek")]
	public partial class DayOfWeek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ClientDayID;
		
		private int _AssignedTemplateID;
		
		private int _R;
		
		private int _G;
		
		private int _B;
		
		private System.Nullable<long> _CampusID;
		
		private System.Nullable<long> _SchoolID;
		
		private System.Nullable<long> _ClientDayOfWeekID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnClientDayIDChanging(long value);
    partial void OnClientDayIDChanged();
    partial void OnAssignedTemplateIDChanging(int value);
    partial void OnAssignedTemplateIDChanged();
    partial void OnRChanging(int value);
    partial void OnRChanged();
    partial void OnGChanging(int value);
    partial void OnGChanged();
    partial void OnBChanging(int value);
    partial void OnBChanged();
    partial void OnCampusIDChanging(System.Nullable<long> value);
    partial void OnCampusIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<long> value);
    partial void OnSchoolIDChanged();
    partial void OnClientDayOfWeekIDChanging(System.Nullable<long> value);
    partial void OnClientDayOfWeekIDChanged();
    #endregion
		
		public DayOfWeek()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientDayID", DbType="BigInt NOT NULL")]
		public long ClientDayID
		{
			get
			{
				return this._ClientDayID;
			}
			set
			{
				if ((this._ClientDayID != value))
				{
					this.OnClientDayIDChanging(value);
					this.SendPropertyChanging();
					this._ClientDayID = value;
					this.SendPropertyChanged("ClientDayID");
					this.OnClientDayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTemplateID", DbType="Int NOT NULL")]
		public int AssignedTemplateID
		{
			get
			{
				return this._AssignedTemplateID;
			}
			set
			{
				if ((this._AssignedTemplateID != value))
				{
					this.OnAssignedTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedTemplateID = value;
					this.SendPropertyChanged("AssignedTemplateID");
					this.OnAssignedTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R", DbType="Int NOT NULL")]
		public int R
		{
			get
			{
				return this._R;
			}
			set
			{
				if ((this._R != value))
				{
					this.OnRChanging(value);
					this.SendPropertyChanging();
					this._R = value;
					this.SendPropertyChanged("R");
					this.OnRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G", DbType="Int NOT NULL")]
		public int G
		{
			get
			{
				return this._G;
			}
			set
			{
				if ((this._G != value))
				{
					this.OnGChanging(value);
					this.SendPropertyChanging();
					this._G = value;
					this.SendPropertyChanged("G");
					this.OnGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="Int NOT NULL")]
		public int B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusID", DbType="BigInt")]
		public System.Nullable<long> CampusID
		{
			get
			{
				return this._CampusID;
			}
			set
			{
				if ((this._CampusID != value))
				{
					this.OnCampusIDChanging(value);
					this.SendPropertyChanging();
					this._CampusID = value;
					this.SendPropertyChanged("CampusID");
					this.OnCampusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientDayOfWeekID", DbType="BigInt")]
		public System.Nullable<long> ClientDayOfWeekID
		{
			get
			{
				return this._ClientDayOfWeekID;
			}
			set
			{
				if ((this._ClientDayOfWeekID != value))
				{
					this.OnClientDayOfWeekIDChanging(value);
					this.SendPropertyChanging();
					this._ClientDayOfWeekID = value;
					this.SendPropertyChanged("ClientDayOfWeekID");
					this.OnClientDayOfWeekIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DegreeClassification")]
	public partial class DegreeClassification
	{
		
		private string _ClassofDegreee;
		
		public DegreeClassification()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassofDegreee", DbType="NVarChar(50)")]
		public string ClassofDegreee
		{
			get
			{
				return this._ClassofDegreee;
			}
			set
			{
				if ((this._ClassofDegreee != value))
				{
					this._ClassofDegreee = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DegreeObtained")]
	public partial class DegreeObtained
	{
		
		private string _NameofDegreeObtained;
		
		public DegreeObtained()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameofDegreeObtained", DbType="NVarChar(50)")]
		public string NameofDegreeObtained
		{
			get
			{
				return this._NameofDegreeObtained;
			}
			set
			{
				if ((this._NameofDegreeObtained != value))
				{
					this._NameofDegreeObtained = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<long> _SchoolId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public DocumentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _RequestUrl;
		
		private System.Nullable<System.DateTime> _EventDateTime;
		
		private string _ErrorMessage;
		
		private string _StackTrace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnEventDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEventDateTimeChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    #endregion
		
		public ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EventDateTime
		{
			get
			{
				return this._EventDateTime;
			}
			set
			{
				if ((this._EventDateTime != value))
				{
					this.OnEventDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EventDateTime = value;
					this.SendPropertyChanged("EventDateTime");
					this.OnEventDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalResourceCenter")]
	public partial class ExternalResourceCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _ExternalLink;
		
		private string _Description;
		
		private System.Nullable<long> _CampusId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnExternalLinkChanging(string value);
    partial void OnExternalLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    #endregion
		
		public ExternalResourceCenter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalLink", DbType="VarChar(150)")]
		public string ExternalLink
		{
			get
			{
				return this._ExternalLink;
			}
			set
			{
				if ((this._ExternalLink != value))
				{
					this.OnExternalLinkChanging(value);
					this.SendPropertyChanging();
					this._ExternalLink = value;
					this.SendPropertyChanged("ExternalLink");
					this.OnExternalLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtraCurricularActivities")]
	public partial class ExtraCurricularActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _ActivitiesName;
		
		private string _StudentName;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _Rating;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnActivitiesNameChanging(string value);
    partial void OnActivitiesNameChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnRatingChanging(System.Nullable<long> value);
    partial void OnRatingChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ExtraCurricularActivity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitiesName", DbType="NVarChar(100)")]
		public string ActivitiesName
		{
			get
			{
				return this._ActivitiesName;
			}
			set
			{
				if ((this._ActivitiesName != value))
				{
					this.OnActivitiesNameChanging(value);
					this.SendPropertyChanging();
					this._ActivitiesName = value;
					this.SendPropertyChanged("ActivitiesName");
					this.OnActivitiesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(200)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="BigInt")]
		public System.Nullable<long> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fee")]
	public partial class Fee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private bool _IsDeleted;
		
		private decimal _FlatValue;
		
		private System.Nullable<long> _Currency;
		
		private System.Nullable<int> _FeeStatusId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _AccountId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<long> _CreatedBy;
		
		private EntitySet<BatchFee> _BatchFees;
		
		private EntitySet<FeesConfig> _FeesConfigs;
		
		private EntityRef<FeeStatus> _FeeStatus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnFlatValueChanging(decimal value);
    partial void OnFlatValueChanged();
    partial void OnCurrencyChanging(System.Nullable<long> value);
    partial void OnCurrencyChanged();
    partial void OnFeeStatusIdChanging(System.Nullable<int> value);
    partial void OnFeeStatusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnAccountIdChanging(System.Nullable<long> value);
    partial void OnAccountIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public Fee()
		{
			this._BatchFees = new EntitySet<BatchFee>(new Action<BatchFee>(this.attach_BatchFees), new Action<BatchFee>(this.detach_BatchFees));
			this._FeesConfigs = new EntitySet<FeesConfig>(new Action<FeesConfig>(this.attach_FeesConfigs), new Action<FeesConfig>(this.detach_FeesConfigs));
			this._FeeStatus = default(EntityRef<FeeStatus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal FlatValue
		{
			get
			{
				return this._FlatValue;
			}
			set
			{
				if ((this._FlatValue != value))
				{
					this.OnFlatValueChanging(value);
					this.SendPropertyChanging();
					this._FlatValue = value;
					this.SendPropertyChanged("FlatValue");
					this.OnFlatValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="BigInt")]
		public System.Nullable<long> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeStatusId", DbType="Int")]
		public System.Nullable<int> FeeStatusId
		{
			get
			{
				return this._FeeStatusId;
			}
			set
			{
				if ((this._FeeStatusId != value))
				{
					if (this._FeeStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FeeStatusId = value;
					this.SendPropertyChanged("FeeStatusId");
					this.OnFeeStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt")]
		public System.Nullable<long> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fee_BatchFee", Storage="_BatchFees", ThisKey="Id", OtherKey="FeeId")]
		public EntitySet<BatchFee> BatchFees
		{
			get
			{
				return this._BatchFees;
			}
			set
			{
				this._BatchFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fee_FeesConfig", Storage="_FeesConfigs", ThisKey="Id", OtherKey="FeeId")]
		public EntitySet<FeesConfig> FeesConfigs
		{
			get
			{
				return this._FeesConfigs;
			}
			set
			{
				this._FeesConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeStatus_Fee", Storage="_FeeStatus", ThisKey="FeeStatusId", OtherKey="Id", IsForeignKey=true)]
		public FeeStatus FeeStatus
		{
			get
			{
				return this._FeeStatus.Entity;
			}
			set
			{
				FeeStatus previousValue = this._FeeStatus.Entity;
				if (((previousValue != value) 
							|| (this._FeeStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeeStatus.Entity = null;
						previousValue.Fees.Remove(this);
					}
					this._FeeStatus.Entity = value;
					if ((value != null))
					{
						value.Fees.Add(this);
						this._FeeStatusId = value.Id;
					}
					else
					{
						this._FeeStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FeeStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Fee", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.Fees.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.Fees.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BatchFees(BatchFee entity)
		{
			this.SendPropertyChanging();
			entity.Fee = this;
		}
		
		private void detach_BatchFees(BatchFee entity)
		{
			this.SendPropertyChanging();
			entity.Fee = null;
		}
		
		private void attach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.Fee = this;
		}
		
		private void detach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.Fee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeedBackDetails")]
	public partial class FeedBackDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ParentId;
		
		private System.Nullable<long> _ParentUserId;
		
		private System.Nullable<long> _SchoolId;
		
		private string _Subject;
		
		private string _Body;
		
		private System.Nullable<System.DateTime> _DateSubmitted;
		
		private EntityRef<ParentDetail> _ParentDetail;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnParentUserIdChanging(System.Nullable<long> value);
    partial void OnParentUserIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnDateSubmittedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSubmittedChanged();
    #endregion
		
		public FeedBackDetail()
		{
			this._ParentDetail = default(EntityRef<ParentDetail>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._ParentDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentUserId", DbType="BigInt")]
		public System.Nullable<long> ParentUserId
		{
			get
			{
				return this._ParentUserId;
			}
			set
			{
				if ((this._ParentUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentUserIdChanging(value);
					this.SendPropertyChanging();
					this._ParentUserId = value;
					this.SendPropertyChanged("ParentUserId");
					this.OnParentUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(250)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSubmitted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSubmitted
		{
			get
			{
				return this._DateSubmitted;
			}
			set
			{
				if ((this._DateSubmitted != value))
				{
					this.OnDateSubmittedChanging(value);
					this.SendPropertyChanging();
					this._DateSubmitted = value;
					this.SendPropertyChanged("DateSubmitted");
					this.OnDateSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDetail_FeedBackDetail", Storage="_ParentDetail", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public ParentDetail ParentDetail
		{
			get
			{
				return this._ParentDetail.Entity;
			}
			set
			{
				ParentDetail previousValue = this._ParentDetail.Entity;
				if (((previousValue != value) 
							|| (this._ParentDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentDetail.Entity = null;
						previousValue.FeedBackDetails.Remove(this);
					}
					this._ParentDetail.Entity = value;
					if ((value != null))
					{
						value.FeedBackDetails.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ParentDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FeedBackDetail", Storage="_User", ThisKey="ParentUserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FeedBackDetails.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FeedBackDetails.Add(this);
						this._ParentUserId = value.Id;
					}
					else
					{
						this._ParentUserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_FeedBackDetail", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.FeedBackDetails.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.FeedBackDetails.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeesConfig")]
	public partial class FeesConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _FeeId;
		
		private System.Nullable<int> _FeeStatusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _Currency;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private EntityRef<FeesConfig> _FeesConfig2;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Fee> _Fee;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<FeesConfig> _FeesConfig1;
		
		private EntityRef<FeeStatus> _FeeStatus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFeeIdChanging(System.Nullable<long> value);
    partial void OnFeeIdChanged();
    partial void OnFeeStatusIdChanging(System.Nullable<int> value);
    partial void OnFeeStatusIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnCurrencyChanging(System.Nullable<long> value);
    partial void OnCurrencyChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    #endregion
		
		public FeesConfig()
		{
			this._FeesConfig2 = default(EntityRef<FeesConfig>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Fee = default(EntityRef<Fee>);
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._FeesConfig1 = default(EntityRef<FeesConfig>);
			this._FeeStatus = default(EntityRef<FeeStatus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._FeesConfig1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeId", DbType="BigInt")]
		public System.Nullable<long> FeeId
		{
			get
			{
				return this._FeeId;
			}
			set
			{
				if ((this._FeeId != value))
				{
					if (this._Fee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeIdChanging(value);
					this.SendPropertyChanging();
					this._FeeId = value;
					this.SendPropertyChanged("FeeId");
					this.OnFeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeStatusId", DbType="Int")]
		public System.Nullable<int> FeeStatusId
		{
			get
			{
				return this._FeeStatusId;
			}
			set
			{
				if ((this._FeeStatusId != value))
				{
					if (this._FeeStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FeeStatusId = value;
					this.SendPropertyChanged("FeeStatusId");
					this.OnFeeStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="BigInt")]
		public System.Nullable<long> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeesConfig_FeesConfig", Storage="_FeesConfig2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public FeesConfig FeesConfig2
		{
			get
			{
				return this._FeesConfig2.Entity;
			}
			set
			{
				FeesConfig previousValue = this._FeesConfig2.Entity;
				if (((previousValue != value) 
							|| (this._FeesConfig2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeesConfig2.Entity = null;
						previousValue.FeesConfig1 = null;
					}
					this._FeesConfig2.Entity = value;
					if ((value != null))
					{
						value.FeesConfig1 = this;
					}
					this.SendPropertyChanged("FeesConfig2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_FeesConfig", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.FeesConfigs.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.FeesConfigs.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fee_FeesConfig", Storage="_Fee", ThisKey="FeeId", OtherKey="Id", IsForeignKey=true)]
		public Fee Fee
		{
			get
			{
				return this._Fee.Entity;
			}
			set
			{
				Fee previousValue = this._Fee.Entity;
				if (((previousValue != value) 
							|| (this._Fee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fee.Entity = null;
						previousValue.FeesConfigs.Remove(this);
					}
					this._Fee.Entity = value;
					if ((value != null))
					{
						value.FeesConfigs.Add(this);
						this._FeeId = value.Id;
					}
					else
					{
						this._FeeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Fee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_FeesConfig", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.FeesConfigs.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.FeesConfigs.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeesConfig_FeesConfig", Storage="_FeesConfig1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public FeesConfig FeesConfig1
		{
			get
			{
				return this._FeesConfig1.Entity;
			}
			set
			{
				FeesConfig previousValue = this._FeesConfig1.Entity;
				if (((previousValue != value) 
							|| (this._FeesConfig1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeesConfig1.Entity = null;
						previousValue.FeesConfig2 = null;
					}
					this._FeesConfig1.Entity = value;
					if ((value != null))
					{
						value.FeesConfig2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("FeesConfig1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeStatus_FeesConfig", Storage="_FeeStatus", ThisKey="FeeStatusId", OtherKey="Id", IsForeignKey=true)]
		public FeeStatus FeeStatus
		{
			get
			{
				return this._FeeStatus.Entity;
			}
			set
			{
				FeeStatus previousValue = this._FeeStatus.Entity;
				if (((previousValue != value) 
							|| (this._FeeStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeeStatus.Entity = null;
						previousValue.FeesConfigs.Remove(this);
					}
					this._FeeStatus.Entity = value;
					if ((value != null))
					{
						value.FeesConfigs.Add(this);
						this._FeeStatusId = value.Id;
					}
					else
					{
						this._FeeStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FeeStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_FeesConfig", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.FeesConfigs.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.FeesConfigs.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeStatus")]
	public partial class FeeStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Fee> _Fees;
		
		private EntitySet<FeesConfig> _FeesConfigs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FeeStatus()
		{
			this._Fees = new EntitySet<Fee>(new Action<Fee>(this.attach_Fees), new Action<Fee>(this.detach_Fees));
			this._FeesConfigs = new EntitySet<FeesConfig>(new Action<FeesConfig>(this.attach_FeesConfigs), new Action<FeesConfig>(this.detach_FeesConfigs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeStatus_Fee", Storage="_Fees", ThisKey="Id", OtherKey="FeeStatusId")]
		public EntitySet<Fee> Fees
		{
			get
			{
				return this._Fees;
			}
			set
			{
				this._Fees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeStatus_FeesConfig", Storage="_FeesConfigs", ThisKey="Id", OtherKey="FeeStatusId")]
		public EntitySet<FeesConfig> FeesConfigs
		{
			get
			{
				return this._FeesConfigs;
			}
			set
			{
				this._FeesConfigs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fees(Fee entity)
		{
			this.SendPropertyChanging();
			entity.FeeStatus = this;
		}
		
		private void detach_Fees(Fee entity)
		{
			this.SendPropertyChanging();
			entity.FeeStatus = null;
		}
		
		private void attach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.FeeStatus = this;
		}
		
		private void detach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.FeeStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Gender()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralResourceCenter")]
	public partial class GeneralResourceCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _FileName;
		
		private string _FileDescription;
		
		private string _DocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileDescriptionChanging(string value);
    partial void OnFileDescriptionChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    #endregion
		
		public GeneralResourceCenter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDescription", DbType="VarChar(200)")]
		public string FileDescription
		{
			get
			{
				return this._FileDescription;
			}
			set
			{
				if ((this._FileDescription != value))
				{
					this.OnFileDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FileDescription = value;
					this.SendPropertyChanged("FileDescription");
					this.OnFileDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="VarChar(50)")]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grade")]
	public partial class Grade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _GradeName;
		
		private string _GradeCode;
		
		private long _ClassId;
		
		private long _SchoolId;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private System.Nullable<long> _GradeTeacherId;
		
		private System.Nullable<long> _GradeSupervisorId;
		
		private System.Nullable<long> _HomeRoomId;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<GroupStudent> _GroupStudents;
		
		private EntitySet<ReportCardPosition> _ReportCardPositions;
		
		private EntitySet<GradeStudent> _GradeStudents;
		
		private EntitySet<Alumni> _Alumnis;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<ScoreSheetRepo> _ScoreSheetRepos;
		
		private EntitySet<StudentScoreCategory> _StudentScoreCategories;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<SubjectTeacher> _SubjectTeachers;
		
		private EntitySet<SubjectTeacher> _SubjectTeachers1;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<ReportCardPrintConfig> _ReportCardPrintConfigs;
		
		private EntitySet<ExternalResourceLink> _ExternalResourceLinks;
		
		private EntitySet<ExternalResourceDocument> _ExternalResourceDocuments;
		
		private EntitySet<ExternalResourceMultimedia> _ExternalResourceMultimedias;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGradeNameChanging(string value);
    partial void OnGradeNameChanged();
    partial void OnGradeCodeChanging(string value);
    partial void OnGradeCodeChanged();
    partial void OnClassIdChanging(long value);
    partial void OnClassIdChanged();
    partial void OnSchoolIdChanging(long value);
    partial void OnSchoolIdChanged();
    partial void OnSchoolCampusIdChanging(System.Nullable<long> value);
    partial void OnSchoolCampusIdChanged();
    partial void OnGradeTeacherIdChanging(System.Nullable<long> value);
    partial void OnGradeTeacherIdChanged();
    partial void OnGradeSupervisorIdChanging(System.Nullable<long> value);
    partial void OnGradeSupervisorIdChanged();
    partial void OnHomeRoomIdChanging(System.Nullable<long> value);
    partial void OnHomeRoomIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Grade()
		{
			this._GroupStudents = new EntitySet<GroupStudent>(new Action<GroupStudent>(this.attach_GroupStudents), new Action<GroupStudent>(this.detach_GroupStudents));
			this._ReportCardPositions = new EntitySet<ReportCardPosition>(new Action<ReportCardPosition>(this.attach_ReportCardPositions), new Action<ReportCardPosition>(this.detach_ReportCardPositions));
			this._GradeStudents = new EntitySet<GradeStudent>(new Action<GradeStudent>(this.attach_GradeStudents), new Action<GradeStudent>(this.detach_GradeStudents));
			this._Alumnis = new EntitySet<Alumni>(new Action<Alumni>(this.attach_Alumnis), new Action<Alumni>(this.detach_Alumnis));
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._ScoreSheetRepos = new EntitySet<ScoreSheetRepo>(new Action<ScoreSheetRepo>(this.attach_ScoreSheetRepos), new Action<ScoreSheetRepo>(this.detach_ScoreSheetRepos));
			this._StudentScoreCategories = new EntitySet<StudentScoreCategory>(new Action<StudentScoreCategory>(this.attach_StudentScoreCategories), new Action<StudentScoreCategory>(this.detach_StudentScoreCategories));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._SubjectTeachers = new EntitySet<SubjectTeacher>(new Action<SubjectTeacher>(this.attach_SubjectTeachers), new Action<SubjectTeacher>(this.detach_SubjectTeachers));
			this._SubjectTeachers1 = new EntitySet<SubjectTeacher>(new Action<SubjectTeacher>(this.attach_SubjectTeachers1), new Action<SubjectTeacher>(this.detach_SubjectTeachers1));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			this._PaymentPermanents = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents), new Action<PaymentPermanent>(this.detach_PaymentPermanents));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._ReportCardPrintConfigs = new EntitySet<ReportCardPrintConfig>(new Action<ReportCardPrintConfig>(this.attach_ReportCardPrintConfigs), new Action<ReportCardPrintConfig>(this.detach_ReportCardPrintConfigs));
			this._ExternalResourceLinks = new EntitySet<ExternalResourceLink>(new Action<ExternalResourceLink>(this.attach_ExternalResourceLinks), new Action<ExternalResourceLink>(this.detach_ExternalResourceLinks));
			this._ExternalResourceDocuments = new EntitySet<ExternalResourceDocument>(new Action<ExternalResourceDocument>(this.attach_ExternalResourceDocuments), new Action<ExternalResourceDocument>(this.detach_ExternalResourceDocuments));
			this._ExternalResourceMultimedias = new EntitySet<ExternalResourceMultimedia>(new Action<ExternalResourceMultimedia>(this.attach_ExternalResourceMultimedias), new Action<ExternalResourceMultimedia>(this.detach_ExternalResourceMultimedias));
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			this._Class_Grade = default(EntityRef<Class_Grade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this.OnGradeNameChanging(value);
					this.SendPropertyChanging();
					this._GradeName = value;
					this.SendPropertyChanged("GradeName");
					this.OnGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeCode", DbType="VarChar(50)")]
		public string GradeCode
		{
			get
			{
				return this._GradeCode;
			}
			set
			{
				if ((this._GradeCode != value))
				{
					this.OnGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._GradeCode = value;
					this.SendPropertyChanged("GradeCode");
					this.OnGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt NOT NULL")]
		public long ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt NOT NULL")]
		public long SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeTeacherId", DbType="BigInt")]
		public System.Nullable<long> GradeTeacherId
		{
			get
			{
				return this._GradeTeacherId;
			}
			set
			{
				if ((this._GradeTeacherId != value))
				{
					this.OnGradeTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._GradeTeacherId = value;
					this.SendPropertyChanged("GradeTeacherId");
					this.OnGradeTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeSupervisorId", DbType="BigInt")]
		public System.Nullable<long> GradeSupervisorId
		{
			get
			{
				return this._GradeSupervisorId;
			}
			set
			{
				if ((this._GradeSupervisorId != value))
				{
					this.OnGradeSupervisorIdChanging(value);
					this.SendPropertyChanging();
					this._GradeSupervisorId = value;
					this.SendPropertyChanged("GradeSupervisorId");
					this.OnGradeSupervisorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeRoomId", DbType="BigInt")]
		public System.Nullable<long> HomeRoomId
		{
			get
			{
				return this._HomeRoomId;
			}
			set
			{
				if ((this._HomeRoomId != value))
				{
					this.OnHomeRoomIdChanging(value);
					this.SendPropertyChanging();
					this._HomeRoomId = value;
					this.SendPropertyChanged("HomeRoomId");
					this.OnHomeRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_GroupStudent", Storage="_GroupStudents", ThisKey="Id", OtherKey="gradeId")]
		public EntitySet<GroupStudent> GroupStudents
		{
			get
			{
				return this._GroupStudents;
			}
			set
			{
				this._GroupStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardPosition", Storage="_ReportCardPositions", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this._ReportCardPositions;
			}
			set
			{
				this._ReportCardPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_GradeStudent", Storage="_GradeStudents", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<GradeStudent> GradeStudents
		{
			get
			{
				return this._GradeStudents;
			}
			set
			{
				this._GradeStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_Alumni", Storage="_Alumnis", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<Alumni> Alumnis
		{
			get
			{
				return this._Alumnis;
			}
			set
			{
				this._Alumnis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardData", Storage="_ReportCardDatas", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ScoreSheetRepo", Storage="_ScoreSheetRepos", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ScoreSheetRepo> ScoreSheetRepos
		{
			get
			{
				return this._ScoreSheetRepos;
			}
			set
			{
				this._ScoreSheetRepos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreCategory", Storage="_StudentScoreCategories", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this._StudentScoreCategories;
			}
			set
			{
				this._StudentScoreCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardComment", Storage="_ReportCardComments", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_SubjectTeacher", Storage="_SubjectTeachers", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<SubjectTeacher> SubjectTeachers
		{
			get
			{
				return this._SubjectTeachers;
			}
			set
			{
				this._SubjectTeachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_SubjectTeacher1", Storage="_SubjectTeachers1", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<SubjectTeacher> SubjectTeachers1
		{
			get
			{
				return this._SubjectTeachers1;
			}
			set
			{
				this._SubjectTeachers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PaymentPermanent", Storage="_PaymentPermanents", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this._PaymentPermanents;
			}
			set
			{
				this._PaymentPermanents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardPrintConfig", Storage="_ReportCardPrintConfigs", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this._ReportCardPrintConfigs;
			}
			set
			{
				this._ReportCardPrintConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ExternalResourceLink", Storage="_ExternalResourceLinks", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ExternalResourceLink> ExternalResourceLinks
		{
			get
			{
				return this._ExternalResourceLinks;
			}
			set
			{
				this._ExternalResourceLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ExternalResourceDocument", Storage="_ExternalResourceDocuments", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ExternalResourceDocument> ExternalResourceDocuments
		{
			get
			{
				return this._ExternalResourceDocuments;
			}
			set
			{
				this._ExternalResourceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ExternalResourceMultimedia", Storage="_ExternalResourceMultimedias", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this._ExternalResourceMultimedias;
			}
			set
			{
				this._ExternalResourceMultimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="GradeId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Grade", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.Grades.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.Grades.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(long);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupStudents(GroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_GroupStudents(GroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_GradeStudents(GradeStudent entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_GradeStudents(GradeStudent entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ScoreSheetRepos(ScoreSheetRepo entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ScoreSheetRepos(ScoreSheetRepo entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_SubjectTeachers(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_SubjectTeachers(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_SubjectTeachers1(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Grade1 = this;
		}
		
		private void detach_SubjectTeachers1(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Grade1 = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GradeClassTeacher")]
	public partial class GradeClassTeacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _Teacher;
		
		private System.Nullable<long> _ClassGrade;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTeacherChanging(System.Nullable<long> value);
    partial void OnTeacherChanged();
    partial void OnClassGradeChanging(System.Nullable<long> value);
    partial void OnClassGradeChanged();
    #endregion
		
		public GradeClassTeacher()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher", DbType="BigInt")]
		public System.Nullable<long> Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				if ((this._Teacher != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherChanging(value);
					this.SendPropertyChanging();
					this._Teacher = value;
					this.SendPropertyChanged("Teacher");
					this.OnTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassGrade", DbType="BigInt")]
		public System.Nullable<long> ClassGrade
		{
			get
			{
				return this._ClassGrade;
			}
			set
			{
				if ((this._ClassGrade != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassGradeChanging(value);
					this.SendPropertyChanging();
					this._ClassGrade = value;
					this.SendPropertyChanged("ClassGrade");
					this.OnClassGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_GradeClassTeacher", Storage="_Class_Grade", ThisKey="ClassGrade", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.GradeClassTeachers.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.GradeClassTeachers.Add(this);
						this._ClassGrade = value.Id;
					}
					else
					{
						this._ClassGrade = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GradeClassTeacher", Storage="_User", ThisKey="Teacher", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GradeClassTeachers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GradeClassTeachers.Add(this);
						this._Teacher = value.Id;
					}
					else
					{
						this._Teacher = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grouping")]
	public partial class Grouping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _GroupName;
		
		private long _yearId;
		
		private long _TeacherId;
		
		private long _SubjectId;
		
		private long _CreatedBy;
		
		private System.DateTime _DateCreated;
		
		private long _CampusId;
		
		private string _GroupCode;
		
		private System.Nullable<bool> _IsAbilityGroup;
		
		private EntitySet<GroupStudent> _GroupStudents;
		
		private EntityRef<User> _User;
		
		private EntityRef<SubjectsInSchool> _SubjectsInSchool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnyearIdChanging(long value);
    partial void OnyearIdChanged();
    partial void OnTeacherIdChanging(long value);
    partial void OnTeacherIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCampusIdChanging(long value);
    partial void OnCampusIdChanged();
    partial void OnGroupCodeChanging(string value);
    partial void OnGroupCodeChanged();
    partial void OnIsAbilityGroupChanging(System.Nullable<bool> value);
    partial void OnIsAbilityGroupChanged();
    #endregion
		
		public Grouping()
		{
			this._GroupStudents = new EntitySet<GroupStudent>(new Action<GroupStudent>(this.attach_GroupStudents), new Action<GroupStudent>(this.detach_GroupStudents));
			this._User = default(EntityRef<User>);
			this._SubjectsInSchool = default(EntityRef<SubjectsInSchool>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearId", DbType="BigInt NOT NULL")]
		public long yearId
		{
			get
			{
				return this._yearId;
			}
			set
			{
				if ((this._yearId != value))
				{
					this.OnyearIdChanging(value);
					this.SendPropertyChanging();
					this._yearId = value;
					this.SendPropertyChanged("yearId");
					this.OnyearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt NOT NULL")]
		public long TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._SubjectsInSchool.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt NOT NULL")]
		public long CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="VarChar(20)")]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAbilityGroup", DbType="Bit")]
		public System.Nullable<bool> IsAbilityGroup
		{
			get
			{
				return this._IsAbilityGroup;
			}
			set
			{
				if ((this._IsAbilityGroup != value))
				{
					this.OnIsAbilityGroupChanging(value);
					this.SendPropertyChanging();
					this._IsAbilityGroup = value;
					this.SendPropertyChanged("IsAbilityGroup");
					this.OnIsAbilityGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grouping_GroupStudent", Storage="_GroupStudents", ThisKey="Id", OtherKey="GroupingId")]
		public EntitySet<GroupStudent> GroupStudents
		{
			get
			{
				return this._GroupStudents;
			}
			set
			{
				this._GroupStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Grouping", Storage="_User", ThisKey="TeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Groupings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Groupings.Add(this);
						this._TeacherId = value.Id;
					}
					else
					{
						this._TeacherId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectsInSchool_Grouping", Storage="_SubjectsInSchool", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public SubjectsInSchool SubjectsInSchool
		{
			get
			{
				return this._SubjectsInSchool.Entity;
			}
			set
			{
				SubjectsInSchool previousValue = this._SubjectsInSchool.Entity;
				if (((previousValue != value) 
							|| (this._SubjectsInSchool.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectsInSchool.Entity = null;
						previousValue.Groupings.Remove(this);
					}
					this._SubjectsInSchool.Entity = value;
					if ((value != null))
					{
						value.Groupings.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(long);
					}
					this.SendPropertyChanged("SubjectsInSchool");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupStudents(GroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.Grouping = this;
		}
		
		private void detach_GroupStudents(GroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.Grouping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupStudent")]
	public partial class GroupStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _GroupingId;
		
		private long _StudentId;
		
		private long _gradeId;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<Grouping> _Grouping;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGroupingIdChanging(long value);
    partial void OnGroupingIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OngradeIdChanging(long value);
    partial void OngradeIdChanged();
    #endregion
		
		public GroupStudent()
		{
			this._Grade = default(EntityRef<Grade>);
			this._Grouping = default(EntityRef<Grouping>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupingId", DbType="BigInt NOT NULL")]
		public long GroupingId
		{
			get
			{
				return this._GroupingId;
			}
			set
			{
				if ((this._GroupingId != value))
				{
					if (this._Grouping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupingIdChanging(value);
					this.SendPropertyChanging();
					this._GroupingId = value;
					this.SendPropertyChanged("GroupingId");
					this.OnGroupingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gradeId", DbType="BigInt NOT NULL")]
		public long gradeId
		{
			get
			{
				return this._gradeId;
			}
			set
			{
				if ((this._gradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngradeIdChanging(value);
					this.SendPropertyChanging();
					this._gradeId = value;
					this.SendPropertyChanged("gradeId");
					this.OngradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_GroupStudent", Storage="_Grade", ThisKey="gradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.GroupStudents.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.GroupStudents.Add(this);
						this._gradeId = value.Id;
					}
					else
					{
						this._gradeId = default(long);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grouping_GroupStudent", Storage="_Grouping", ThisKey="GroupingId", OtherKey="Id", IsForeignKey=true)]
		public Grouping Grouping
		{
			get
			{
				return this._Grouping.Entity;
			}
			set
			{
				Grouping previousValue = this._Grouping.Entity;
				if (((previousValue != value) 
							|| (this._Grouping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grouping.Entity = null;
						previousValue.GroupStudents.Remove(this);
					}
					this._Grouping.Entity = value;
					if ((value != null))
					{
						value.GroupStudents.Add(this);
						this._GroupingId = value.Id;
					}
					else
					{
						this._GroupingId = default(long);
					}
					this.SendPropertyChanged("Grouping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupStudent", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupStudents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupStudents.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HomeRoom")]
	public partial class HomeRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _RoomNumber;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private System.Nullable<long> _SchoolId;
		
		private EntitySet<HomeRoomTeacher> _HomeRoomTeachers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnSchoolCampusIdChanging(System.Nullable<long> value);
    partial void OnSchoolCampusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public HomeRoom()
		{
			this._HomeRoomTeachers = new EntitySet<HomeRoomTeacher>(new Action<HomeRoomTeacher>(this.attach_HomeRoomTeachers), new Action<HomeRoomTeacher>(this.detach_HomeRoomTeachers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="VarChar(50)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HomeRoom_HomeRoomTeacher", Storage="_HomeRoomTeachers", ThisKey="Id", OtherKey="HomeRoomId")]
		public EntitySet<HomeRoomTeacher> HomeRoomTeachers
		{
			get
			{
				return this._HomeRoomTeachers;
			}
			set
			{
				this._HomeRoomTeachers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HomeRoomTeachers(HomeRoomTeacher entity)
		{
			this.SendPropertyChanging();
			entity.HomeRoom = this;
		}
		
		private void detach_HomeRoomTeachers(HomeRoomTeacher entity)
		{
			this.SendPropertyChanging();
			entity.HomeRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HomeRoomTeacher")]
	public partial class HomeRoomTeacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _HomeRoomId;
		
		private long _TeacherId;
		
		private System.Nullable<long> _SubjectId;
		
		private EntityRef<HomeRoom> _HomeRoom;
		
		private EntityRef<User> _User;
		
		private EntityRef<SubjectsInSchool> _SubjectsInSchool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnHomeRoomIdChanging(long value);
    partial void OnHomeRoomIdChanged();
    partial void OnTeacherIdChanging(long value);
    partial void OnTeacherIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    #endregion
		
		public HomeRoomTeacher()
		{
			this._HomeRoom = default(EntityRef<HomeRoom>);
			this._User = default(EntityRef<User>);
			this._SubjectsInSchool = default(EntityRef<SubjectsInSchool>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeRoomId", DbType="BigInt NOT NULL")]
		public long HomeRoomId
		{
			get
			{
				return this._HomeRoomId;
			}
			set
			{
				if ((this._HomeRoomId != value))
				{
					if (this._HomeRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHomeRoomIdChanging(value);
					this.SendPropertyChanging();
					this._HomeRoomId = value;
					this.SendPropertyChanged("HomeRoomId");
					this.OnHomeRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt NOT NULL")]
		public long TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._SubjectsInSchool.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HomeRoom_HomeRoomTeacher", Storage="_HomeRoom", ThisKey="HomeRoomId", OtherKey="Id", IsForeignKey=true)]
		public HomeRoom HomeRoom
		{
			get
			{
				return this._HomeRoom.Entity;
			}
			set
			{
				HomeRoom previousValue = this._HomeRoom.Entity;
				if (((previousValue != value) 
							|| (this._HomeRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HomeRoom.Entity = null;
						previousValue.HomeRoomTeachers.Remove(this);
					}
					this._HomeRoom.Entity = value;
					if ((value != null))
					{
						value.HomeRoomTeachers.Add(this);
						this._HomeRoomId = value.Id;
					}
					else
					{
						this._HomeRoomId = default(long);
					}
					this.SendPropertyChanged("HomeRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_HomeRoomTeacher", Storage="_User", ThisKey="TeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.HomeRoomTeachers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.HomeRoomTeachers.Add(this);
						this._TeacherId = value.Id;
					}
					else
					{
						this._TeacherId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectsInSchool_HomeRoomTeacher", Storage="_SubjectsInSchool", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public SubjectsInSchool SubjectsInSchool
		{
			get
			{
				return this._SubjectsInSchool.Entity;
			}
			set
			{
				SubjectsInSchool previousValue = this._SubjectsInSchool.Entity;
				if (((previousValue != value) 
							|| (this._SubjectsInSchool.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectsInSchool.Entity = null;
						previousValue.HomeRoomTeachers.Remove(this);
					}
					this._SubjectsInSchool.Entity = value;
					if ((value != null))
					{
						value.HomeRoomTeachers.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectsInSchool");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LedgerAccount")]
	public partial class LedgerAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _AccountCode;
		
		private string _AccountDescription;
		
		private string _AccountNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountDescriptionChanging(string value);
    partial void OnAccountDescriptionChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    #endregion
		
		public LedgerAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="VarChar(50)")]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDescription", DbType="VarChar(50)")]
		public string AccountDescription
		{
			get
			{
				return this._AccountDescription;
			}
			set
			{
				if ((this._AccountDescription != value))
				{
					this.OnAccountDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AccountDescription = value;
					this.SendPropertyChanged("AccountDescription");
					this.OnAccountDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailMessaging")]
	public partial class MailMessaging : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SchoolID;
		
		private System.Nullable<long> _RecipientUserID;
		
		private string _MailRecipient;
		
		private string _MailSubject;
		
		private string _Body;
		
		private string _MailRecieverFullname;
		
		private System.Nullable<int> _SendingStatus;
		
		private System.Nullable<System.DateTime> _submitteddate;
		
		private System.Nullable<System.DateTime> _sentdate;
		
		private System.Nullable<int> _DeliveryStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<long> value);
    partial void OnSchoolIDChanged();
    partial void OnRecipientUserIDChanging(System.Nullable<long> value);
    partial void OnRecipientUserIDChanged();
    partial void OnMailRecipientChanging(string value);
    partial void OnMailRecipientChanged();
    partial void OnMailSubjectChanging(string value);
    partial void OnMailSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnMailRecieverFullnameChanging(string value);
    partial void OnMailRecieverFullnameChanged();
    partial void OnSendingStatusChanging(System.Nullable<int> value);
    partial void OnSendingStatusChanged();
    partial void OnsubmitteddateChanging(System.Nullable<System.DateTime> value);
    partial void OnsubmitteddateChanged();
    partial void OnsentdateChanging(System.Nullable<System.DateTime> value);
    partial void OnsentdateChanged();
    partial void OnDeliveryStatusChanging(System.Nullable<int> value);
    partial void OnDeliveryStatusChanged();
    #endregion
		
		public MailMessaging()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientUserID", DbType="BigInt")]
		public System.Nullable<long> RecipientUserID
		{
			get
			{
				return this._RecipientUserID;
			}
			set
			{
				if ((this._RecipientUserID != value))
				{
					this.OnRecipientUserIDChanging(value);
					this.SendPropertyChanging();
					this._RecipientUserID = value;
					this.SendPropertyChanged("RecipientUserID");
					this.OnRecipientUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailRecipient", DbType="VarChar(150)")]
		public string MailRecipient
		{
			get
			{
				return this._MailRecipient;
			}
			set
			{
				if ((this._MailRecipient != value))
				{
					this.OnMailRecipientChanging(value);
					this.SendPropertyChanging();
					this._MailRecipient = value;
					this.SendPropertyChanged("MailRecipient");
					this.OnMailRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailSubject", DbType="VarChar(200)")]
		public string MailSubject
		{
			get
			{
				return this._MailSubject;
			}
			set
			{
				if ((this._MailSubject != value))
				{
					this.OnMailSubjectChanging(value);
					this.SendPropertyChanging();
					this._MailSubject = value;
					this.SendPropertyChanged("MailSubject");
					this.OnMailSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailRecieverFullname", DbType="VarChar(200)")]
		public string MailRecieverFullname
		{
			get
			{
				return this._MailRecieverFullname;
			}
			set
			{
				if ((this._MailRecieverFullname != value))
				{
					this.OnMailRecieverFullnameChanging(value);
					this.SendPropertyChanging();
					this._MailRecieverFullname = value;
					this.SendPropertyChanged("MailRecieverFullname");
					this.OnMailRecieverFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingStatus", DbType="Int")]
		public System.Nullable<int> SendingStatus
		{
			get
			{
				return this._SendingStatus;
			}
			set
			{
				if ((this._SendingStatus != value))
				{
					this.OnSendingStatusChanging(value);
					this.SendPropertyChanging();
					this._SendingStatus = value;
					this.SendPropertyChanged("SendingStatus");
					this.OnSendingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitteddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> submitteddate
		{
			get
			{
				return this._submitteddate;
			}
			set
			{
				if ((this._submitteddate != value))
				{
					this.OnsubmitteddateChanging(value);
					this.SendPropertyChanging();
					this._submitteddate = value;
					this.SendPropertyChanged("submitteddate");
					this.OnsubmitteddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> sentdate
		{
			get
			{
				return this._sentdate;
			}
			set
			{
				if ((this._sentdate != value))
				{
					this.OnsentdateChanging(value);
					this.SendPropertyChanging();
					this._sentdate = value;
					this.SendPropertyChanged("sentdate");
					this.OnsentdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatus", DbType="Int")]
		public System.Nullable<int> DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus;
			}
			set
			{
				if ((this._DeliveryStatus != value))
				{
					this.OnDeliveryStatusChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatus = value;
					this.SendPropertyChanged("DeliveryStatus");
					this.OnDeliveryStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionGroup")]
	public partial class OptionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _OptionGroupName;
		
		private string _OptionGroupCode;
		
		private long _CreatedBy;
		
		private System.DateTime _DateCreated;
		
		private long _YearId;
		
		private System.Nullable<long> _CampusId;
		
		private EntitySet<OptionGroupSubject> _OptionGroupSubjects;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOptionGroupNameChanging(string value);
    partial void OnOptionGroupNameChanged();
    partial void OnOptionGroupCodeChanging(string value);
    partial void OnOptionGroupCodeChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnYearIdChanging(long value);
    partial void OnYearIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    #endregion
		
		public OptionGroup()
		{
			this._OptionGroupSubjects = new EntitySet<OptionGroupSubject>(new Action<OptionGroupSubject>(this.attach_OptionGroupSubjects), new Action<OptionGroupSubject>(this.detach_OptionGroupSubjects));
			this._Class_Grade = default(EntityRef<Class_Grade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionGroupName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string OptionGroupName
		{
			get
			{
				return this._OptionGroupName;
			}
			set
			{
				if ((this._OptionGroupName != value))
				{
					this.OnOptionGroupNameChanging(value);
					this.SendPropertyChanging();
					this._OptionGroupName = value;
					this.SendPropertyChanged("OptionGroupName");
					this.OnOptionGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionGroupCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OptionGroupCode
		{
			get
			{
				return this._OptionGroupCode;
			}
			set
			{
				if ((this._OptionGroupCode != value))
				{
					this.OnOptionGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._OptionGroupCode = value;
					this.SendPropertyChanged("OptionGroupCode");
					this.OnOptionGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearId", DbType="BigInt NOT NULL")]
		public long YearId
		{
			get
			{
				return this._YearId;
			}
			set
			{
				if ((this._YearId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYearIdChanging(value);
					this.SendPropertyChanging();
					this._YearId = value;
					this.SendPropertyChanged("YearId");
					this.OnYearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OptionGroup_OptionGroupSubject", Storage="_OptionGroupSubjects", ThisKey="Id", OtherKey="OptionGroupId")]
		public EntitySet<OptionGroupSubject> OptionGroupSubjects
		{
			get
			{
				return this._OptionGroupSubjects;
			}
			set
			{
				this._OptionGroupSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_OptionGroup", Storage="_Class_Grade", ThisKey="YearId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.OptionGroups.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.OptionGroups.Add(this);
						this._YearId = value.Id;
					}
					else
					{
						this._YearId = default(long);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OptionGroupSubjects(OptionGroupSubject entity)
		{
			this.SendPropertyChanging();
			entity.OptionGroup = this;
		}
		
		private void detach_OptionGroupSubjects(OptionGroupSubject entity)
		{
			this.SendPropertyChanging();
			entity.OptionGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionGroupStudent")]
	public partial class OptionGroupStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _OptionGroupSubjectId;
		
		private long _StudentId;
		
		private EntityRef<OptionGroupSubject> _OptionGroupSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOptionGroupSubjectIdChanging(long value);
    partial void OnOptionGroupSubjectIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    #endregion
		
		public OptionGroupStudent()
		{
			this._OptionGroupSubject = default(EntityRef<OptionGroupSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionGroupSubjectId", DbType="BigInt NOT NULL")]
		public long OptionGroupSubjectId
		{
			get
			{
				return this._OptionGroupSubjectId;
			}
			set
			{
				if ((this._OptionGroupSubjectId != value))
				{
					if (this._OptionGroupSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionGroupSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._OptionGroupSubjectId = value;
					this.SendPropertyChanged("OptionGroupSubjectId");
					this.OnOptionGroupSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OptionGroupSubject_OptionGroupStudent", Storage="_OptionGroupSubject", ThisKey="OptionGroupSubjectId", OtherKey="Id", IsForeignKey=true)]
		public OptionGroupSubject OptionGroupSubject
		{
			get
			{
				return this._OptionGroupSubject.Entity;
			}
			set
			{
				OptionGroupSubject previousValue = this._OptionGroupSubject.Entity;
				if (((previousValue != value) 
							|| (this._OptionGroupSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OptionGroupSubject.Entity = null;
						previousValue.OptionGroupStudents.Remove(this);
					}
					this._OptionGroupSubject.Entity = value;
					if ((value != null))
					{
						value.OptionGroupStudents.Add(this);
						this._OptionGroupSubjectId = value.Id;
					}
					else
					{
						this._OptionGroupSubjectId = default(long);
					}
					this.SendPropertyChanged("OptionGroupSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionGroupSubject")]
	public partial class OptionGroupSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _OptionGroupId;
		
		private long _SubjectId;
		
		private long _TeacherId;
		
		private EntitySet<OptionGroupStudent> _OptionGroupStudents;
		
		private EntityRef<OptionGroup> _OptionGroup;
		
		private EntityRef<User> _User;
		
		private EntityRef<SubjectsInSchool> _SubjectsInSchool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOptionGroupIdChanging(long value);
    partial void OnOptionGroupIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnTeacherIdChanging(long value);
    partial void OnTeacherIdChanged();
    #endregion
		
		public OptionGroupSubject()
		{
			this._OptionGroupStudents = new EntitySet<OptionGroupStudent>(new Action<OptionGroupStudent>(this.attach_OptionGroupStudents), new Action<OptionGroupStudent>(this.detach_OptionGroupStudents));
			this._OptionGroup = default(EntityRef<OptionGroup>);
			this._User = default(EntityRef<User>);
			this._SubjectsInSchool = default(EntityRef<SubjectsInSchool>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionGroupId", DbType="BigInt NOT NULL")]
		public long OptionGroupId
		{
			get
			{
				return this._OptionGroupId;
			}
			set
			{
				if ((this._OptionGroupId != value))
				{
					if (this._OptionGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionGroupIdChanging(value);
					this.SendPropertyChanging();
					this._OptionGroupId = value;
					this.SendPropertyChanged("OptionGroupId");
					this.OnOptionGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._SubjectsInSchool.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt NOT NULL")]
		public long TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OptionGroupSubject_OptionGroupStudent", Storage="_OptionGroupStudents", ThisKey="Id", OtherKey="OptionGroupSubjectId")]
		public EntitySet<OptionGroupStudent> OptionGroupStudents
		{
			get
			{
				return this._OptionGroupStudents;
			}
			set
			{
				this._OptionGroupStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OptionGroup_OptionGroupSubject", Storage="_OptionGroup", ThisKey="OptionGroupId", OtherKey="Id", IsForeignKey=true)]
		public OptionGroup OptionGroup
		{
			get
			{
				return this._OptionGroup.Entity;
			}
			set
			{
				OptionGroup previousValue = this._OptionGroup.Entity;
				if (((previousValue != value) 
							|| (this._OptionGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OptionGroup.Entity = null;
						previousValue.OptionGroupSubjects.Remove(this);
					}
					this._OptionGroup.Entity = value;
					if ((value != null))
					{
						value.OptionGroupSubjects.Add(this);
						this._OptionGroupId = value.Id;
					}
					else
					{
						this._OptionGroupId = default(long);
					}
					this.SendPropertyChanged("OptionGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OptionGroupSubject", Storage="_User", ThisKey="TeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.OptionGroupSubjects.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.OptionGroupSubjects.Add(this);
						this._TeacherId = value.Id;
					}
					else
					{
						this._TeacherId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectsInSchool_OptionGroupSubject", Storage="_SubjectsInSchool", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public SubjectsInSchool SubjectsInSchool
		{
			get
			{
				return this._SubjectsInSchool.Entity;
			}
			set
			{
				SubjectsInSchool previousValue = this._SubjectsInSchool.Entity;
				if (((previousValue != value) 
							|| (this._SubjectsInSchool.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectsInSchool.Entity = null;
						previousValue.OptionGroupSubjects.Remove(this);
					}
					this._SubjectsInSchool.Entity = value;
					if ((value != null))
					{
						value.OptionGroupSubjects.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(long);
					}
					this.SendPropertyChanged("SubjectsInSchool");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OptionGroupStudents(OptionGroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.OptionGroupSubject = this;
		}
		
		private void detach_OptionGroupStudents(OptionGroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.OptionGroupSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAActionName")]
	public partial class PAActionName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ActionName;
		
		private EntitySet<PAAuditTrial> _PAAuditTrials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    #endregion
		
		public PAActionName()
		{
			this._PAAuditTrials = new EntitySet<PAAuditTrial>(new Action<PAAuditTrial>(this.attach_PAAuditTrials), new Action<PAAuditTrial>(this.detach_PAAuditTrials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAActionName_PAAuditTrial", Storage="_PAAuditTrials", ThisKey="ID", OtherKey="ActionID")]
		public EntitySet<PAAuditTrial> PAAuditTrials
		{
			get
			{
				return this._PAAuditTrials;
			}
			set
			{
				this._PAAuditTrials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAAuditTrials(PAAuditTrial entity)
		{
			this.SendPropertyChanging();
			entity.PAActionName = this;
		}
		
		private void detach_PAAuditTrials(PAAuditTrial entity)
		{
			this.SendPropertyChanging();
			entity.PAActionName = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAAuditTrial")]
	public partial class PAAuditTrial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _UserID;
		
		private int _ActionID;
		
		private string _IP_Address;
		
		private System.DateTime _ActionDate;
		
		private string _Remark;
		
		private string _AffectedWebPage;
		
		private System.Nullable<long> _SchoolId;
		
		private EntityRef<PAActionName> _PAActionName;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnIP_AddressChanging(string value);
    partial void OnIP_AddressChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnAffectedWebPageChanging(string value);
    partial void OnAffectedWebPageChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public PAAuditTrial()
		{
			this._PAActionName = default(EntityRef<PAActionName>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int NOT NULL")]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					if (this._PAActionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[IP Address]", Storage="_IP_Address", DbType="VarChar(50)")]
		public string IP_Address
		{
			get
			{
				return this._IP_Address;
			}
			set
			{
				if ((this._IP_Address != value))
				{
					this.OnIP_AddressChanging(value);
					this.SendPropertyChanging();
					this._IP_Address = value;
					this.SendPropertyChanged("IP_Address");
					this.OnIP_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectedWebPage", DbType="VarChar(250)")]
		public string AffectedWebPage
		{
			get
			{
				return this._AffectedWebPage;
			}
			set
			{
				if ((this._AffectedWebPage != value))
				{
					this.OnAffectedWebPageChanging(value);
					this.SendPropertyChanging();
					this._AffectedWebPage = value;
					this.SendPropertyChanged("AffectedWebPage");
					this.OnAffectedWebPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAActionName_PAAuditTrial", Storage="_PAActionName", ThisKey="ActionID", OtherKey="ID", IsForeignKey=true)]
		public PAActionName PAActionName
		{
			get
			{
				return this._PAActionName.Entity;
			}
			set
			{
				PAActionName previousValue = this._PAActionName.Entity;
				if (((previousValue != value) 
							|| (this._PAActionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAActionName.Entity = null;
						previousValue.PAAuditTrials.Remove(this);
					}
					this._PAActionName.Entity = value;
					if ((value != null))
					{
						value.PAAuditTrials.Add(this);
						this._ActionID = value.ID;
					}
					else
					{
						this._ActionID = default(int);
					}
					this.SendPropertyChanged("PAActionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PAAuditTrial", Storage="_User", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PAAuditTrials.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PAAuditTrials.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PAAuditTrial", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PAAuditTrials.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PAAuditTrials.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParentDetail")]
	public partial class ParentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FathersTitle;
		
		private string _FathersName;
		
		private string _FathersPhoneNumber;
		
		private string _FathersWorkAddress;
		
		private string _FathersEmail;
		
		private string _FathersNationality;
		
		private string _MothersOtherName;
		
		private string _MothersName;
		
		private string _MothersWorkAddress;
		
		private string _MothersEmail;
		
		private string _MothersNationality;
		
		private string _GuardianDetails;
		
		private string _GuardianPhoneNumber;
		
		private string _GuardianEmail;
		
		private string _GuardianRelationship;
		
		private string _Siblings;
		
		private string _FathersOccupation;
		
		private string _MothersOccupation;
		
		private string _MothersPhoneNumber;
		
		private EntitySet<FeedBackDetail> _FeedBackDetails;
		
		private EntitySet<ParentStudentMap> _ParentStudentMaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFathersTitleChanging(string value);
    partial void OnFathersTitleChanged();
    partial void OnFathersNameChanging(string value);
    partial void OnFathersNameChanged();
    partial void OnFathersPhoneNumberChanging(string value);
    partial void OnFathersPhoneNumberChanged();
    partial void OnFathersWorkAddressChanging(string value);
    partial void OnFathersWorkAddressChanged();
    partial void OnFathersEmailChanging(string value);
    partial void OnFathersEmailChanged();
    partial void OnFathersNationalityChanging(string value);
    partial void OnFathersNationalityChanged();
    partial void OnMothersOtherNameChanging(string value);
    partial void OnMothersOtherNameChanged();
    partial void OnMothersNameChanging(string value);
    partial void OnMothersNameChanged();
    partial void OnMothersWorkAddressChanging(string value);
    partial void OnMothersWorkAddressChanged();
    partial void OnMothersEmailChanging(string value);
    partial void OnMothersEmailChanged();
    partial void OnMothersNationalityChanging(string value);
    partial void OnMothersNationalityChanged();
    partial void OnGuardianDetailsChanging(string value);
    partial void OnGuardianDetailsChanged();
    partial void OnGuardianPhoneNumberChanging(string value);
    partial void OnGuardianPhoneNumberChanged();
    partial void OnGuardianEmailChanging(string value);
    partial void OnGuardianEmailChanged();
    partial void OnGuardianRelationshipChanging(string value);
    partial void OnGuardianRelationshipChanged();
    partial void OnSiblingsChanging(string value);
    partial void OnSiblingsChanged();
    partial void OnFathersOccupationChanging(string value);
    partial void OnFathersOccupationChanged();
    partial void OnMothersOccupationChanging(string value);
    partial void OnMothersOccupationChanged();
    partial void OnMothersPhoneNumberChanging(string value);
    partial void OnMothersPhoneNumberChanged();
    #endregion
		
		public ParentDetail()
		{
			this._FeedBackDetails = new EntitySet<FeedBackDetail>(new Action<FeedBackDetail>(this.attach_FeedBackDetails), new Action<FeedBackDetail>(this.detach_FeedBackDetails));
			this._ParentStudentMaps = new EntitySet<ParentStudentMap>(new Action<ParentStudentMap>(this.attach_ParentStudentMaps), new Action<ParentStudentMap>(this.detach_ParentStudentMaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersTitle", DbType="VarChar(100)")]
		public string FathersTitle
		{
			get
			{
				return this._FathersTitle;
			}
			set
			{
				if ((this._FathersTitle != value))
				{
					this.OnFathersTitleChanging(value);
					this.SendPropertyChanging();
					this._FathersTitle = value;
					this.SendPropertyChanged("FathersTitle");
					this.OnFathersTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersName", DbType="VarChar(100)")]
		public string FathersName
		{
			get
			{
				return this._FathersName;
			}
			set
			{
				if ((this._FathersName != value))
				{
					this.OnFathersNameChanging(value);
					this.SendPropertyChanging();
					this._FathersName = value;
					this.SendPropertyChanged("FathersName");
					this.OnFathersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersPhoneNumber", DbType="VarChar(100)")]
		public string FathersPhoneNumber
		{
			get
			{
				return this._FathersPhoneNumber;
			}
			set
			{
				if ((this._FathersPhoneNumber != value))
				{
					this.OnFathersPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._FathersPhoneNumber = value;
					this.SendPropertyChanged("FathersPhoneNumber");
					this.OnFathersPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersWorkAddress", DbType="VarChar(100)")]
		public string FathersWorkAddress
		{
			get
			{
				return this._FathersWorkAddress;
			}
			set
			{
				if ((this._FathersWorkAddress != value))
				{
					this.OnFathersWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._FathersWorkAddress = value;
					this.SendPropertyChanged("FathersWorkAddress");
					this.OnFathersWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersEmail", DbType="VarChar(100)")]
		public string FathersEmail
		{
			get
			{
				return this._FathersEmail;
			}
			set
			{
				if ((this._FathersEmail != value))
				{
					this.OnFathersEmailChanging(value);
					this.SendPropertyChanging();
					this._FathersEmail = value;
					this.SendPropertyChanged("FathersEmail");
					this.OnFathersEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersNationality", DbType="VarChar(100)")]
		public string FathersNationality
		{
			get
			{
				return this._FathersNationality;
			}
			set
			{
				if ((this._FathersNationality != value))
				{
					this.OnFathersNationalityChanging(value);
					this.SendPropertyChanging();
					this._FathersNationality = value;
					this.SendPropertyChanged("FathersNationality");
					this.OnFathersNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersOtherName", DbType="VarChar(100)")]
		public string MothersOtherName
		{
			get
			{
				return this._MothersOtherName;
			}
			set
			{
				if ((this._MothersOtherName != value))
				{
					this.OnMothersOtherNameChanging(value);
					this.SendPropertyChanging();
					this._MothersOtherName = value;
					this.SendPropertyChanged("MothersOtherName");
					this.OnMothersOtherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersName", DbType="VarChar(100)")]
		public string MothersName
		{
			get
			{
				return this._MothersName;
			}
			set
			{
				if ((this._MothersName != value))
				{
					this.OnMothersNameChanging(value);
					this.SendPropertyChanging();
					this._MothersName = value;
					this.SendPropertyChanged("MothersName");
					this.OnMothersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersWorkAddress", DbType="VarChar(100)")]
		public string MothersWorkAddress
		{
			get
			{
				return this._MothersWorkAddress;
			}
			set
			{
				if ((this._MothersWorkAddress != value))
				{
					this.OnMothersWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._MothersWorkAddress = value;
					this.SendPropertyChanged("MothersWorkAddress");
					this.OnMothersWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersEmail", DbType="VarChar(100)")]
		public string MothersEmail
		{
			get
			{
				return this._MothersEmail;
			}
			set
			{
				if ((this._MothersEmail != value))
				{
					this.OnMothersEmailChanging(value);
					this.SendPropertyChanging();
					this._MothersEmail = value;
					this.SendPropertyChanged("MothersEmail");
					this.OnMothersEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersNationality", DbType="VarChar(100)")]
		public string MothersNationality
		{
			get
			{
				return this._MothersNationality;
			}
			set
			{
				if ((this._MothersNationality != value))
				{
					this.OnMothersNationalityChanging(value);
					this.SendPropertyChanging();
					this._MothersNationality = value;
					this.SendPropertyChanged("MothersNationality");
					this.OnMothersNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianDetails", DbType="VarChar(100)")]
		public string GuardianDetails
		{
			get
			{
				return this._GuardianDetails;
			}
			set
			{
				if ((this._GuardianDetails != value))
				{
					this.OnGuardianDetailsChanging(value);
					this.SendPropertyChanging();
					this._GuardianDetails = value;
					this.SendPropertyChanged("GuardianDetails");
					this.OnGuardianDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianPhoneNumber", DbType="VarChar(100)")]
		public string GuardianPhoneNumber
		{
			get
			{
				return this._GuardianPhoneNumber;
			}
			set
			{
				if ((this._GuardianPhoneNumber != value))
				{
					this.OnGuardianPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._GuardianPhoneNumber = value;
					this.SendPropertyChanged("GuardianPhoneNumber");
					this.OnGuardianPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianEmail", DbType="VarChar(100)")]
		public string GuardianEmail
		{
			get
			{
				return this._GuardianEmail;
			}
			set
			{
				if ((this._GuardianEmail != value))
				{
					this.OnGuardianEmailChanging(value);
					this.SendPropertyChanging();
					this._GuardianEmail = value;
					this.SendPropertyChanged("GuardianEmail");
					this.OnGuardianEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianRelationship", DbType="VarChar(100)")]
		public string GuardianRelationship
		{
			get
			{
				return this._GuardianRelationship;
			}
			set
			{
				if ((this._GuardianRelationship != value))
				{
					this.OnGuardianRelationshipChanging(value);
					this.SendPropertyChanging();
					this._GuardianRelationship = value;
					this.SendPropertyChanged("GuardianRelationship");
					this.OnGuardianRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Siblings", DbType="VarChar(1000)")]
		public string Siblings
		{
			get
			{
				return this._Siblings;
			}
			set
			{
				if ((this._Siblings != value))
				{
					this.OnSiblingsChanging(value);
					this.SendPropertyChanging();
					this._Siblings = value;
					this.SendPropertyChanged("Siblings");
					this.OnSiblingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersOccupation", DbType="VarChar(200)")]
		public string FathersOccupation
		{
			get
			{
				return this._FathersOccupation;
			}
			set
			{
				if ((this._FathersOccupation != value))
				{
					this.OnFathersOccupationChanging(value);
					this.SendPropertyChanging();
					this._FathersOccupation = value;
					this.SendPropertyChanged("FathersOccupation");
					this.OnFathersOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersOccupation", DbType="VarChar(200)")]
		public string MothersOccupation
		{
			get
			{
				return this._MothersOccupation;
			}
			set
			{
				if ((this._MothersOccupation != value))
				{
					this.OnMothersOccupationChanging(value);
					this.SendPropertyChanging();
					this._MothersOccupation = value;
					this.SendPropertyChanged("MothersOccupation");
					this.OnMothersOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersPhoneNumber", DbType="VarChar(200)")]
		public string MothersPhoneNumber
		{
			get
			{
				return this._MothersPhoneNumber;
			}
			set
			{
				if ((this._MothersPhoneNumber != value))
				{
					this.OnMothersPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._MothersPhoneNumber = value;
					this.SendPropertyChanged("MothersPhoneNumber");
					this.OnMothersPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDetail_FeedBackDetail", Storage="_FeedBackDetails", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<FeedBackDetail> FeedBackDetails
		{
			get
			{
				return this._FeedBackDetails;
			}
			set
			{
				this._FeedBackDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDetail_ParentStudentMap", Storage="_ParentStudentMaps", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<ParentStudentMap> ParentStudentMaps
		{
			get
			{
				return this._ParentStudentMaps;
			}
			set
			{
				this._ParentStudentMaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeedBackDetails(FeedBackDetail entity)
		{
			this.SendPropertyChanging();
			entity.ParentDetail = this;
		}
		
		private void detach_FeedBackDetails(FeedBackDetail entity)
		{
			this.SendPropertyChanging();
			entity.ParentDetail = null;
		}
		
		private void attach_ParentStudentMaps(ParentStudentMap entity)
		{
			this.SendPropertyChanging();
			entity.ParentDetail = this;
		}
		
		private void detach_ParentStudentMaps(ParentStudentMap entity)
		{
			this.SendPropertyChanging();
			entity.ParentDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParentStudentMap")]
	public partial class ParentStudentMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ParentId;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<int> _ParentStudentStatus;
		
		private System.Nullable<long> _ParentUserId;
		
		private EntityRef<ParentStudentMap> _ParentStudentMap2;
		
		private EntityRef<ParentDetail> _ParentDetail;
		
		private EntityRef<ParentStudentMap> _ParentStudentMap1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnParentStudentStatusChanging(System.Nullable<int> value);
    partial void OnParentStudentStatusChanged();
    partial void OnParentUserIdChanging(System.Nullable<long> value);
    partial void OnParentUserIdChanged();
    #endregion
		
		public ParentStudentMap()
		{
			this._ParentStudentMap2 = default(EntityRef<ParentStudentMap>);
			this._ParentDetail = default(EntityRef<ParentDetail>);
			this._ParentStudentMap1 = default(EntityRef<ParentStudentMap>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._ParentStudentMap1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._ParentDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStudentStatus", DbType="Int")]
		public System.Nullable<int> ParentStudentStatus
		{
			get
			{
				return this._ParentStudentStatus;
			}
			set
			{
				if ((this._ParentStudentStatus != value))
				{
					this.OnParentStudentStatusChanging(value);
					this.SendPropertyChanging();
					this._ParentStudentStatus = value;
					this.SendPropertyChanged("ParentStudentStatus");
					this.OnParentStudentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentUserId", DbType="BigInt")]
		public System.Nullable<long> ParentUserId
		{
			get
			{
				return this._ParentUserId;
			}
			set
			{
				if ((this._ParentUserId != value))
				{
					this.OnParentUserIdChanging(value);
					this.SendPropertyChanging();
					this._ParentUserId = value;
					this.SendPropertyChanged("ParentUserId");
					this.OnParentUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentStudentMap_ParentStudentMap", Storage="_ParentStudentMap2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ParentStudentMap ParentStudentMap2
		{
			get
			{
				return this._ParentStudentMap2.Entity;
			}
			set
			{
				ParentStudentMap previousValue = this._ParentStudentMap2.Entity;
				if (((previousValue != value) 
							|| (this._ParentStudentMap2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentStudentMap2.Entity = null;
						previousValue.ParentStudentMap1 = null;
					}
					this._ParentStudentMap2.Entity = value;
					if ((value != null))
					{
						value.ParentStudentMap1 = this;
					}
					this.SendPropertyChanged("ParentStudentMap2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDetail_ParentStudentMap", Storage="_ParentDetail", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public ParentDetail ParentDetail
		{
			get
			{
				return this._ParentDetail.Entity;
			}
			set
			{
				ParentDetail previousValue = this._ParentDetail.Entity;
				if (((previousValue != value) 
							|| (this._ParentDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentDetail.Entity = null;
						previousValue.ParentStudentMaps.Remove(this);
					}
					this._ParentDetail.Entity = value;
					if ((value != null))
					{
						value.ParentStudentMaps.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ParentDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentStudentMap_ParentStudentMap", Storage="_ParentStudentMap1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public ParentStudentMap ParentStudentMap1
		{
			get
			{
				return this._ParentStudentMap1.Entity;
			}
			set
			{
				ParentStudentMap previousValue = this._ParentStudentMap1.Entity;
				if (((previousValue != value) 
							|| (this._ParentStudentMap1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentStudentMap1.Entity = null;
						previousValue.ParentStudentMap2 = null;
					}
					this._ParentStudentMap1.Entity = value;
					if ((value != null))
					{
						value.ParentStudentMap2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("ParentStudentMap1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ParentStudentMap", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ParentStudentMaps.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ParentStudentMaps.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PassportIdAdmissionNumberMatch")]
	public partial class PassportIdAdmissionNumberMatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _PassportFileName;
		
		private string _AdmissionNumber;
		
		private long _CampusId;
		
		private string _yearGrade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPassportFileNameChanging(string value);
    partial void OnPassportFileNameChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnCampusIdChanging(long value);
    partial void OnCampusIdChanged();
    partial void OnyearGradeChanging(string value);
    partial void OnyearGradeChanged();
    #endregion
		
		public PassportIdAdmissionNumberMatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportFileName", DbType="VarChar(100)")]
		public string PassportFileName
		{
			get
			{
				return this._PassportFileName;
			}
			set
			{
				if ((this._PassportFileName != value))
				{
					this.OnPassportFileNameChanging(value);
					this.SendPropertyChanging();
					this._PassportFileName = value;
					this.SendPropertyChanged("PassportFileName");
					this.OnPassportFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(50)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt NOT NULL")]
		public long CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearGrade", DbType="VarChar(200)")]
		public string yearGrade
		{
			get
			{
				return this._yearGrade;
			}
			set
			{
				if ((this._yearGrade != value))
				{
					this.OnyearGradeChanging(value);
					this.SendPropertyChanging();
					this._yearGrade = value;
					this.SendPropertyChanged("yearGrade");
					this.OnyearGradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentSubControl")]
	public partial class PaymentSubControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<bool> _HasPaid;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnHasPaidChanging(System.Nullable<bool> value);
    partial void OnHasPaidChanged();
    #endregion
		
		public PaymentSubControl()
		{
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(50)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPaid", DbType="Bit")]
		public System.Nullable<bool> HasPaid
		{
			get
			{
				return this._HasPaid;
			}
			set
			{
				if ((this._HasPaid != value))
				{
					this.OnHasPaidChanging(value);
					this.SendPropertyChanging();
					this._HasPaid = value;
					this.SendPropertyChanged("HasPaid");
					this.OnHasPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentSubControl", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentSubControls.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentSubControls.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PendingEmail")]
	public partial class PendingEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Subject;
		
		private System.DateTime _DueDate;
		
		private string _Body;
		
		private string _From;
		
		private string _To;
		
		private string _Bcc;
		
		private string _CC;
		
		private string _ErrorMessage;
		
		private System.Nullable<bool> _IsBodyHtml;
		
		private string _ReplyTo;
		
		private string _Sender;
		
		private System.Nullable<int> _Retries;
		
		private string _Priority;
		
		private System.Nullable<bool> _ThrewException;
		
		private System.Nullable<int> _RetryCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnToChanging(string value);
    partial void OnToChanged();
    partial void OnBccChanging(string value);
    partial void OnBccChanged();
    partial void OnCCChanging(string value);
    partial void OnCCChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnIsBodyHtmlChanging(System.Nullable<bool> value);
    partial void OnIsBodyHtmlChanged();
    partial void OnReplyToChanging(string value);
    partial void OnReplyToChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnRetriesChanging(System.Nullable<int> value);
    partial void OnRetriesChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnThrewExceptionChanging(System.Nullable<bool> value);
    partial void OnThrewExceptionChanged();
    partial void OnRetryCountChanging(System.Nullable<int> value);
    partial void OnRetryCountChanged();
    #endregion
		
		public PendingEmail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[From]", Storage="_From", DbType="VarChar(500)")]
		public string From
		{
			get
			{
				return this._From;
			}
			set
			{
				if ((this._From != value))
				{
					this.OnFromChanging(value);
					this.SendPropertyChanging();
					this._From = value;
					this.SendPropertyChanged("From");
					this.OnFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[To]", Storage="_To", DbType="VarChar(500)")]
		public string To
		{
			get
			{
				return this._To;
			}
			set
			{
				if ((this._To != value))
				{
					this.OnToChanging(value);
					this.SendPropertyChanging();
					this._To = value;
					this.SendPropertyChanged("To");
					this.OnToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bcc", DbType="VarChar(500)")]
		public string Bcc
		{
			get
			{
				return this._Bcc;
			}
			set
			{
				if ((this._Bcc != value))
				{
					this.OnBccChanging(value);
					this.SendPropertyChanging();
					this._Bcc = value;
					this.SendPropertyChanged("Bcc");
					this.OnBccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="VarChar(500)")]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this.OnCCChanging(value);
					this.SendPropertyChanging();
					this._CC = value;
					this.SendPropertyChanged("CC");
					this.OnCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBodyHtml", DbType="Bit")]
		public System.Nullable<bool> IsBodyHtml
		{
			get
			{
				return this._IsBodyHtml;
			}
			set
			{
				if ((this._IsBodyHtml != value))
				{
					this.OnIsBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._IsBodyHtml = value;
					this.SendPropertyChanged("IsBodyHtml");
					this.OnIsBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTo", DbType="VarChar(100)")]
		public string ReplyTo
		{
			get
			{
				return this._ReplyTo;
			}
			set
			{
				if ((this._ReplyTo != value))
				{
					this.OnReplyToChanging(value);
					this.SendPropertyChanging();
					this._ReplyTo = value;
					this.SendPropertyChanged("ReplyTo");
					this.OnReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="VarChar(200)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Retries", DbType="Int")]
		public System.Nullable<int> Retries
		{
			get
			{
				return this._Retries;
			}
			set
			{
				if ((this._Retries != value))
				{
					this.OnRetriesChanging(value);
					this.SendPropertyChanging();
					this._Retries = value;
					this.SendPropertyChanged("Retries");
					this.OnRetriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="VarChar(50)")]
		public string Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThrewException", DbType="Bit")]
		public System.Nullable<bool> ThrewException
		{
			get
			{
				return this._ThrewException;
			}
			set
			{
				if ((this._ThrewException != value))
				{
					this.OnThrewExceptionChanging(value);
					this.SendPropertyChanging();
					this._ThrewException = value;
					this.SendPropertyChanged("ThrewException");
					this.OnThrewExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryCount", DbType="Int")]
		public System.Nullable<int> RetryCount
		{
			get
			{
				return this._RetryCount;
			}
			set
			{
				if ((this._RetryCount != value))
				{
					this.OnRetryCountChanging(value);
					this.SendPropertyChanging();
					this._RetryCount = value;
					this.SendPropertyChanged("RetryCount");
					this.OnRetryCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Period")]
	public partial class Period : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _StopTime;
		
		private bool _IsLongBreak;
		
		private string _Description;
		
		private System.Nullable<long> _CampusID;
		
		private System.Nullable<long> _SchoolID;
		
		private System.Nullable<long> _ClientPeriodID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnStopTimeChanging(System.DateTime value);
    partial void OnStopTimeChanged();
    partial void OnIsLongBreakChanging(bool value);
    partial void OnIsLongBreakChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCampusIDChanging(System.Nullable<long> value);
    partial void OnCampusIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<long> value);
    partial void OnSchoolIDChanged();
    partial void OnClientPeriodIDChanging(System.Nullable<long> value);
    partial void OnClientPeriodIDChanged();
    #endregion
		
		public Period()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopTime", DbType="DateTime NOT NULL")]
		public System.DateTime StopTime
		{
			get
			{
				return this._StopTime;
			}
			set
			{
				if ((this._StopTime != value))
				{
					this.OnStopTimeChanging(value);
					this.SendPropertyChanging();
					this._StopTime = value;
					this.SendPropertyChanged("StopTime");
					this.OnStopTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLongBreak", DbType="Bit NOT NULL")]
		public bool IsLongBreak
		{
			get
			{
				return this._IsLongBreak;
			}
			set
			{
				if ((this._IsLongBreak != value))
				{
					this.OnIsLongBreakChanging(value);
					this.SendPropertyChanging();
					this._IsLongBreak = value;
					this.SendPropertyChanged("IsLongBreak");
					this.OnIsLongBreakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusID", DbType="BigInt")]
		public System.Nullable<long> CampusID
		{
			get
			{
				return this._CampusID;
			}
			set
			{
				if ((this._CampusID != value))
				{
					this.OnCampusIDChanging(value);
					this.SendPropertyChanging();
					this._CampusID = value;
					this.SendPropertyChanged("CampusID");
					this.OnCampusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientPeriodID", DbType="BigInt")]
		public System.Nullable<long> ClientPeriodID
		{
			get
			{
				return this._ClientPeriodID;
			}
			set
			{
				if ((this._ClientPeriodID != value))
				{
					this.OnClientPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._ClientPeriodID = value;
					this.SendPropertyChanged("ClientPeriodID");
					this.OnClientPeriodIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodAllocator")]
	public partial class PeriodAllocator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _Period;
		
		private System.Nullable<long> _SubjectTeacher;
		
		private System.Nullable<int> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnPeriodChanging(System.Nullable<long> value);
    partial void OnPeriodChanged();
    partial void OnSubjectTeacherChanging(System.Nullable<long> value);
    partial void OnSubjectTeacherChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public PeriodAllocator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="BigInt")]
		public System.Nullable<long> Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacher", DbType="BigInt")]
		public System.Nullable<long> SubjectTeacher
		{
			get
			{
				return this._SubjectTeacher;
			}
			set
			{
				if ((this._SubjectTeacher != value))
				{
					this.OnSubjectTeacherChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacher = value;
					this.SendPropertyChanged("SubjectTeacher");
					this.OnSubjectTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PositionInSchool")]
	public partial class PositionInSchool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _PositionName;
		
		private EntitySet<SelfSetupDetail> _SelfSetupDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPositionNameChanging(string value);
    partial void OnPositionNameChanged();
    #endregion
		
		public PositionInSchool()
		{
			this._SelfSetupDetails = new EntitySet<SelfSetupDetail>(new Action<SelfSetupDetail>(this.attach_SelfSetupDetails), new Action<SelfSetupDetail>(this.detach_SelfSetupDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this.OnPositionNameChanging(value);
					this.SendPropertyChanging();
					this._PositionName = value;
					this.SendPropertyChanged("PositionName");
					this.OnPositionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PositionInSchool_SelfSetupDetail", Storage="_SelfSetupDetails", ThisKey="ID", OtherKey="PositionInSchoolId")]
		public EntitySet<SelfSetupDetail> SelfSetupDetails
		{
			get
			{
				return this._SelfSetupDetails;
			}
			set
			{
				this._SelfSetupDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SelfSetupDetails(SelfSetupDetail entity)
		{
			this.SendPropertyChanging();
			entity.PositionInSchool = this;
		}
		
		private void detach_SelfSetupDetails(SelfSetupDetail entity)
		{
			this.SendPropertyChanging();
			entity.PositionInSchool = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfessionalCertification")]
	public partial class ProfessionalCertification
	{
		
		private string _CertificationName;
		
		public ProfessionalCertification()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CertificationName
		{
			get
			{
				return this._CertificationName;
			}
			set
			{
				if ((this._CertificationName != value))
				{
					this._CertificationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingList")]
	public partial class RatingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _RatingName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRatingNameChanging(string value);
    partial void OnRatingNameChanged();
    #endregion
		
		public RatingList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingName", DbType="NVarChar(50)")]
		public string RatingName
		{
			get
			{
				return this._RatingName;
			}
			set
			{
				if ((this._RatingName != value))
				{
					this.OnRatingNameChanging(value);
					this.SendPropertyChanging();
					this._RatingName = value;
					this.SendPropertyChanged("RatingName");
					this.OnRatingNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceCenter")]
	public partial class ResourceCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FileName;
		
		private string _FileDesc;
		
		private long _DocumentType;
		
		private string _RolePermitted;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileDescChanging(string value);
    partial void OnFileDescChanged();
    partial void OnDocumentTypeChanging(long value);
    partial void OnDocumentTypeChanged();
    partial void OnRolePermittedChanging(string value);
    partial void OnRolePermittedChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    #endregion
		
		public ResourceCenter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDesc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FileDesc
		{
			get
			{
				return this._FileDesc;
			}
			set
			{
				if ((this._FileDesc != value))
				{
					this.OnFileDescChanging(value);
					this.SendPropertyChanging();
					this._FileDesc = value;
					this.SendPropertyChanged("FileDesc");
					this.OnFileDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="BigInt NOT NULL")]
		public long DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePermitted", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string RolePermitted
		{
			get
			{
				return this._RolePermitted;
			}
			set
			{
				if ((this._RolePermitted != value))
				{
					this.OnRolePermittedChanging(value);
					this.SendPropertyChanging();
					this._RolePermitted = value;
					this.SendPropertyChanged("RolePermitted");
					this.OnRolePermittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultBase")]
	public partial class ResultBase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ResultFormatId;
		
		private string _RetrievedScore;
		
		private EntityRef<ResultFormatConfig> _ResultFormatConfig;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnResultFormatIdChanging(System.Nullable<long> value);
    partial void OnResultFormatIdChanged();
    partial void OnRetrievedScoreChanging(string value);
    partial void OnRetrievedScoreChanged();
    #endregion
		
		public ResultBase()
		{
			this._ResultFormatConfig = default(EntityRef<ResultFormatConfig>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._ResultFormatConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultFormatId", DbType="BigInt")]
		public System.Nullable<long> ResultFormatId
		{
			get
			{
				return this._ResultFormatId;
			}
			set
			{
				if ((this._ResultFormatId != value))
				{
					this.OnResultFormatIdChanging(value);
					this.SendPropertyChanging();
					this._ResultFormatId = value;
					this.SendPropertyChanged("ResultFormatId");
					this.OnResultFormatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetrievedScore", DbType="VarChar(50)")]
		public string RetrievedScore
		{
			get
			{
				return this._RetrievedScore;
			}
			set
			{
				if ((this._RetrievedScore != value))
				{
					this.OnRetrievedScoreChanging(value);
					this.SendPropertyChanging();
					this._RetrievedScore = value;
					this.SendPropertyChanged("RetrievedScore");
					this.OnRetrievedScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResultFormatConfig_ResultBase", Storage="_ResultFormatConfig", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public ResultFormatConfig ResultFormatConfig
		{
			get
			{
				return this._ResultFormatConfig.Entity;
			}
			set
			{
				ResultFormatConfig previousValue = this._ResultFormatConfig.Entity;
				if (((previousValue != value) 
							|| (this._ResultFormatConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResultFormatConfig.Entity = null;
						previousValue.ResultBase = null;
					}
					this._ResultFormatConfig.Entity = value;
					if ((value != null))
					{
						value.ResultBase = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("ResultFormatConfig");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultFormatConfig")]
	public partial class ResultFormatConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SubjectId;
		
		private string _ColumnName;
		
		private System.Nullable<long> _ResultTypeId;
		
		private EntityRef<ResultBase> _ResultBase;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<ResultType> _ResultType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnResultTypeIdChanging(System.Nullable<long> value);
    partial void OnResultTypeIdChanged();
    #endregion
		
		public ResultFormatConfig()
		{
			this._ResultBase = default(EntityRef<ResultBase>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._ResultType = default(EntityRef<ResultType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._ResultType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="VarChar(50)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultTypeId", DbType="BigInt")]
		public System.Nullable<long> ResultTypeId
		{
			get
			{
				return this._ResultTypeId;
			}
			set
			{
				if ((this._ResultTypeId != value))
				{
					this.OnResultTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ResultTypeId = value;
					this.SendPropertyChanged("ResultTypeId");
					this.OnResultTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResultFormatConfig_ResultBase", Storage="_ResultBase", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ResultBase ResultBase
		{
			get
			{
				return this._ResultBase.Entity;
			}
			set
			{
				ResultBase previousValue = this._ResultBase.Entity;
				if (((previousValue != value) 
							|| (this._ResultBase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResultBase.Entity = null;
						previousValue.ResultFormatConfig = null;
					}
					this._ResultBase.Entity = value;
					if ((value != null))
					{
						value.ResultFormatConfig = this;
					}
					this.SendPropertyChanged("ResultBase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ResultFormatConfig", Storage="_Class_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ResultFormatConfigs.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ResultFormatConfigs.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResultType_ResultFormatConfig", Storage="_ResultType", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public ResultType ResultType
		{
			get
			{
				return this._ResultType.Entity;
			}
			set
			{
				ResultType previousValue = this._ResultType.Entity;
				if (((previousValue != value) 
							|| (this._ResultType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResultType.Entity = null;
						previousValue.ResultFormatConfig = null;
					}
					this._ResultType.Entity = value;
					if ((value != null))
					{
						value.ResultFormatConfig = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("ResultType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultType")]
	public partial class ResultType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private EntityRef<ResultFormatConfig> _ResultFormatConfig;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public ResultType()
		{
			this._ResultFormatConfig = default(EntityRef<ResultFormatConfig>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResultType_ResultFormatConfig", Storage="_ResultFormatConfig", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ResultFormatConfig ResultFormatConfig
		{
			get
			{
				return this._ResultFormatConfig.Entity;
			}
			set
			{
				ResultFormatConfig previousValue = this._ResultFormatConfig.Entity;
				if (((previousValue != value) 
							|| (this._ResultFormatConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResultFormatConfig.Entity = null;
						previousValue.ResultType = null;
					}
					this._ResultFormatConfig.Entity = value;
					if ((value != null))
					{
						value.ResultType = this;
					}
					this.SendPropertyChanged("ResultFormatConfig");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _RoleName;
		
		private string _RoleCode;
		
		private int _ParentRoleId;
		
		private System.Nullable<long> _SchoolId;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<MenuRole> _MenuRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnParentRoleIdChanging(int value);
    partial void OnParentRoleIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._MenuRoles = new EntitySet<MenuRole>(new Action<MenuRole>(this.attach_MenuRoles), new Action<MenuRole>(this.detach_MenuRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCode", DbType="VarChar(50)")]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRoleId", DbType="Int NOT NULL")]
		public int ParentRoleId
		{
			get
			{
				return this._ParentRoleId;
			}
			set
			{
				if ((this._ParentRoleId != value))
				{
					this.OnParentRoleIdChanging(value);
					this.SendPropertyChanging();
					this._ParentRoleId = value;
					this.SendPropertyChanged("ParentRoleId");
					this.OnParentRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_MenuRole", Storage="_MenuRoles", ThisKey="Id", OtherKey="RoleID")]
		public EntitySet<MenuRole> MenuRoles
		{
			get
			{
				return this._MenuRoles;
			}
			set
			{
				this._MenuRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolAccount")]
	public partial class SchoolAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _SchoolId;
		
		private string _BankName;
		
		private string _SchoolAccountNumber;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnSchoolAccountNumberChanging(string value);
    partial void OnSchoolAccountNumberChanged();
    #endregion
		
		public SchoolAccount()
		{
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAccountNumber", DbType="NVarChar(50)")]
		public string SchoolAccountNumber
		{
			get
			{
				return this._SchoolAccountNumber;
			}
			set
			{
				if ((this._SchoolAccountNumber != value))
				{
					this.OnSchoolAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._SchoolAccountNumber = value;
					this.SendPropertyChanged("SchoolAccountNumber");
					this.OnSchoolAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_SchoolAccount", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.SchoolAccounts.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.SchoolAccounts.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolCampus")]
	public partial class SchoolCampus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private long _SchoolId;
		
		private string _CampusAddress;
		
		private EntitySet<BatchStudent> _BatchStudents;
		
		private EntitySet<PaymentSubControl> _PaymentSubControls;
		
		private EntitySet<ScoreConfiguration> _ScoreConfigurations;
		
		private EntitySet<SubscriptionPaymentDetail> _SubscriptionPaymentDetails;
		
		private EntitySet<SweepTransactionLog> _SweepTransactionLogs;
		
		private EntitySet<ReportCardPosition> _ReportCardPositions;
		
		private EntitySet<PaymentFeeTemplateList> _PaymentFeeTemplateLists;
		
		private EntitySet<PaymentFeeType> _PaymentFeeTypes;
		
		private EntitySet<PaymentFee> _PaymentFees;
		
		private EntitySet<PaymentFeeTemplate> _PaymentFeeTemplates;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<LessonNote> _LessonNotes;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<StudentScoreCategory> _StudentScoreCategories;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<ScoreCategoryConfiguration> _ScoreCategoryConfigurations;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents;
		
		private EntitySet<MenuRole> _MenuRoles;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<ReportCardNextTermBegin> _ReportCardNextTermBegins;
		
		private EntitySet<NewsLetter> _NewsLetters;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<ReportCardPrintConfig> _ReportCardPrintConfigs;
		
		private EntitySet<ExternalResourceLink> _ExternalResourceLinks;
		
		private EntitySet<ExternalResourceDocument> _ExternalResourceDocuments;
		
		private EntitySet<ExternalResourceMultimedia> _ExternalResourceMultimedias;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
		private EntitySet<CbtNotice> _CbtNotices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSchoolIdChanging(long value);
    partial void OnSchoolIdChanged();
    partial void OnCampusAddressChanging(string value);
    partial void OnCampusAddressChanged();
    #endregion
		
		public SchoolCampus()
		{
			this._BatchStudents = new EntitySet<BatchStudent>(new Action<BatchStudent>(this.attach_BatchStudents), new Action<BatchStudent>(this.detach_BatchStudents));
			this._PaymentSubControls = new EntitySet<PaymentSubControl>(new Action<PaymentSubControl>(this.attach_PaymentSubControls), new Action<PaymentSubControl>(this.detach_PaymentSubControls));
			this._ScoreConfigurations = new EntitySet<ScoreConfiguration>(new Action<ScoreConfiguration>(this.attach_ScoreConfigurations), new Action<ScoreConfiguration>(this.detach_ScoreConfigurations));
			this._SubscriptionPaymentDetails = new EntitySet<SubscriptionPaymentDetail>(new Action<SubscriptionPaymentDetail>(this.attach_SubscriptionPaymentDetails), new Action<SubscriptionPaymentDetail>(this.detach_SubscriptionPaymentDetails));
			this._SweepTransactionLogs = new EntitySet<SweepTransactionLog>(new Action<SweepTransactionLog>(this.attach_SweepTransactionLogs), new Action<SweepTransactionLog>(this.detach_SweepTransactionLogs));
			this._ReportCardPositions = new EntitySet<ReportCardPosition>(new Action<ReportCardPosition>(this.attach_ReportCardPositions), new Action<ReportCardPosition>(this.detach_ReportCardPositions));
			this._PaymentFeeTemplateLists = new EntitySet<PaymentFeeTemplateList>(new Action<PaymentFeeTemplateList>(this.attach_PaymentFeeTemplateLists), new Action<PaymentFeeTemplateList>(this.detach_PaymentFeeTemplateLists));
			this._PaymentFeeTypes = new EntitySet<PaymentFeeType>(new Action<PaymentFeeType>(this.attach_PaymentFeeTypes), new Action<PaymentFeeType>(this.detach_PaymentFeeTypes));
			this._PaymentFees = new EntitySet<PaymentFee>(new Action<PaymentFee>(this.attach_PaymentFees), new Action<PaymentFee>(this.detach_PaymentFees));
			this._PaymentFeeTemplates = new EntitySet<PaymentFeeTemplate>(new Action<PaymentFeeTemplate>(this.attach_PaymentFeeTemplates), new Action<PaymentFeeTemplate>(this.detach_PaymentFeeTemplates));
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._LessonNotes = new EntitySet<LessonNote>(new Action<LessonNote>(this.attach_LessonNotes), new Action<LessonNote>(this.detach_LessonNotes));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._StudentScoreCategories = new EntitySet<StudentScoreCategory>(new Action<StudentScoreCategory>(this.attach_StudentScoreCategories), new Action<StudentScoreCategory>(this.detach_StudentScoreCategories));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._ScoreCategoryConfigurations = new EntitySet<ScoreCategoryConfiguration>(new Action<ScoreCategoryConfiguration>(this.attach_ScoreCategoryConfigurations), new Action<ScoreCategoryConfiguration>(this.detach_ScoreCategoryConfigurations));
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			this._PaymentPermanents = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents), new Action<PaymentPermanent>(this.detach_PaymentPermanents));
			this._MenuRoles = new EntitySet<MenuRole>(new Action<MenuRole>(this.attach_MenuRoles), new Action<MenuRole>(this.detach_MenuRoles));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._ReportCardNextTermBegins = new EntitySet<ReportCardNextTermBegin>(new Action<ReportCardNextTermBegin>(this.attach_ReportCardNextTermBegins), new Action<ReportCardNextTermBegin>(this.detach_ReportCardNextTermBegins));
			this._NewsLetters = new EntitySet<NewsLetter>(new Action<NewsLetter>(this.attach_NewsLetters), new Action<NewsLetter>(this.detach_NewsLetters));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._ReportCardPrintConfigs = new EntitySet<ReportCardPrintConfig>(new Action<ReportCardPrintConfig>(this.attach_ReportCardPrintConfigs), new Action<ReportCardPrintConfig>(this.detach_ReportCardPrintConfigs));
			this._ExternalResourceLinks = new EntitySet<ExternalResourceLink>(new Action<ExternalResourceLink>(this.attach_ExternalResourceLinks), new Action<ExternalResourceLink>(this.detach_ExternalResourceLinks));
			this._ExternalResourceDocuments = new EntitySet<ExternalResourceDocument>(new Action<ExternalResourceDocument>(this.attach_ExternalResourceDocuments), new Action<ExternalResourceDocument>(this.detach_ExternalResourceDocuments));
			this._ExternalResourceMultimedias = new EntitySet<ExternalResourceMultimedia>(new Action<ExternalResourceMultimedia>(this.attach_ExternalResourceMultimedias), new Action<ExternalResourceMultimedia>(this.detach_ExternalResourceMultimedias));
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			this._CbtNotices = new EntitySet<CbtNotice>(new Action<CbtNotice>(this.attach_CbtNotices), new Action<CbtNotice>(this.detach_CbtNotices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt NOT NULL")]
		public long SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusAddress", DbType="VarChar(MAX)")]
		public string CampusAddress
		{
			get
			{
				return this._CampusAddress;
			}
			set
			{
				if ((this._CampusAddress != value))
				{
					this.OnCampusAddressChanging(value);
					this.SendPropertyChanging();
					this._CampusAddress = value;
					this.SendPropertyChanged("CampusAddress");
					this.OnCampusAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_BatchStudent", Storage="_BatchStudents", ThisKey="Id", OtherKey="SchoolCampusId")]
		public EntitySet<BatchStudent> BatchStudents
		{
			get
			{
				return this._BatchStudents;
			}
			set
			{
				this._BatchStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentSubControl", Storage="_PaymentSubControls", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentSubControl> PaymentSubControls
		{
			get
			{
				return this._PaymentSubControls;
			}
			set
			{
				this._PaymentSubControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ScoreConfiguration", Storage="_ScoreConfigurations", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ScoreConfiguration> ScoreConfigurations
		{
			get
			{
				return this._ScoreConfigurations;
			}
			set
			{
				this._ScoreConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_SubscriptionPaymentDetail", Storage="_SubscriptionPaymentDetails", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<SubscriptionPaymentDetail> SubscriptionPaymentDetails
		{
			get
			{
				return this._SubscriptionPaymentDetails;
			}
			set
			{
				this._SubscriptionPaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_SweepTransactionLog", Storage="_SweepTransactionLogs", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<SweepTransactionLog> SweepTransactionLogs
		{
			get
			{
				return this._SweepTransactionLogs;
			}
			set
			{
				this._SweepTransactionLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardPosition", Storage="_ReportCardPositions", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this._ReportCardPositions;
			}
			set
			{
				this._ReportCardPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFeeTemplateList", Storage="_PaymentFeeTemplateLists", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentFeeTemplateList> PaymentFeeTemplateLists
		{
			get
			{
				return this._PaymentFeeTemplateLists;
			}
			set
			{
				this._PaymentFeeTemplateLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFeeType", Storage="_PaymentFeeTypes", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentFeeType> PaymentFeeTypes
		{
			get
			{
				return this._PaymentFeeTypes;
			}
			set
			{
				this._PaymentFeeTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFee", Storage="_PaymentFees", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentFee> PaymentFees
		{
			get
			{
				return this._PaymentFees;
			}
			set
			{
				this._PaymentFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFeeTemplate", Storage="_PaymentFeeTemplates", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentFeeTemplate> PaymentFeeTemplates
		{
			get
			{
				return this._PaymentFeeTemplates;
			}
			set
			{
				this._PaymentFeeTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_LessonNote", Storage="_LessonNotes", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<LessonNote> LessonNotes
		{
			get
			{
				return this._LessonNotes;
			}
			set
			{
				this._LessonNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardData", Storage="_ReportCardDatas", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreCategory", Storage="_StudentScoreCategories", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this._StudentScoreCategories;
			}
			set
			{
				this._StudentScoreCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ScoreCategoryConfiguration", Storage="_ScoreCategoryConfigurations", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ScoreCategoryConfiguration> ScoreCategoryConfigurations
		{
			get
			{
				return this._ScoreCategoryConfigurations;
			}
			set
			{
				this._ScoreCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardComment", Storage="_ReportCardComments", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentPermanent", Storage="_PaymentPermanents", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this._PaymentPermanents;
			}
			set
			{
				this._PaymentPermanents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_MenuRole", Storage="_MenuRoles", ThisKey="Id", OtherKey="CampusID")]
		public EntitySet<MenuRole> MenuRoles
		{
			get
			{
				return this._MenuRoles;
			}
			set
			{
				this._MenuRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardNextTermBegin", Storage="_ReportCardNextTermBegins", ThisKey="Id", OtherKey="CampusID")]
		public EntitySet<ReportCardNextTermBegin> ReportCardNextTermBegins
		{
			get
			{
				return this._ReportCardNextTermBegins;
			}
			set
			{
				this._ReportCardNextTermBegins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_NewsLetter", Storage="_NewsLetters", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<NewsLetter> NewsLetters
		{
			get
			{
				return this._NewsLetters;
			}
			set
			{
				this._NewsLetters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardPrintConfig", Storage="_ReportCardPrintConfigs", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this._ReportCardPrintConfigs;
			}
			set
			{
				this._ReportCardPrintConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ExternalResourceLink", Storage="_ExternalResourceLinks", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ExternalResourceLink> ExternalResourceLinks
		{
			get
			{
				return this._ExternalResourceLinks;
			}
			set
			{
				this._ExternalResourceLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ExternalResourceDocument", Storage="_ExternalResourceDocuments", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ExternalResourceDocument> ExternalResourceDocuments
		{
			get
			{
				return this._ExternalResourceDocuments;
			}
			set
			{
				this._ExternalResourceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ExternalResourceMultimedia", Storage="_ExternalResourceMultimedias", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this._ExternalResourceMultimedias;
			}
			set
			{
				this._ExternalResourceMultimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_CbtNotice", Storage="_CbtNotices", ThisKey="Id", OtherKey="CampusId")]
		public EntitySet<CbtNotice> CbtNotices
		{
			get
			{
				return this._CbtNotices;
			}
			set
			{
				this._CbtNotices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentSubControls(PaymentSubControl entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentSubControls(PaymentSubControl entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ScoreConfigurations(ScoreConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ScoreConfigurations(ScoreConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_SweepTransactionLogs(SweepTransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_SweepTransactionLogs(SweepTransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentFeeTypes(PaymentFeeType entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentFeeTypes(PaymentFeeType entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentFeeTemplates(PaymentFeeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentFeeTemplates(PaymentFeeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ReportCardNextTermBegins(ReportCardNextTermBegin entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ReportCardNextTermBegins(ReportCardNextTermBegin entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
		
		private void attach_CbtNotices(CbtNotice entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = this;
		}
		
		private void detach_CbtNotices(CbtNotice entity)
		{
			this.SendPropertyChanging();
			entity.SchoolCampus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolType")]
	public partial class SchoolType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SchoolTypeName;
		
		private System.Nullable<int> _CurriculumId;
		
		private EntityRef<Curriculum> _Curriculum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSchoolTypeNameChanging(string value);
    partial void OnSchoolTypeNameChanged();
    partial void OnCurriculumIdChanging(System.Nullable<int> value);
    partial void OnCurriculumIdChanged();
    #endregion
		
		public SchoolType()
		{
			this._Curriculum = default(EntityRef<Curriculum>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolTypeName", DbType="VarChar(50)")]
		public string SchoolTypeName
		{
			get
			{
				return this._SchoolTypeName;
			}
			set
			{
				if ((this._SchoolTypeName != value))
				{
					this.OnSchoolTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolTypeName = value;
					this.SendPropertyChanged("SchoolTypeName");
					this.OnSchoolTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurriculumId", DbType="Int")]
		public System.Nullable<int> CurriculumId
		{
			get
			{
				return this._CurriculumId;
			}
			set
			{
				if ((this._CurriculumId != value))
				{
					if (this._Curriculum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurriculumIdChanging(value);
					this.SendPropertyChanging();
					this._CurriculumId = value;
					this.SendPropertyChanged("CurriculumId");
					this.OnCurriculumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_SchoolType", Storage="_Curriculum", ThisKey="CurriculumId", OtherKey="Id", IsForeignKey=true)]
		public Curriculum Curriculum
		{
			get
			{
				return this._Curriculum.Entity;
			}
			set
			{
				Curriculum previousValue = this._Curriculum.Entity;
				if (((previousValue != value) 
							|| (this._Curriculum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curriculum.Entity = null;
						previousValue.SchoolTypes.Remove(this);
					}
					this._Curriculum.Entity = value;
					if ((value != null))
					{
						value.SchoolTypes.Add(this);
						this._CurriculumId = value.Id;
					}
					else
					{
						this._CurriculumId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Curriculum");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScoreConfiguration")]
	public partial class ScoreConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _TestScore;
		
		private System.Nullable<long> _ExamScore;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _ClassId;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTestScoreChanging(System.Nullable<long> value);
    partial void OnTestScoreChanged();
    partial void OnExamScoreChanging(System.Nullable<long> value);
    partial void OnExamScoreChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    #endregion
		
		public ScoreConfiguration()
		{
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScore", DbType="BigInt")]
		public System.Nullable<long> TestScore
		{
			get
			{
				return this._TestScore;
			}
			set
			{
				if ((this._TestScore != value))
				{
					this.OnTestScoreChanging(value);
					this.SendPropertyChanging();
					this._TestScore = value;
					this.SendPropertyChanged("TestScore");
					this.OnTestScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScore", DbType="BigInt")]
		public System.Nullable<long> ExamScore
		{
			get
			{
				return this._ExamScore;
			}
			set
			{
				if ((this._ExamScore != value))
				{
					this.OnExamScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamScore = value;
					this.SendPropertyChanged("ExamScore");
					this.OnExamScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ScoreConfiguration", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ScoreConfigurations.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ScoreConfigurations.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ScoreConfiguration", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ScoreConfigurations.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ScoreConfigurations.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScoreGradeConfiguration")]
	public partial class ScoreGradeConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _LowestRange;
		
		private long _HighestRange;
		
		private string _Grade;
		
		private string _Remark;
		
		private long _ClassId;
		
		private long _SchoolId;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLowestRangeChanging(long value);
    partial void OnLowestRangeChanged();
    partial void OnHighestRangeChanging(long value);
    partial void OnHighestRangeChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnClassIdChanging(long value);
    partial void OnClassIdChanged();
    partial void OnSchoolIdChanging(long value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public ScoreGradeConfiguration()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowestRange", DbType="BigInt NOT NULL")]
		public long LowestRange
		{
			get
			{
				return this._LowestRange;
			}
			set
			{
				if ((this._LowestRange != value))
				{
					this.OnLowestRangeChanging(value);
					this.SendPropertyChanging();
					this._LowestRange = value;
					this.SendPropertyChanged("LowestRange");
					this.OnLowestRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighestRange", DbType="BigInt NOT NULL")]
		public long HighestRange
		{
			get
			{
				return this._HighestRange;
			}
			set
			{
				if ((this._HighestRange != value))
				{
					this.OnHighestRangeChanging(value);
					this.SendPropertyChanging();
					this._HighestRange = value;
					this.SendPropertyChanged("HighestRange");
					this.OnHighestRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt NOT NULL")]
		public long ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt NOT NULL")]
		public long SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ScoreGradeConfiguration", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ScoreGradeConfigurations.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ScoreGradeConfigurations.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(long);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ScoreGradeConfiguration", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ScoreGradeConfigurations.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ScoreGradeConfigurations.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(long);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelfSetupDetails")]
	public partial class SelfSetupDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Email;
		
		private string _PhoneNo;
		
		private System.Nullable<long> _PositionInSchoolId;
		
		private System.Nullable<System.DateTime> _SubmissionDate;
		
		private EntityRef<PositionInSchool> _PositionInSchool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnPositionInSchoolIdChanging(System.Nullable<long> value);
    partial void OnPositionInSchoolIdChanged();
    partial void OnSubmissionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmissionDateChanged();
    #endregion
		
		public SelfSetupDetail()
		{
			this._PositionInSchool = default(EntityRef<PositionInSchool>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(50)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionInSchoolId", DbType="BigInt")]
		public System.Nullable<long> PositionInSchoolId
		{
			get
			{
				return this._PositionInSchoolId;
			}
			set
			{
				if ((this._PositionInSchoolId != value))
				{
					if (this._PositionInSchool.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionInSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._PositionInSchoolId = value;
					this.SendPropertyChanged("PositionInSchoolId");
					this.OnPositionInSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmissionDate
		{
			get
			{
				return this._SubmissionDate;
			}
			set
			{
				if ((this._SubmissionDate != value))
				{
					this.OnSubmissionDateChanging(value);
					this.SendPropertyChanging();
					this._SubmissionDate = value;
					this.SendPropertyChanged("SubmissionDate");
					this.OnSubmissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PositionInSchool_SelfSetupDetail", Storage="_PositionInSchool", ThisKey="PositionInSchoolId", OtherKey="ID", IsForeignKey=true)]
		public PositionInSchool PositionInSchool
		{
			get
			{
				return this._PositionInSchool.Entity;
			}
			set
			{
				PositionInSchool previousValue = this._PositionInSchool.Entity;
				if (((previousValue != value) 
							|| (this._PositionInSchool.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PositionInSchool.Entity = null;
						previousValue.SelfSetupDetails.Remove(this);
					}
					this._PositionInSchool.Entity = value;
					if ((value != null))
					{
						value.SelfSetupDetails.Add(this);
						this._PositionInSchoolId = value.ID;
					}
					else
					{
						this._PositionInSchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PositionInSchool");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sms")]
	public partial class sm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _SenderChannel;
		
		private string _Message;
		
		private string _Recipient;
		
		private System.DateTime _DateSent;
		
		private string _SenderName;
		
		private string _ResponseMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSenderChannelChanging(string value);
    partial void OnSenderChannelChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnDateSentChanging(System.DateTime value);
    partial void OnDateSentChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnResponseMessageChanging(string value);
    partial void OnResponseMessageChanged();
    #endregion
		
		public sm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderChannel", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SenderChannel
		{
			get
			{
				return this._SenderChannel;
			}
			set
			{
				if ((this._SenderChannel != value))
				{
					this.OnSenderChannelChanging(value);
					this.SendPropertyChanging();
					this._SenderChannel = value;
					this.SendPropertyChanged("SenderChannel");
					this.OnSenderChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSent", DbType="DateTime NOT NULL")]
		public System.DateTime DateSent
		{
			get
			{
				return this._DateSent;
			}
			set
			{
				if ((this._DateSent != value))
				{
					this.OnDateSentChanging(value);
					this.SendPropertyChanging();
					this._DateSent = value;
					this.SendPropertyChanged("DateSent");
					this.OnDateSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderName
		{
			get
			{
				return this._SenderName;
			}
			set
			{
				if ((this._SenderName != value))
				{
					this.OnSenderNameChanging(value);
					this.SendPropertyChanging();
					this._SenderName = value;
					this.SendPropertyChanged("SenderName");
					this.OnSenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseMessage", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ResponseMessage
		{
			get
			{
				return this._ResponseMessage;
			}
			set
			{
				if ((this._ResponseMessage != value))
				{
					this.OnResponseMessageChanging(value);
					this.SendPropertyChanging();
					this._ResponseMessage = value;
					this.SendPropertyChanged("ResponseMessage");
					this.OnResponseMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentAcademicProgression")]
	public partial class StudentAcademicProgression : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _GradeClassTeacherInfoId;
		
		private System.Nullable<long> _AcademicSessionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnGradeClassTeacherInfoIdChanging(System.Nullable<long> value);
    partial void OnGradeClassTeacherInfoIdChanged();
    partial void OnAcademicSessionIdChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIdChanged();
    #endregion
		
		public StudentAcademicProgression()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeClassTeacherInfoId", DbType="BigInt")]
		public System.Nullable<long> GradeClassTeacherInfoId
		{
			get
			{
				return this._GradeClassTeacherInfoId;
			}
			set
			{
				if ((this._GradeClassTeacherInfoId != value))
				{
					this.OnGradeClassTeacherInfoIdChanging(value);
					this.SendPropertyChanging();
					this._GradeClassTeacherInfoId = value;
					this.SendPropertyChanged("GradeClassTeacherInfoId");
					this.OnGradeClassTeacherInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionId", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionId
		{
			get
			{
				return this._AcademicSessionId;
			}
			set
			{
				if ((this._AcademicSessionId != value))
				{
					this.OnAcademicSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionId = value;
					this.SendPropertyChanged("AcademicSessionId");
					this.OnAcademicSessionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentBills")]
	public partial class StudentBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _StudentId;
		
		private long _YearBillId;
		
		private bool _AnyAdditionalFee;
		
		private string _AdditionalFeesIds;
		
		private string _GeneratedStudentBillId;
		
		private EntityRef<YearBill> _YearBill;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OnYearBillIdChanging(long value);
    partial void OnYearBillIdChanged();
    partial void OnAnyAdditionalFeeChanging(bool value);
    partial void OnAnyAdditionalFeeChanged();
    partial void OnAdditionalFeesIdsChanging(string value);
    partial void OnAdditionalFeesIdsChanged();
    partial void OnGeneratedStudentBillIdChanging(string value);
    partial void OnGeneratedStudentBillIdChanged();
    #endregion
		
		public StudentBill()
		{
			this._YearBill = default(EntityRef<YearBill>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearBillId", DbType="BigInt NOT NULL")]
		public long YearBillId
		{
			get
			{
				return this._YearBillId;
			}
			set
			{
				if ((this._YearBillId != value))
				{
					if (this._YearBill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYearBillIdChanging(value);
					this.SendPropertyChanging();
					this._YearBillId = value;
					this.SendPropertyChanged("YearBillId");
					this.OnYearBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnyAdditionalFee", DbType="Bit NOT NULL")]
		public bool AnyAdditionalFee
		{
			get
			{
				return this._AnyAdditionalFee;
			}
			set
			{
				if ((this._AnyAdditionalFee != value))
				{
					this.OnAnyAdditionalFeeChanging(value);
					this.SendPropertyChanging();
					this._AnyAdditionalFee = value;
					this.SendPropertyChanged("AnyAdditionalFee");
					this.OnAnyAdditionalFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalFeesIds", DbType="VarChar(100)")]
		public string AdditionalFeesIds
		{
			get
			{
				return this._AdditionalFeesIds;
			}
			set
			{
				if ((this._AdditionalFeesIds != value))
				{
					this.OnAdditionalFeesIdsChanging(value);
					this.SendPropertyChanging();
					this._AdditionalFeesIds = value;
					this.SendPropertyChanged("AdditionalFeesIds");
					this.OnAdditionalFeesIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedStudentBillId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GeneratedStudentBillId
		{
			get
			{
				return this._GeneratedStudentBillId;
			}
			set
			{
				if ((this._GeneratedStudentBillId != value))
				{
					this.OnGeneratedStudentBillIdChanging(value);
					this.SendPropertyChanging();
					this._GeneratedStudentBillId = value;
					this.SendPropertyChanged("GeneratedStudentBillId");
					this.OnGeneratedStudentBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YearBill_StudentBill", Storage="_YearBill", ThisKey="YearBillId", OtherKey="Id", IsForeignKey=true)]
		public YearBill YearBill
		{
			get
			{
				return this._YearBill.Entity;
			}
			set
			{
				YearBill previousValue = this._YearBill.Entity;
				if (((previousValue != value) 
							|| (this._YearBill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._YearBill.Entity = null;
						previousValue.StudentBills.Remove(this);
					}
					this._YearBill.Entity = value;
					if ((value != null))
					{
						value.StudentBills.Add(this);
						this._YearBillId = value.Id;
					}
					else
					{
						this._YearBillId = default(long);
					}
					this.SendPropertyChanged("YearBill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentBill", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentBills.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentBills.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject_Theme")]
	public partial class Subject_Theme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SubjectId;
		
		private string _Title;
		
		private string _Details;
		
		private System.Nullable<long> _WeekNumber;
		
		private System.Nullable<long> _ClassId;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnWeekNumberChanging(System.Nullable<long> value);
    partial void OnWeekNumberChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    #endregion
		
		public Subject_Theme()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekNumber", DbType="BigInt")]
		public System.Nullable<long> WeekNumber
		{
			get
			{
				return this._WeekNumber;
			}
			set
			{
				if ((this._WeekNumber != value))
				{
					this.OnWeekNumberChanging(value);
					this.SendPropertyChanging();
					this._WeekNumber = value;
					this.SendPropertyChanged("WeekNumber");
					this.OnWeekNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Subject_Theme", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.Subject_Themes.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.Subject_Themes.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectThemeTopic")]
	public partial class SubjectThemeTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Topic;
		
		private long _ThemeID;
		
		private EntityRef<SubjectThemeTopic> _SubjectThemeTopic2;
		
		private EntityRef<SubjectThemeTopic> _SubjectThemeTopic1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTopicChanging(string value);
    partial void OnTopicChanged();
    partial void OnThemeIDChanging(long value);
    partial void OnThemeIDChanged();
    #endregion
		
		public SubjectThemeTopic()
		{
			this._SubjectThemeTopic2 = default(EntityRef<SubjectThemeTopic>);
			this._SubjectThemeTopic1 = default(EntityRef<SubjectThemeTopic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._SubjectThemeTopic1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="VarChar(MAX)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this.OnTopicChanging(value);
					this.SendPropertyChanging();
					this._Topic = value;
					this.SendPropertyChanged("Topic");
					this.OnTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeID", DbType="BigInt NOT NULL")]
		public long ThemeID
		{
			get
			{
				return this._ThemeID;
			}
			set
			{
				if ((this._ThemeID != value))
				{
					this.OnThemeIDChanging(value);
					this.SendPropertyChanging();
					this._ThemeID = value;
					this.SendPropertyChanged("ThemeID");
					this.OnThemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectThemeTopic_SubjectThemeTopic", Storage="_SubjectThemeTopic2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public SubjectThemeTopic SubjectThemeTopic2
		{
			get
			{
				return this._SubjectThemeTopic2.Entity;
			}
			set
			{
				SubjectThemeTopic previousValue = this._SubjectThemeTopic2.Entity;
				if (((previousValue != value) 
							|| (this._SubjectThemeTopic2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectThemeTopic2.Entity = null;
						previousValue.SubjectThemeTopic1 = null;
					}
					this._SubjectThemeTopic2.Entity = value;
					if ((value != null))
					{
						value.SubjectThemeTopic1 = this;
					}
					this.SendPropertyChanged("SubjectThemeTopic2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectThemeTopic_SubjectThemeTopic", Storage="_SubjectThemeTopic1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public SubjectThemeTopic SubjectThemeTopic1
		{
			get
			{
				return this._SubjectThemeTopic1.Entity;
			}
			set
			{
				SubjectThemeTopic previousValue = this._SubjectThemeTopic1.Entity;
				if (((previousValue != value) 
							|| (this._SubjectThemeTopic1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectThemeTopic1.Entity = null;
						previousValue.SubjectThemeTopic2 = null;
					}
					this._SubjectThemeTopic1.Entity = value;
					if ((value != null))
					{
						value.SubjectThemeTopic2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("SubjectThemeTopic1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscriptionPaymentDetails")]
	public partial class SubscriptionPaymentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _Amount;
		
		private string _PaymentDate;
		
		private System.Nullable<bool> _HasFullyUsedForSubscription;
		
		private System.Nullable<long> _AmountUsed;
		
		private System.Nullable<long> _SchoolId;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAmountChanging(System.Nullable<long> value);
    partial void OnAmountChanged();
    partial void OnPaymentDateChanging(string value);
    partial void OnPaymentDateChanged();
    partial void OnHasFullyUsedForSubscriptionChanging(System.Nullable<bool> value);
    partial void OnHasFullyUsedForSubscriptionChanged();
    partial void OnAmountUsedChanging(System.Nullable<long> value);
    partial void OnAmountUsedChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public SubscriptionPaymentDetail()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="BigInt")]
		public System.Nullable<long> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="VarChar(50)")]
		public string PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFullyUsedForSubscription", DbType="Bit")]
		public System.Nullable<bool> HasFullyUsedForSubscription
		{
			get
			{
				return this._HasFullyUsedForSubscription;
			}
			set
			{
				if ((this._HasFullyUsedForSubscription != value))
				{
					this.OnHasFullyUsedForSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._HasFullyUsedForSubscription = value;
					this.SendPropertyChanged("HasFullyUsedForSubscription");
					this.OnHasFullyUsedForSubscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountUsed", DbType="BigInt")]
		public System.Nullable<long> AmountUsed
		{
			get
			{
				return this._AmountUsed;
			}
			set
			{
				if ((this._AmountUsed != value))
				{
					this.OnAmountUsedChanging(value);
					this.SendPropertyChanging();
					this._AmountUsed = value;
					this.SendPropertyChanged("AmountUsed");
					this.OnAmountUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_SubscriptionPaymentDetail", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.SubscriptionPaymentDetails.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.SubscriptionPaymentDetails.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_SubscriptionPaymentDetail", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.SubscriptionPaymentDetails.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.SubscriptionPaymentDetails.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_SubscriptionPaymentDetail", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.SubscriptionPaymentDetails.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.SubscriptionPaymentDetails.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_SubscriptionPaymentDetail", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.SubscriptionPaymentDetails.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.SubscriptionPaymentDetails.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SweepTransactionLog")]
	public partial class SweepTransactionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<decimal> _TransactionAmount;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private System.Nullable<int> _PaymentChannel;
		
		private System.Nullable<long> _TransactionRef;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<int> _TransactionStatus;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTransactionAmountChanging(System.Nullable<decimal> value);
    partial void OnTransactionAmountChanged();
    partial void OnTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionDateChanged();
    partial void OnPaymentChannelChanging(System.Nullable<int> value);
    partial void OnPaymentChannelChanged();
    partial void OnTransactionRefChanging(System.Nullable<long> value);
    partial void OnTransactionRefChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTransactionStatusChanging(System.Nullable<int> value);
    partial void OnTransactionStatusChanged();
    #endregion
		
		public SweepTransactionLog()
		{
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this.OnTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._TransactionAmount = value;
					this.SendPropertyChanged("TransactionAmount");
					this.OnTransactionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentChannel", DbType="Int")]
		public System.Nullable<int> PaymentChannel
		{
			get
			{
				return this._PaymentChannel;
			}
			set
			{
				if ((this._PaymentChannel != value))
				{
					this.OnPaymentChannelChanging(value);
					this.SendPropertyChanging();
					this._PaymentChannel = value;
					this.SendPropertyChanged("PaymentChannel");
					this.OnPaymentChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionRef", DbType="BigInt")]
		public System.Nullable<long> TransactionRef
		{
			get
			{
				return this._TransactionRef;
			}
			set
			{
				if ((this._TransactionRef != value))
				{
					this.OnTransactionRefChanging(value);
					this.SendPropertyChanging();
					this._TransactionRef = value;
					this.SendPropertyChanged("TransactionRef");
					this.OnTransactionRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatus", DbType="Int")]
		public System.Nullable<int> TransactionStatus
		{
			get
			{
				return this._TransactionStatus;
			}
			set
			{
				if ((this._TransactionStatus != value))
				{
					this.OnTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatus = value;
					this.SendPropertyChanged("TransactionStatus");
					this.OnTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_SweepTransactionLog", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.SweepTransactionLogs.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.SweepTransactionLogs.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SweepTransactionLog", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SweepTransactionLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SweepTransactionLogs.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeachersAssignedToGrade")]
	public partial class TeachersAssignedToGrade
	{
		
		private System.Nullable<long> _Id;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _TeacherId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		public TeachersAssignedToGrade()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt")]
		public System.Nullable<long> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this._GradeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt")]
		public System.Nullable<long> TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this._TeacherId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this._SchoolId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this._SchoolCampusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this._ClassId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeachersProfile")]
	public partial class TeachersProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _Userid;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _PhoneNumber;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<int> _Gender;
		
		private string _Institution;
		
		private string _Course;
		
		private string _DegreeObtained;
		
		private string _DegreeClassification;
		
		private string _Certifications;
		
		private System.Nullable<System.DateTime> _DateCertified;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnUseridChanging(System.Nullable<long> value);
    partial void OnUseridChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnGenderChanging(System.Nullable<int> value);
    partial void OnGenderChanged();
    partial void OnInstitutionChanging(string value);
    partial void OnInstitutionChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnDegreeObtainedChanging(string value);
    partial void OnDegreeObtainedChanged();
    partial void OnDegreeClassificationChanging(string value);
    partial void OnDegreeClassificationChanged();
    partial void OnCertificationsChanging(string value);
    partial void OnCertificationsChanged();
    partial void OnDateCertifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCertifiedChanged();
    #endregion
		
		public TeachersProfile()
		{
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userid", DbType="BigInt")]
		public System.Nullable<long> Userid
		{
			get
			{
				return this._Userid;
			}
			set
			{
				if ((this._Userid != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUseridChanging(value);
					this.SendPropertyChanging();
					this._Userid = value;
					this.SendPropertyChanged("Userid");
					this.OnUseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(200)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int")]
		public System.Nullable<int> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Institution", DbType="VarChar(200)")]
		public string Institution
		{
			get
			{
				return this._Institution;
			}
			set
			{
				if ((this._Institution != value))
				{
					this.OnInstitutionChanging(value);
					this.SendPropertyChanging();
					this._Institution = value;
					this.SendPropertyChanged("Institution");
					this.OnInstitutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(200)")]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeObtained", DbType="VarChar(50)")]
		public string DegreeObtained
		{
			get
			{
				return this._DegreeObtained;
			}
			set
			{
				if ((this._DegreeObtained != value))
				{
					this.OnDegreeObtainedChanging(value);
					this.SendPropertyChanging();
					this._DegreeObtained = value;
					this.SendPropertyChanged("DegreeObtained");
					this.OnDegreeObtainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeClassification", DbType="VarChar(100)")]
		public string DegreeClassification
		{
			get
			{
				return this._DegreeClassification;
			}
			set
			{
				if ((this._DegreeClassification != value))
				{
					this.OnDegreeClassificationChanging(value);
					this.SendPropertyChanging();
					this._DegreeClassification = value;
					this.SendPropertyChanged("DegreeClassification");
					this.OnDegreeClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certifications", DbType="VarChar(50)")]
		public string Certifications
		{
			get
			{
				return this._Certifications;
			}
			set
			{
				if ((this._Certifications != value))
				{
					this.OnCertificationsChanging(value);
					this.SendPropertyChanging();
					this._Certifications = value;
					this.SendPropertyChanged("Certifications");
					this.OnCertificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCertified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCertified
		{
			get
			{
				return this._DateCertified;
			}
			set
			{
				if ((this._DateCertified != value))
				{
					this.OnDateCertifiedChanging(value);
					this.SendPropertyChanging();
					this._DateCertified = value;
					this.SendPropertyChanged("DateCertified");
					this.OnDateCertifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TeachersProfile", Storage="_User", ThisKey="Userid", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TeachersProfiles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TeachersProfiles.Add(this);
						this._Userid = value.Id;
					}
					else
					{
						this._Userid = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_TeachersProfile", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.TeachersProfiles.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.TeachersProfiles.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestAssigenmentBroadSheetTemplate")]
	public partial class TestAssigenmentBroadSheetTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<System.DateTime> _DateGenerated;
		
		private string _SubjectId;
		
		private System.Nullable<long> _TotalNumberofSubjectInserted;
		
		private System.Nullable<long> _TeacherId;
		
		private System.Nullable<long> _DescriptionId;
		
		private System.Nullable<bool> _HasSubmitted;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SchoolId;
		
		private EntityRef<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplate2;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntityRef<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplate1;
		
		private EntityRef<BroadSheetDescriptionCode> _BroadSheetDescriptionCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnDateGeneratedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateGeneratedChanged();
    partial void OnSubjectIdChanging(string value);
    partial void OnSubjectIdChanged();
    partial void OnTotalNumberofSubjectInsertedChanging(System.Nullable<long> value);
    partial void OnTotalNumberofSubjectInsertedChanged();
    partial void OnTeacherIdChanging(System.Nullable<long> value);
    partial void OnTeacherIdChanged();
    partial void OnDescriptionIdChanging(System.Nullable<long> value);
    partial void OnDescriptionIdChanged();
    partial void OnHasSubmittedChanging(System.Nullable<bool> value);
    partial void OnHasSubmittedChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public TestAssigenmentBroadSheetTemplate()
		{
			this._TestAssigenmentBroadSheetTemplate2 = default(EntityRef<TestAssigenmentBroadSheetTemplate>);
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._TestAssigenmentBroadSheetTemplate1 = default(EntityRef<TestAssigenmentBroadSheetTemplate>);
			this._BroadSheetDescriptionCode = default(EntityRef<BroadSheetDescriptionCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._TestAssigenmentBroadSheetTemplate1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGenerated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateGenerated
		{
			get
			{
				return this._DateGenerated;
			}
			set
			{
				if ((this._DateGenerated != value))
				{
					this.OnDateGeneratedChanging(value);
					this.SendPropertyChanging();
					this._DateGenerated = value;
					this.SendPropertyChanged("DateGenerated");
					this.OnDateGeneratedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="VarChar(MAX)")]
		public string SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNumberofSubjectInserted", DbType="BigInt")]
		public System.Nullable<long> TotalNumberofSubjectInserted
		{
			get
			{
				return this._TotalNumberofSubjectInserted;
			}
			set
			{
				if ((this._TotalNumberofSubjectInserted != value))
				{
					this.OnTotalNumberofSubjectInsertedChanging(value);
					this.SendPropertyChanging();
					this._TotalNumberofSubjectInserted = value;
					this.SendPropertyChanged("TotalNumberofSubjectInserted");
					this.OnTotalNumberofSubjectInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt")]
		public System.Nullable<long> TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionId", DbType="BigInt")]
		public System.Nullable<long> DescriptionId
		{
			get
			{
				return this._DescriptionId;
			}
			set
			{
				if ((this._DescriptionId != value))
				{
					if (this._BroadSheetDescriptionCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionIdChanging(value);
					this.SendPropertyChanging();
					this._DescriptionId = value;
					this.SendPropertyChanged("DescriptionId");
					this.OnDescriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSubmitted", DbType="Bit")]
		public System.Nullable<bool> HasSubmitted
		{
			get
			{
				return this._HasSubmitted;
			}
			set
			{
				if ((this._HasSubmitted != value))
				{
					this.OnHasSubmittedChanging(value);
					this.SendPropertyChanging();
					this._HasSubmitted = value;
					this.SendPropertyChanged("HasSubmitted");
					this.OnHasSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_TestAssigenmentBroadSheetTemplate", Storage="_TestAssigenmentBroadSheetTemplate2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public TestAssigenmentBroadSheetTemplate TestAssigenmentBroadSheetTemplate2
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplate2.Entity;
			}
			set
			{
				TestAssigenmentBroadSheetTemplate previousValue = this._TestAssigenmentBroadSheetTemplate2.Entity;
				if (((previousValue != value) 
							|| (this._TestAssigenmentBroadSheetTemplate2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssigenmentBroadSheetTemplate2.Entity = null;
						previousValue.TestAssigenmentBroadSheetTemplate1 = null;
					}
					this._TestAssigenmentBroadSheetTemplate2.Entity = value;
					if ((value != null))
					{
						value.TestAssigenmentBroadSheetTemplate1 = this;
					}
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplate2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="ID", OtherKey="TestAssigenmentBroadSheetTemplateID")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="ID", OtherKey="TestAssigenmentBroadSheetTemplateID")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="ID", OtherKey="TestAssigenmentBroadSheetTemplateID")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScore", Storage="_StudentScores", ThisKey="ID", OtherKey="BroadSheetTemplateID")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="ID", OtherKey="TestAssigenmentBroadSheetTemplateID")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_TestAssigenmentBroadSheetTemplate", Storage="_TestAssigenmentBroadSheetTemplate1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public TestAssigenmentBroadSheetTemplate TestAssigenmentBroadSheetTemplate1
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplate1.Entity;
			}
			set
			{
				TestAssigenmentBroadSheetTemplate previousValue = this._TestAssigenmentBroadSheetTemplate1.Entity;
				if (((previousValue != value) 
							|| (this._TestAssigenmentBroadSheetTemplate1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssigenmentBroadSheetTemplate1.Entity = null;
						previousValue.TestAssigenmentBroadSheetTemplate2 = null;
					}
					this._TestAssigenmentBroadSheetTemplate1.Entity = value;
					if ((value != null))
					{
						value.TestAssigenmentBroadSheetTemplate2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplate1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BroadSheetDescriptionCode_TestAssigenmentBroadSheetTemplate", Storage="_BroadSheetDescriptionCode", ThisKey="DescriptionId", OtherKey="Id", IsForeignKey=true)]
		public BroadSheetDescriptionCode BroadSheetDescriptionCode
		{
			get
			{
				return this._BroadSheetDescriptionCode.Entity;
			}
			set
			{
				BroadSheetDescriptionCode previousValue = this._BroadSheetDescriptionCode.Entity;
				if (((previousValue != value) 
							|| (this._BroadSheetDescriptionCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BroadSheetDescriptionCode.Entity = null;
						previousValue.TestAssigenmentBroadSheetTemplates.Remove(this);
					}
					this._BroadSheetDescriptionCode.Entity = value;
					if ((value != null))
					{
						value.TestAssigenmentBroadSheetTemplates.Add(this);
						this._DescriptionId = value.Id;
					}
					else
					{
						this._DescriptionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("BroadSheetDescriptionCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TestAssigenmentBroadSheetTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestAssignmentScoreTemplate")]
	public partial class TestAssignmentScoreTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<System.DateTime> _DateGenerated;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _TeacherId;
		
		private string _TemplateCode;
		
		private System.Nullable<bool> _HasSubmitted;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SchoolId;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<StudentScoreCategory> _StudentScoreCategories;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnDateGeneratedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateGeneratedChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnTeacherIdChanging(System.Nullable<long> value);
    partial void OnTeacherIdChanged();
    partial void OnTemplateCodeChanging(string value);
    partial void OnTemplateCodeChanged();
    partial void OnHasSubmittedChanging(System.Nullable<bool> value);
    partial void OnHasSubmittedChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public TestAssignmentScoreTemplate()
		{
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._StudentScoreCategories = new EntitySet<StudentScoreCategory>(new Action<StudentScoreCategory>(this.attach_StudentScoreCategories), new Action<StudentScoreCategory>(this.detach_StudentScoreCategories));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGenerated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateGenerated
		{
			get
			{
				return this._DateGenerated;
			}
			set
			{
				if ((this._DateGenerated != value))
				{
					this.OnDateGeneratedChanging(value);
					this.SendPropertyChanging();
					this._DateGenerated = value;
					this.SendPropertyChanged("DateGenerated");
					this.OnDateGeneratedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt")]
		public System.Nullable<long> TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateCode", DbType="VarChar(100)")]
		public string TemplateCode
		{
			get
			{
				return this._TemplateCode;
			}
			set
			{
				if ((this._TemplateCode != value))
				{
					this.OnTemplateCodeChanging(value);
					this.SendPropertyChanging();
					this._TemplateCode = value;
					this.SendPropertyChanged("TemplateCode");
					this.OnTemplateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSubmitted", DbType="Bit")]
		public System.Nullable<bool> HasSubmitted
		{
			get
			{
				return this._HasSubmitted;
			}
			set
			{
				if ((this._HasSubmitted != value))
				{
					this.OnHasSubmittedChanging(value);
					this.SendPropertyChanging();
					this._HasSubmitted = value;
					this.SendPropertyChanged("HasSubmitted");
					this.OnHasSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreCategory", Storage="_StudentScoreCategories", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this._StudentScoreCategories;
			}
			set
			{
				this._StudentScoreCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScore", Storage="_StudentScores", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="ID", OtherKey="TemplateId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.TestAssignmentScoreTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTable")]
	public partial class TimeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _HomeRoomID;
		
		private long _ClientPeriodID;
		
		private long _ClientDayOfWeekID;
		
		private long _GroupID;
		
		private int _R;
		
		private int _G;
		
		private int _B;
		
		private string _HomeRoomName;
		
		private string _PeriodName;
		
		private string _DayOfWeekName;
		
		private string _GroupName;
		
		private string _TeacherName;
		
		private string _SubjectName;
		
		private long _TeacherID;
		
		private System.Nullable<bool> _IsOptionGroup;
		
		private System.Nullable<long> _SubjectID;
		
		private System.Nullable<long> _CampusID;
		
		private System.Nullable<long> _YearID;
		
		private string _Code;
		
		private System.Nullable<long> _SchoolID;
		
		private string _FormName;
		
		private System.Nullable<long> _FormID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnHomeRoomIDChanging(long value);
    partial void OnHomeRoomIDChanged();
    partial void OnClientPeriodIDChanging(long value);
    partial void OnClientPeriodIDChanged();
    partial void OnClientDayOfWeekIDChanging(long value);
    partial void OnClientDayOfWeekIDChanged();
    partial void OnGroupIDChanging(long value);
    partial void OnGroupIDChanged();
    partial void OnRChanging(int value);
    partial void OnRChanged();
    partial void OnGChanging(int value);
    partial void OnGChanged();
    partial void OnBChanging(int value);
    partial void OnBChanged();
    partial void OnHomeRoomNameChanging(string value);
    partial void OnHomeRoomNameChanged();
    partial void OnPeriodNameChanging(string value);
    partial void OnPeriodNameChanged();
    partial void OnDayOfWeekNameChanging(string value);
    partial void OnDayOfWeekNameChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnTeacherNameChanging(string value);
    partial void OnTeacherNameChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnTeacherIDChanging(long value);
    partial void OnTeacherIDChanged();
    partial void OnIsOptionGroupChanging(System.Nullable<bool> value);
    partial void OnIsOptionGroupChanged();
    partial void OnSubjectIDChanging(System.Nullable<long> value);
    partial void OnSubjectIDChanged();
    partial void OnCampusIDChanging(System.Nullable<long> value);
    partial void OnCampusIDChanged();
    partial void OnYearIDChanging(System.Nullable<long> value);
    partial void OnYearIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSchoolIDChanging(System.Nullable<long> value);
    partial void OnSchoolIDChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnFormIDChanging(System.Nullable<long> value);
    partial void OnFormIDChanged();
    #endregion
		
		public TimeTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeRoomID", DbType="BigInt NOT NULL")]
		public long HomeRoomID
		{
			get
			{
				return this._HomeRoomID;
			}
			set
			{
				if ((this._HomeRoomID != value))
				{
					this.OnHomeRoomIDChanging(value);
					this.SendPropertyChanging();
					this._HomeRoomID = value;
					this.SendPropertyChanged("HomeRoomID");
					this.OnHomeRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientPeriodID", DbType="BigInt NOT NULL")]
		public long ClientPeriodID
		{
			get
			{
				return this._ClientPeriodID;
			}
			set
			{
				if ((this._ClientPeriodID != value))
				{
					this.OnClientPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._ClientPeriodID = value;
					this.SendPropertyChanged("ClientPeriodID");
					this.OnClientPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientDayOfWeekID", DbType="BigInt NOT NULL")]
		public long ClientDayOfWeekID
		{
			get
			{
				return this._ClientDayOfWeekID;
			}
			set
			{
				if ((this._ClientDayOfWeekID != value))
				{
					this.OnClientDayOfWeekIDChanging(value);
					this.SendPropertyChanging();
					this._ClientDayOfWeekID = value;
					this.SendPropertyChanged("ClientDayOfWeekID");
					this.OnClientDayOfWeekIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="BigInt NOT NULL")]
		public long GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R", DbType="Int NOT NULL")]
		public int R
		{
			get
			{
				return this._R;
			}
			set
			{
				if ((this._R != value))
				{
					this.OnRChanging(value);
					this.SendPropertyChanging();
					this._R = value;
					this.SendPropertyChanged("R");
					this.OnRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G", DbType="Int NOT NULL")]
		public int G
		{
			get
			{
				return this._G;
			}
			set
			{
				if ((this._G != value))
				{
					this.OnGChanging(value);
					this.SendPropertyChanging();
					this._G = value;
					this.SendPropertyChanged("G");
					this.OnGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="Int NOT NULL")]
		public int B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeRoomName", DbType="VarChar(100)")]
		public string HomeRoomName
		{
			get
			{
				return this._HomeRoomName;
			}
			set
			{
				if ((this._HomeRoomName != value))
				{
					this.OnHomeRoomNameChanging(value);
					this.SendPropertyChanging();
					this._HomeRoomName = value;
					this.SendPropertyChanged("HomeRoomName");
					this.OnHomeRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodName", DbType="VarChar(100)")]
		public string PeriodName
		{
			get
			{
				return this._PeriodName;
			}
			set
			{
				if ((this._PeriodName != value))
				{
					this.OnPeriodNameChanging(value);
					this.SendPropertyChanging();
					this._PeriodName = value;
					this.SendPropertyChanged("PeriodName");
					this.OnPeriodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeekName", DbType="VarChar(100)")]
		public string DayOfWeekName
		{
			get
			{
				return this._DayOfWeekName;
			}
			set
			{
				if ((this._DayOfWeekName != value))
				{
					this.OnDayOfWeekNameChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeekName = value;
					this.SendPropertyChanged("DayOfWeekName");
					this.OnDayOfWeekNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(100)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this.OnTeacherNameChanging(value);
					this.SendPropertyChanging();
					this._TeacherName = value;
					this.SendPropertyChanged("TeacherName");
					this.OnTeacherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(100)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="BigInt NOT NULL")]
		public long TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOptionGroup", DbType="Bit")]
		public System.Nullable<bool> IsOptionGroup
		{
			get
			{
				return this._IsOptionGroup;
			}
			set
			{
				if ((this._IsOptionGroup != value))
				{
					this.OnIsOptionGroupChanging(value);
					this.SendPropertyChanging();
					this._IsOptionGroup = value;
					this.SendPropertyChanged("IsOptionGroup");
					this.OnIsOptionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="BigInt")]
		public System.Nullable<long> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusID", DbType="BigInt")]
		public System.Nullable<long> CampusID
		{
			get
			{
				return this._CampusID;
			}
			set
			{
				if ((this._CampusID != value))
				{
					this.OnCampusIDChanging(value);
					this.SendPropertyChanging();
					this._CampusID = value;
					this.SendPropertyChanged("CampusID");
					this.OnCampusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearID", DbType="BigInt")]
		public System.Nullable<long> YearID
		{
			get
			{
				return this._YearID;
			}
			set
			{
				if ((this._YearID != value))
				{
					this.OnYearIDChanging(value);
					this.SendPropertyChanging();
					this._YearID = value;
					this.SendPropertyChanged("YearID");
					this.OnYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="VarChar(200)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="BigInt")]
		public System.Nullable<long> FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionFees")]
	public partial class TransactionFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _TransactionLogId;
		
		private long _FeeId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private System.Nullable<long> _SchoolId;
		
		private long _StudentId;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTransactionLogIdChanging(long value);
    partial void OnTransactionLogIdChanged();
    partial void OnFeeIdChanging(long value);
    partial void OnFeeIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSchoolCampusIdChanging(System.Nullable<long> value);
    partial void OnSchoolCampusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public TransactionFee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionLogId", DbType="BigInt NOT NULL")]
		public long TransactionLogId
		{
			get
			{
				return this._TransactionLogId;
			}
			set
			{
				if ((this._TransactionLogId != value))
				{
					this.OnTransactionLogIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionLogId = value;
					this.SendPropertyChanged("TransactionLogId");
					this.OnTransactionLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeId", DbType="BigInt NOT NULL")]
		public long FeeId
		{
			get
			{
				return this._FeeId;
			}
			set
			{
				if ((this._FeeId != value))
				{
					this.OnFeeIdChanging(value);
					this.SendPropertyChanging();
					this._FeeId = value;
					this.SendPropertyChanged("FeeId");
					this.OnFeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionHistory")]
	public partial class TransactionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _TransactionLogId;
		
		private System.Nullable<decimal> _TransactionAmount;
		
		private System.Nullable<decimal> _BalanceAmountToPay;
		
		private string _CurrencyCode;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private System.Nullable<int> _PaymentChannel;
		
		private System.Nullable<long> _TransactionRef;
		
		private System.Nullable<long> _InvoiceNo;
		
		private string _DepositorName;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<int> _TransactionStatus;
		
		private string _InitialResponseCode;
		
		private string _InitialResponseDescription;
		
		private System.Nullable<int> _InitialTransactionStatus;
		
		private System.Nullable<System.DateTime> _InitialTransactionDate;
		
		private string _FinalResponseCode;
		
		private string _FinalResponseDescription;
		
		private System.Nullable<int> _FinalTransactionStatus;
		
		private System.Nullable<System.DateTime> _FinalTransactionDate;
		
		private string _GlobalUniqueId;
		
		private System.Nullable<long> _ReturnedReferenceNo;
		
		private System.Nullable<long> _BankReferenceNo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTransactionLogIdChanging(System.Nullable<long> value);
    partial void OnTransactionLogIdChanged();
    partial void OnTransactionAmountChanging(System.Nullable<decimal> value);
    partial void OnTransactionAmountChanged();
    partial void OnBalanceAmountToPayChanging(System.Nullable<decimal> value);
    partial void OnBalanceAmountToPayChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionDateChanged();
    partial void OnPaymentChannelChanging(System.Nullable<int> value);
    partial void OnPaymentChannelChanged();
    partial void OnTransactionRefChanging(System.Nullable<long> value);
    partial void OnTransactionRefChanged();
    partial void OnInvoiceNoChanging(System.Nullable<long> value);
    partial void OnInvoiceNoChanged();
    partial void OnDepositorNameChanging(string value);
    partial void OnDepositorNameChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTransactionStatusChanging(System.Nullable<int> value);
    partial void OnTransactionStatusChanged();
    partial void OnInitialResponseCodeChanging(string value);
    partial void OnInitialResponseCodeChanged();
    partial void OnInitialResponseDescriptionChanging(string value);
    partial void OnInitialResponseDescriptionChanged();
    partial void OnInitialTransactionStatusChanging(System.Nullable<int> value);
    partial void OnInitialTransactionStatusChanged();
    partial void OnInitialTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitialTransactionDateChanged();
    partial void OnFinalResponseCodeChanging(string value);
    partial void OnFinalResponseCodeChanged();
    partial void OnFinalResponseDescriptionChanging(string value);
    partial void OnFinalResponseDescriptionChanged();
    partial void OnFinalTransactionStatusChanging(System.Nullable<int> value);
    partial void OnFinalTransactionStatusChanged();
    partial void OnFinalTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalTransactionDateChanged();
    partial void OnGlobalUniqueIdChanging(string value);
    partial void OnGlobalUniqueIdChanged();
    partial void OnReturnedReferenceNoChanging(System.Nullable<long> value);
    partial void OnReturnedReferenceNoChanged();
    partial void OnBankReferenceNoChanging(System.Nullable<long> value);
    partial void OnBankReferenceNoChanged();
    #endregion
		
		public TransactionHistory()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionLogId", DbType="BigInt")]
		public System.Nullable<long> TransactionLogId
		{
			get
			{
				return this._TransactionLogId;
			}
			set
			{
				if ((this._TransactionLogId != value))
				{
					this.OnTransactionLogIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionLogId = value;
					this.SendPropertyChanged("TransactionLogId");
					this.OnTransactionLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this.OnTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._TransactionAmount = value;
					this.SendPropertyChanged("TransactionAmount");
					this.OnTransactionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmountToPay", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BalanceAmountToPay
		{
			get
			{
				return this._BalanceAmountToPay;
			}
			set
			{
				if ((this._BalanceAmountToPay != value))
				{
					this.OnBalanceAmountToPayChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmountToPay = value;
					this.SendPropertyChanged("BalanceAmountToPay");
					this.OnBalanceAmountToPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(50)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentChannel", DbType="Int")]
		public System.Nullable<int> PaymentChannel
		{
			get
			{
				return this._PaymentChannel;
			}
			set
			{
				if ((this._PaymentChannel != value))
				{
					this.OnPaymentChannelChanging(value);
					this.SendPropertyChanging();
					this._PaymentChannel = value;
					this.SendPropertyChanged("PaymentChannel");
					this.OnPaymentChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionRef", DbType="BigInt")]
		public System.Nullable<long> TransactionRef
		{
			get
			{
				return this._TransactionRef;
			}
			set
			{
				if ((this._TransactionRef != value))
				{
					this.OnTransactionRefChanging(value);
					this.SendPropertyChanging();
					this._TransactionRef = value;
					this.SendPropertyChanged("TransactionRef");
					this.OnTransactionRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="BigInt")]
		public System.Nullable<long> InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositorName", DbType="VarChar(100)")]
		public string DepositorName
		{
			get
			{
				return this._DepositorName;
			}
			set
			{
				if ((this._DepositorName != value))
				{
					this.OnDepositorNameChanging(value);
					this.SendPropertyChanging();
					this._DepositorName = value;
					this.SendPropertyChanged("DepositorName");
					this.OnDepositorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatus", DbType="Int")]
		public System.Nullable<int> TransactionStatus
		{
			get
			{
				return this._TransactionStatus;
			}
			set
			{
				if ((this._TransactionStatus != value))
				{
					this.OnTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatus = value;
					this.SendPropertyChanged("TransactionStatus");
					this.OnTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialResponseCode", DbType="VarChar(100)")]
		public string InitialResponseCode
		{
			get
			{
				return this._InitialResponseCode;
			}
			set
			{
				if ((this._InitialResponseCode != value))
				{
					this.OnInitialResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._InitialResponseCode = value;
					this.SendPropertyChanged("InitialResponseCode");
					this.OnInitialResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialResponseDescription", DbType="VarChar(100)")]
		public string InitialResponseDescription
		{
			get
			{
				return this._InitialResponseDescription;
			}
			set
			{
				if ((this._InitialResponseDescription != value))
				{
					this.OnInitialResponseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._InitialResponseDescription = value;
					this.SendPropertyChanged("InitialResponseDescription");
					this.OnInitialResponseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialTransactionStatus", DbType="Int")]
		public System.Nullable<int> InitialTransactionStatus
		{
			get
			{
				return this._InitialTransactionStatus;
			}
			set
			{
				if ((this._InitialTransactionStatus != value))
				{
					this.OnInitialTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._InitialTransactionStatus = value;
					this.SendPropertyChanged("InitialTransactionStatus");
					this.OnInitialTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialTransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitialTransactionDate
		{
			get
			{
				return this._InitialTransactionDate;
			}
			set
			{
				if ((this._InitialTransactionDate != value))
				{
					this.OnInitialTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._InitialTransactionDate = value;
					this.SendPropertyChanged("InitialTransactionDate");
					this.OnInitialTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalResponseCode", DbType="VarChar(100)")]
		public string FinalResponseCode
		{
			get
			{
				return this._FinalResponseCode;
			}
			set
			{
				if ((this._FinalResponseCode != value))
				{
					this.OnFinalResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._FinalResponseCode = value;
					this.SendPropertyChanged("FinalResponseCode");
					this.OnFinalResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalResponseDescription", DbType="VarChar(100)")]
		public string FinalResponseDescription
		{
			get
			{
				return this._FinalResponseDescription;
			}
			set
			{
				if ((this._FinalResponseDescription != value))
				{
					this.OnFinalResponseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FinalResponseDescription = value;
					this.SendPropertyChanged("FinalResponseDescription");
					this.OnFinalResponseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTransactionStatus", DbType="Int")]
		public System.Nullable<int> FinalTransactionStatus
		{
			get
			{
				return this._FinalTransactionStatus;
			}
			set
			{
				if ((this._FinalTransactionStatus != value))
				{
					this.OnFinalTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._FinalTransactionStatus = value;
					this.SendPropertyChanged("FinalTransactionStatus");
					this.OnFinalTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinalTransactionDate
		{
			get
			{
				return this._FinalTransactionDate;
			}
			set
			{
				if ((this._FinalTransactionDate != value))
				{
					this.OnFinalTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._FinalTransactionDate = value;
					this.SendPropertyChanged("FinalTransactionDate");
					this.OnFinalTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalUniqueId", DbType="VarChar(100)")]
		public string GlobalUniqueId
		{
			get
			{
				return this._GlobalUniqueId;
			}
			set
			{
				if ((this._GlobalUniqueId != value))
				{
					this.OnGlobalUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._GlobalUniqueId = value;
					this.SendPropertyChanged("GlobalUniqueId");
					this.OnGlobalUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnedReferenceNo", DbType="BigInt")]
		public System.Nullable<long> ReturnedReferenceNo
		{
			get
			{
				return this._ReturnedReferenceNo;
			}
			set
			{
				if ((this._ReturnedReferenceNo != value))
				{
					this.OnReturnedReferenceNoChanging(value);
					this.SendPropertyChanging();
					this._ReturnedReferenceNo = value;
					this.SendPropertyChanged("ReturnedReferenceNo");
					this.OnReturnedReferenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankReferenceNo", DbType="BigInt")]
		public System.Nullable<long> BankReferenceNo
		{
			get
			{
				return this._BankReferenceNo;
			}
			set
			{
				if ((this._BankReferenceNo != value))
				{
					this.OnBankReferenceNoChanging(value);
					this.SendPropertyChanging();
					this._BankReferenceNo = value;
					this.SendPropertyChanged("BankReferenceNo");
					this.OnBankReferenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionHistory", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TransactionHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TransactionHistories.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionLog")]
	public partial class TransactionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private decimal _TransactionAmount;
		
		private System.Nullable<decimal> _BalanceAmountToPay;
		
		private string _CurrencyCode;
		
		private System.DateTime _TransactionDate;
		
		private int _PaymentChannel;
		
		private string _StudentBillId;
		
		private long _TransactionRef;
		
		private long _InvoiceNo;
		
		private string _DepositorName;
		
		private long _UserId;
		
		private long _StudentId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<int> _TransactionStatus;
		
		private string _InitialResponseCode;
		
		private string _InitialResponseDescription;
		
		private System.Nullable<int> _InitialTransactionStatus;
		
		private System.Nullable<System.DateTime> _InitialTransactionDate;
		
		private string _FinalResponseCode;
		
		private string _FinalResponseDescription;
		
		private System.Nullable<int> _FinalTransactionStatus;
		
		private System.Nullable<System.DateTime> _FinalTransactionDate;
		
		private string _GlobalUniqueId;
		
		private System.Nullable<long> _BatchId;
		
		private System.Nullable<long> _ReturnedReferenceNo;
		
		private System.Nullable<long> _BankReferenceNo;
		
		private EntityRef<Batch> _Batch;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTransactionAmountChanging(decimal value);
    partial void OnTransactionAmountChanged();
    partial void OnBalanceAmountToPayChanging(System.Nullable<decimal> value);
    partial void OnBalanceAmountToPayChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnPaymentChannelChanging(int value);
    partial void OnPaymentChannelChanged();
    partial void OnStudentBillIdChanging(string value);
    partial void OnStudentBillIdChanged();
    partial void OnTransactionRefChanging(long value);
    partial void OnTransactionRefChanged();
    partial void OnInvoiceNoChanging(long value);
    partial void OnInvoiceNoChanged();
    partial void OnDepositorNameChanging(string value);
    partial void OnDepositorNameChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTransactionStatusChanging(System.Nullable<int> value);
    partial void OnTransactionStatusChanged();
    partial void OnInitialResponseCodeChanging(string value);
    partial void OnInitialResponseCodeChanged();
    partial void OnInitialResponseDescriptionChanging(string value);
    partial void OnInitialResponseDescriptionChanged();
    partial void OnInitialTransactionStatusChanging(System.Nullable<int> value);
    partial void OnInitialTransactionStatusChanged();
    partial void OnInitialTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitialTransactionDateChanged();
    partial void OnFinalResponseCodeChanging(string value);
    partial void OnFinalResponseCodeChanged();
    partial void OnFinalResponseDescriptionChanging(string value);
    partial void OnFinalResponseDescriptionChanged();
    partial void OnFinalTransactionStatusChanging(System.Nullable<int> value);
    partial void OnFinalTransactionStatusChanged();
    partial void OnFinalTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalTransactionDateChanged();
    partial void OnGlobalUniqueIdChanging(string value);
    partial void OnGlobalUniqueIdChanged();
    partial void OnBatchIdChanging(System.Nullable<long> value);
    partial void OnBatchIdChanged();
    partial void OnReturnedReferenceNoChanging(System.Nullable<long> value);
    partial void OnReturnedReferenceNoChanged();
    partial void OnBankReferenceNoChanging(System.Nullable<long> value);
    partial void OnBankReferenceNoChanged();
    #endregion
		
		public TransactionLog()
		{
			this._Batch = default(EntityRef<Batch>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this.OnTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._TransactionAmount = value;
					this.SendPropertyChanged("TransactionAmount");
					this.OnTransactionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmountToPay", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BalanceAmountToPay
		{
			get
			{
				return this._BalanceAmountToPay;
			}
			set
			{
				if ((this._BalanceAmountToPay != value))
				{
					this.OnBalanceAmountToPayChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmountToPay = value;
					this.SendPropertyChanged("BalanceAmountToPay");
					this.OnBalanceAmountToPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentChannel", DbType="Int NOT NULL")]
		public int PaymentChannel
		{
			get
			{
				return this._PaymentChannel;
			}
			set
			{
				if ((this._PaymentChannel != value))
				{
					this.OnPaymentChannelChanging(value);
					this.SendPropertyChanging();
					this._PaymentChannel = value;
					this.SendPropertyChanged("PaymentChannel");
					this.OnPaymentChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentBillId", DbType="VarChar(50)")]
		public string StudentBillId
		{
			get
			{
				return this._StudentBillId;
			}
			set
			{
				if ((this._StudentBillId != value))
				{
					this.OnStudentBillIdChanging(value);
					this.SendPropertyChanging();
					this._StudentBillId = value;
					this.SendPropertyChanged("StudentBillId");
					this.OnStudentBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionRef", DbType="BigInt NOT NULL")]
		public long TransactionRef
		{
			get
			{
				return this._TransactionRef;
			}
			set
			{
				if ((this._TransactionRef != value))
				{
					this.OnTransactionRefChanging(value);
					this.SendPropertyChanging();
					this._TransactionRef = value;
					this.SendPropertyChanged("TransactionRef");
					this.OnTransactionRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="BigInt NOT NULL")]
		public long InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositorName", DbType="VarChar(100)")]
		public string DepositorName
		{
			get
			{
				return this._DepositorName;
			}
			set
			{
				if ((this._DepositorName != value))
				{
					this.OnDepositorNameChanging(value);
					this.SendPropertyChanging();
					this._DepositorName = value;
					this.SendPropertyChanged("DepositorName");
					this.OnDepositorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatus", DbType="Int")]
		public System.Nullable<int> TransactionStatus
		{
			get
			{
				return this._TransactionStatus;
			}
			set
			{
				if ((this._TransactionStatus != value))
				{
					this.OnTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatus = value;
					this.SendPropertyChanged("TransactionStatus");
					this.OnTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialResponseCode", DbType="VarChar(100)")]
		public string InitialResponseCode
		{
			get
			{
				return this._InitialResponseCode;
			}
			set
			{
				if ((this._InitialResponseCode != value))
				{
					this.OnInitialResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._InitialResponseCode = value;
					this.SendPropertyChanged("InitialResponseCode");
					this.OnInitialResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialResponseDescription", DbType="VarChar(100)")]
		public string InitialResponseDescription
		{
			get
			{
				return this._InitialResponseDescription;
			}
			set
			{
				if ((this._InitialResponseDescription != value))
				{
					this.OnInitialResponseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._InitialResponseDescription = value;
					this.SendPropertyChanged("InitialResponseDescription");
					this.OnInitialResponseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialTransactionStatus", DbType="Int")]
		public System.Nullable<int> InitialTransactionStatus
		{
			get
			{
				return this._InitialTransactionStatus;
			}
			set
			{
				if ((this._InitialTransactionStatus != value))
				{
					this.OnInitialTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._InitialTransactionStatus = value;
					this.SendPropertyChanged("InitialTransactionStatus");
					this.OnInitialTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialTransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitialTransactionDate
		{
			get
			{
				return this._InitialTransactionDate;
			}
			set
			{
				if ((this._InitialTransactionDate != value))
				{
					this.OnInitialTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._InitialTransactionDate = value;
					this.SendPropertyChanged("InitialTransactionDate");
					this.OnInitialTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalResponseCode", DbType="VarChar(100)")]
		public string FinalResponseCode
		{
			get
			{
				return this._FinalResponseCode;
			}
			set
			{
				if ((this._FinalResponseCode != value))
				{
					this.OnFinalResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._FinalResponseCode = value;
					this.SendPropertyChanged("FinalResponseCode");
					this.OnFinalResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalResponseDescription", DbType="VarChar(100)")]
		public string FinalResponseDescription
		{
			get
			{
				return this._FinalResponseDescription;
			}
			set
			{
				if ((this._FinalResponseDescription != value))
				{
					this.OnFinalResponseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FinalResponseDescription = value;
					this.SendPropertyChanged("FinalResponseDescription");
					this.OnFinalResponseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTransactionStatus", DbType="Int")]
		public System.Nullable<int> FinalTransactionStatus
		{
			get
			{
				return this._FinalTransactionStatus;
			}
			set
			{
				if ((this._FinalTransactionStatus != value))
				{
					this.OnFinalTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._FinalTransactionStatus = value;
					this.SendPropertyChanged("FinalTransactionStatus");
					this.OnFinalTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinalTransactionDate
		{
			get
			{
				return this._FinalTransactionDate;
			}
			set
			{
				if ((this._FinalTransactionDate != value))
				{
					this.OnFinalTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._FinalTransactionDate = value;
					this.SendPropertyChanged("FinalTransactionDate");
					this.OnFinalTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalUniqueId", DbType="VarChar(100)")]
		public string GlobalUniqueId
		{
			get
			{
				return this._GlobalUniqueId;
			}
			set
			{
				if ((this._GlobalUniqueId != value))
				{
					this.OnGlobalUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._GlobalUniqueId = value;
					this.SendPropertyChanged("GlobalUniqueId");
					this.OnGlobalUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt")]
		public System.Nullable<long> BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					if (this._Batch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnedReferenceNo", DbType="BigInt")]
		public System.Nullable<long> ReturnedReferenceNo
		{
			get
			{
				return this._ReturnedReferenceNo;
			}
			set
			{
				if ((this._ReturnedReferenceNo != value))
				{
					this.OnReturnedReferenceNoChanging(value);
					this.SendPropertyChanging();
					this._ReturnedReferenceNo = value;
					this.SendPropertyChanged("ReturnedReferenceNo");
					this.OnReturnedReferenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankReferenceNo", DbType="BigInt")]
		public System.Nullable<long> BankReferenceNo
		{
			get
			{
				return this._BankReferenceNo;
			}
			set
			{
				if ((this._BankReferenceNo != value))
				{
					this.OnBankReferenceNoChanging(value);
					this.SendPropertyChanging();
					this._BankReferenceNo = value;
					this.SendPropertyChanged("BankReferenceNo");
					this.OnBankReferenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_TransactionLog", Storage="_Batch", ThisKey="BatchId", OtherKey="Id", IsForeignKey=true)]
		public Batch Batch
		{
			get
			{
				return this._Batch.Entity;
			}
			set
			{
				Batch previousValue = this._Batch.Entity;
				if (((previousValue != value) 
							|| (this._Batch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Batch.Entity = null;
						previousValue.TransactionLogs.Remove(this);
					}
					this._Batch.Entity = value;
					if ((value != null))
					{
						value.TransactionLogs.Add(this);
						this._BatchId = value.Id;
					}
					else
					{
						this._BatchId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Batch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionLog", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TransactionLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TransactionLogs.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionReference")]
	public partial class TransactionReference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _TransactionRef;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTransactionRefChanging(System.Nullable<long> value);
    partial void OnTransactionRefChanged();
    #endregion
		
		public TransactionReference()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionRef", DbType="BigInt")]
		public System.Nullable<long> TransactionRef
		{
			get
			{
				return this._TransactionRef;
			}
			set
			{
				if ((this._TransactionRef != value))
				{
					this.OnTransactionRefChanging(value);
					this.SendPropertyChanging();
					this._TransactionRef = value;
					this.SendPropertyChanged("TransactionRef");
					this.OnTransactionRefChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Url")]
	public partial class Url : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _AuthorisedUrl;
		
		private string _AllowableRole;
		
		private string _Visible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAuthorisedUrlChanging(string value);
    partial void OnAuthorisedUrlChanged();
    partial void OnAllowableRoleChanging(string value);
    partial void OnAllowableRoleChanged();
    partial void OnVisibleChanging(string value);
    partial void OnVisibleChanged();
    #endregion
		
		public Url()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorisedUrl", DbType="VarChar(150)")]
		public string AuthorisedUrl
		{
			get
			{
				return this._AuthorisedUrl;
			}
			set
			{
				if ((this._AuthorisedUrl != value))
				{
					this.OnAuthorisedUrlChanging(value);
					this.SendPropertyChanging();
					this._AuthorisedUrl = value;
					this.SendPropertyChanged("AuthorisedUrl");
					this.OnAuthorisedUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowableRole", DbType="VarChar(50)")]
		public string AllowableRole
		{
			get
			{
				return this._AllowableRole;
			}
			set
			{
				if ((this._AllowableRole != value))
				{
					this.OnAllowableRoleChanging(value);
					this.SendPropertyChanging();
					this._AllowableRole = value;
					this.SendPropertyChanged("AllowableRole");
					this.OnAllowableRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="VarChar(50)")]
		public string Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<long> _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Nullable<long> value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt")]
		public System.Nullable<long> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YearBills")]
	public partial class YearBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FeesIds;
		
		private long _AcademicSession;
		
		private long _FeeYear;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<long> _SchoolId;
		
		private bool _isFirstTermFullFeeValue;
		
		private bool _IsSecondTermFullFeeValue;
		
		private bool _IsThirdTermFullFeeValue;
		
		private EntitySet<StudentBill> _StudentBills;
		
		private EntityRef<YearFee> _YearFee;
		
		private EntityRef<AcademicSession> _AcademicSession1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFeesIdsChanging(string value);
    partial void OnFeesIdsChanged();
    partial void OnAcademicSessionChanging(long value);
    partial void OnAcademicSessionChanged();
    partial void OnFeeYearChanging(long value);
    partial void OnFeeYearChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnisFirstTermFullFeeValueChanging(bool value);
    partial void OnisFirstTermFullFeeValueChanged();
    partial void OnIsSecondTermFullFeeValueChanging(bool value);
    partial void OnIsSecondTermFullFeeValueChanged();
    partial void OnIsThirdTermFullFeeValueChanging(bool value);
    partial void OnIsThirdTermFullFeeValueChanged();
    #endregion
		
		public YearBill()
		{
			this._StudentBills = new EntitySet<StudentBill>(new Action<StudentBill>(this.attach_StudentBills), new Action<StudentBill>(this.detach_StudentBills));
			this._YearFee = default(EntityRef<YearFee>);
			this._AcademicSession1 = default(EntityRef<AcademicSession>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeesIds", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string FeesIds
		{
			get
			{
				return this._FeesIds;
			}
			set
			{
				if ((this._FeesIds != value))
				{
					this.OnFeesIdsChanging(value);
					this.SendPropertyChanging();
					this._FeesIds = value;
					this.SendPropertyChanged("FeesIds");
					this.OnFeesIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSession", DbType="BigInt NOT NULL")]
		public long AcademicSession
		{
			get
			{
				return this._AcademicSession;
			}
			set
			{
				if ((this._AcademicSession != value))
				{
					if (this._AcademicSession1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionChanging(value);
					this.SendPropertyChanging();
					this._AcademicSession = value;
					this.SendPropertyChanged("AcademicSession");
					this.OnAcademicSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeYear", DbType="BigInt NOT NULL")]
		public long FeeYear
		{
			get
			{
				return this._FeeYear;
			}
			set
			{
				if ((this._FeeYear != value))
				{
					if (this._YearFee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeYearChanging(value);
					this.SendPropertyChanging();
					this._FeeYear = value;
					this.SendPropertyChanged("FeeYear");
					this.OnFeeYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFirstTermFullFeeValue", DbType="Bit NOT NULL")]
		public bool isFirstTermFullFeeValue
		{
			get
			{
				return this._isFirstTermFullFeeValue;
			}
			set
			{
				if ((this._isFirstTermFullFeeValue != value))
				{
					this.OnisFirstTermFullFeeValueChanging(value);
					this.SendPropertyChanging();
					this._isFirstTermFullFeeValue = value;
					this.SendPropertyChanged("isFirstTermFullFeeValue");
					this.OnisFirstTermFullFeeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSecondTermFullFeeValue", DbType="Bit NOT NULL")]
		public bool IsSecondTermFullFeeValue
		{
			get
			{
				return this._IsSecondTermFullFeeValue;
			}
			set
			{
				if ((this._IsSecondTermFullFeeValue != value))
				{
					this.OnIsSecondTermFullFeeValueChanging(value);
					this.SendPropertyChanging();
					this._IsSecondTermFullFeeValue = value;
					this.SendPropertyChanged("IsSecondTermFullFeeValue");
					this.OnIsSecondTermFullFeeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsThirdTermFullFeeValue", DbType="Bit NOT NULL")]
		public bool IsThirdTermFullFeeValue
		{
			get
			{
				return this._IsThirdTermFullFeeValue;
			}
			set
			{
				if ((this._IsThirdTermFullFeeValue != value))
				{
					this.OnIsThirdTermFullFeeValueChanging(value);
					this.SendPropertyChanging();
					this._IsThirdTermFullFeeValue = value;
					this.SendPropertyChanged("IsThirdTermFullFeeValue");
					this.OnIsThirdTermFullFeeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YearBill_StudentBill", Storage="_StudentBills", ThisKey="Id", OtherKey="YearBillId")]
		public EntitySet<StudentBill> StudentBills
		{
			get
			{
				return this._StudentBills;
			}
			set
			{
				this._StudentBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YearFee_YearBill", Storage="_YearFee", ThisKey="FeeYear", OtherKey="Id", IsForeignKey=true)]
		public YearFee YearFee
		{
			get
			{
				return this._YearFee.Entity;
			}
			set
			{
				YearFee previousValue = this._YearFee.Entity;
				if (((previousValue != value) 
							|| (this._YearFee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._YearFee.Entity = null;
						previousValue.YearBills.Remove(this);
					}
					this._YearFee.Entity = value;
					if ((value != null))
					{
						value.YearBills.Add(this);
						this._FeeYear = value.Id;
					}
					else
					{
						this._FeeYear = default(long);
					}
					this.SendPropertyChanged("YearFee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSession_YearBill", Storage="_AcademicSession1", ThisKey="AcademicSession", OtherKey="Id", IsForeignKey=true)]
		public AcademicSession AcademicSession1
		{
			get
			{
				return this._AcademicSession1.Entity;
			}
			set
			{
				AcademicSession previousValue = this._AcademicSession1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSession1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSession1.Entity = null;
						previousValue.YearBills.Remove(this);
					}
					this._AcademicSession1.Entity = value;
					if ((value != null))
					{
						value.YearBills.Add(this);
						this._AcademicSession = value.Id;
					}
					else
					{
						this._AcademicSession = default(long);
					}
					this.SendPropertyChanged("AcademicSession1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentBills(StudentBill entity)
		{
			this.SendPropertyChanging();
			entity.YearBill = this;
		}
		
		private void detach_StudentBills(StudentBill entity)
		{
			this.SendPropertyChanging();
			entity.YearBill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportCardPosition")]
	public partial class ReportCardPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _TotalScore;
		
		private System.Nullable<long> _Position;
		
		private System.Nullable<long> _SubjectComputed;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _YearId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnTotalScoreChanging(System.Nullable<long> value);
    partial void OnTotalScoreChanged();
    partial void OnPositionChanging(System.Nullable<long> value);
    partial void OnPositionChanged();
    partial void OnSubjectComputedChanging(System.Nullable<long> value);
    partial void OnSubjectComputedChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnYearIdChanging(System.Nullable<long> value);
    partial void OnYearIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public ReportCardPosition()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(100)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="BigInt")]
		public System.Nullable<long> TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this.OnTotalScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalScore = value;
					this.SendPropertyChanged("TotalScore");
					this.OnTotalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="BigInt")]
		public System.Nullable<long> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectComputed", DbType="BigInt")]
		public System.Nullable<long> SubjectComputed
		{
			get
			{
				return this._SubjectComputed;
			}
			set
			{
				if ((this._SubjectComputed != value))
				{
					this.OnSubjectComputedChanging(value);
					this.SendPropertyChanging();
					this._SubjectComputed = value;
					this.SendPropertyChanged("SubjectComputed");
					this.OnSubjectComputedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearId", DbType="BigInt")]
		public System.Nullable<long> YearId
		{
			get
			{
				return this._YearId;
			}
			set
			{
				if ((this._YearId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYearIdChanging(value);
					this.SendPropertyChanging();
					this._YearId = value;
					this.SendPropertyChanged("YearId");
					this.OnYearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardPosition", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ReportCardPositions.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ReportCardPositions.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardPosition", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ReportCardPositions.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ReportCardPositions.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardPosition", Storage="_Class_Grade", ThisKey="YearId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ReportCardPositions.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardPositions.Add(this);
						this._YearId = value.Id;
					}
					else
					{
						this._YearId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardPosition", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ReportCardPositions.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardPositions.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardPosition", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ReportCardPositions.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ReportCardPositions.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardPosition", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ReportCardPositions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ReportCardPositions.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardPosition", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ReportCardPositions.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ReportCardPositions.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentNameDuplicateException")]
	public partial class StudentNameDuplicateException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _NewStudent;
		
		private System.Nullable<long> _ExistingStudentId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNewStudentChanging(string value);
    partial void OnNewStudentChanged();
    partial void OnExistingStudentIdChanging(System.Nullable<long> value);
    partial void OnExistingStudentIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public StudentNameDuplicateException()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewStudent", DbType="VarChar(50)")]
		public string NewStudent
		{
			get
			{
				return this._NewStudent;
			}
			set
			{
				if ((this._NewStudent != value))
				{
					this.OnNewStudentChanging(value);
					this.SendPropertyChanging();
					this._NewStudent = value;
					this.SendPropertyChanged("NewStudent");
					this.OnNewStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingStudentId", DbType="BigInt")]
		public System.Nullable<long> ExistingStudentId
		{
			get
			{
				return this._ExistingStudentId;
			}
			set
			{
				if ((this._ExistingStudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExistingStudentIdChanging(value);
					this.SendPropertyChanging();
					this._ExistingStudentId = value;
					this.SendPropertyChanged("ExistingStudentId");
					this.OnExistingStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentNameDuplicateException", Storage="_User", ThisKey="ExistingStudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentNameDuplicateExceptions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentNameDuplicateExceptions.Add(this);
						this._ExistingStudentId = value.Id;
					}
					else
					{
						this._ExistingStudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GradeStudents")]
	public partial class GradeStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ClassId;
		
		private long _GradeId;
		
		private long _StudentId;
		
		private System.Nullable<long> _GradeTeacherId;
		
		private long _SessionId;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<long> _AcademicSessionId;
		
		private System.Nullable<bool> _HasGraduated;
		
		private System.Nullable<long> _StudentStatusId;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnClassIdChanging(long value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(long value);
    partial void OnGradeIdChanged();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OnGradeTeacherIdChanging(System.Nullable<long> value);
    partial void OnGradeTeacherIdChanged();
    partial void OnSessionIdChanging(long value);
    partial void OnSessionIdChanged();
    partial void OnSchoolCampusIdChanging(System.Nullable<long> value);
    partial void OnSchoolCampusIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnAcademicSessionIdChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIdChanged();
    partial void OnHasGraduatedChanging(System.Nullable<bool> value);
    partial void OnHasGraduatedChanged();
    partial void OnStudentStatusIdChanging(System.Nullable<long> value);
    partial void OnStudentStatusIdChanged();
    #endregion
		
		public GradeStudent()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt NOT NULL")]
		public long ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt NOT NULL")]
		public long GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt NOT NULL")]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeTeacherId", DbType="BigInt")]
		public System.Nullable<long> GradeTeacherId
		{
			get
			{
				return this._GradeTeacherId;
			}
			set
			{
				if ((this._GradeTeacherId != value))
				{
					this.OnGradeTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._GradeTeacherId = value;
					this.SendPropertyChanged("GradeTeacherId");
					this.OnGradeTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt NOT NULL")]
		public long SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionId", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionId
		{
			get
			{
				return this._AcademicSessionId;
			}
			set
			{
				if ((this._AcademicSessionId != value))
				{
					this.OnAcademicSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionId = value;
					this.SendPropertyChanged("AcademicSessionId");
					this.OnAcademicSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasGraduated", DbType="Bit")]
		public System.Nullable<bool> HasGraduated
		{
			get
			{
				return this._HasGraduated;
			}
			set
			{
				if ((this._HasGraduated != value))
				{
					this.OnHasGraduatedChanging(value);
					this.SendPropertyChanging();
					this._HasGraduated = value;
					this.SendPropertyChanged("HasGraduated");
					this.OnHasGraduatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentStatusId", DbType="BigInt")]
		public System.Nullable<long> StudentStatusId
		{
			get
			{
				return this._StudentStatusId;
			}
			set
			{
				if ((this._StudentStatusId != value))
				{
					this.OnStudentStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StudentStatusId = value;
					this.SendPropertyChanged("StudentStatusId");
					this.OnStudentStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_GradeStudent", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.GradeStudents.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.GradeStudents.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(long);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_GradeStudent", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.GradeStudents.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.GradeStudents.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(long);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GradeStudent", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GradeStudents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GradeStudents.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentStatus")]
	public partial class StudentStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _Category;
		
		private string _Status;
		
		private EntitySet<Alumni> _Alumnis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCategoryChanging(System.Nullable<long> value);
    partial void OnCategoryChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public StudentStatus()
		{
			this._Alumnis = new EntitySet<Alumni>(new Action<Alumni>(this.attach_Alumnis), new Action<Alumni>(this.detach_Alumnis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="BigInt")]
		public System.Nullable<long> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentStatus_Alumni", Storage="_Alumnis", ThisKey="Id", OtherKey="StudentStatusId")]
		public EntitySet<Alumni> Alumnis
		{
			get
			{
				return this._Alumnis;
			}
			set
			{
				this._Alumnis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.StudentStatus = this;
		}
		
		private void detach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.StudentStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alumni")]
	public partial class Alumni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _GradeTeacherId;
		
		private System.Nullable<long> _AcademicSessionId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _SchoolCampusId;
		
		private System.Nullable<System.DateTime> _DateGraduated;
		
		private System.Nullable<long> _StudentStatusId;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<StudentStatus> _StudentStatus;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnGradeTeacherIdChanging(System.Nullable<long> value);
    partial void OnGradeTeacherIdChanged();
    partial void OnAcademicSessionIdChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnSchoolCampusIdChanging(System.Nullable<long> value);
    partial void OnSchoolCampusIdChanged();
    partial void OnDateGraduatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateGraduatedChanged();
    partial void OnStudentStatusIdChanging(System.Nullable<long> value);
    partial void OnStudentStatusIdChanged();
    #endregion
		
		public Alumni()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._StudentStatus = default(EntityRef<StudentStatus>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeTeacherId", DbType="BigInt")]
		public System.Nullable<long> GradeTeacherId
		{
			get
			{
				return this._GradeTeacherId;
			}
			set
			{
				if ((this._GradeTeacherId != value))
				{
					this.OnGradeTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._GradeTeacherId = value;
					this.SendPropertyChanged("GradeTeacherId");
					this.OnGradeTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionId", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionId
		{
			get
			{
				return this._AcademicSessionId;
			}
			set
			{
				if ((this._AcademicSessionId != value))
				{
					this.OnAcademicSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionId = value;
					this.SendPropertyChanged("AcademicSessionId");
					this.OnAcademicSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt")]
		public System.Nullable<long> SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGraduated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateGraduated
		{
			get
			{
				return this._DateGraduated;
			}
			set
			{
				if ((this._DateGraduated != value))
				{
					this.OnDateGraduatedChanging(value);
					this.SendPropertyChanging();
					this._DateGraduated = value;
					this.SendPropertyChanged("DateGraduated");
					this.OnDateGraduatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentStatusId", DbType="BigInt")]
		public System.Nullable<long> StudentStatusId
		{
			get
			{
				return this._StudentStatusId;
			}
			set
			{
				if ((this._StudentStatusId != value))
				{
					if (this._StudentStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StudentStatusId = value;
					this.SendPropertyChanged("StudentStatusId");
					this.OnStudentStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Alumni", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.Alumnis.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.Alumnis.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_Alumni", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.Alumnis.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.Alumnis.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentStatus_Alumni", Storage="_StudentStatus", ThisKey="StudentStatusId", OtherKey="Id", IsForeignKey=true)]
		public StudentStatus StudentStatus
		{
			get
			{
				return this._StudentStatus.Entity;
			}
			set
			{
				StudentStatus previousValue = this._StudentStatus.Entity;
				if (((previousValue != value) 
							|| (this._StudentStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentStatus.Entity = null;
						previousValue.Alumnis.Remove(this);
					}
					this._StudentStatus.Entity = value;
					if ((value != null))
					{
						value.Alumnis.Add(this);
						this._StudentStatusId = value.Id;
					}
					else
					{
						this._StudentStatusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("StudentStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Alumni", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Alumnis.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Alumnis.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentCategory")]
	public partial class PaymentCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _CategoryName;
		
		private string _Description;
		
		private EntitySet<PaymentFeeType> _PaymentFeeTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PaymentCategory()
		{
			this._PaymentFeeTypes = new EntitySet<PaymentFeeType>(new Action<PaymentFeeType>(this.attach_PaymentFeeTypes), new Action<PaymentFeeType>(this.detach_PaymentFeeTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(100)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentCategory_PaymentFeeType", Storage="_PaymentFeeTypes", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<PaymentFeeType> PaymentFeeTypes
		{
			get
			{
				return this._PaymentFeeTypes;
			}
			set
			{
				this._PaymentFeeTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentFeeTypes(PaymentFeeType entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCategory = this;
		}
		
		private void detach_PaymentFeeTypes(PaymentFeeType entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentFeeTemplateList")]
	public partial class PaymentFeeTemplateList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _FeeTypeId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _Mandatory;
		
		private System.Nullable<long> _TemplateId;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<PaymentFeeType> _PaymentFeeType;
		
		private EntityRef<PaymentFeeTemplate> _PaymentFeeTemplate;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFeeTypeIdChanging(System.Nullable<long> value);
    partial void OnFeeTypeIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnMandatoryChanging(System.Nullable<int> value);
    partial void OnMandatoryChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    #endregion
		
		public PaymentFeeTemplateList()
		{
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._PaymentFeeType = default(EntityRef<PaymentFeeType>);
			this._PaymentFeeTemplate = default(EntityRef<PaymentFeeTemplate>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeTypeId", DbType="BigInt")]
		public System.Nullable<long> FeeTypeId
		{
			get
			{
				return this._FeeTypeId;
			}
			set
			{
				if ((this._FeeTypeId != value))
				{
					if (this._PaymentFeeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FeeTypeId = value;
					this.SendPropertyChanged("FeeTypeId");
					this.OnFeeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="Int")]
		public System.Nullable<int> Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._PaymentFeeTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFeeTemplateList", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentFeeTemplateLists.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTemplateLists.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeType_PaymentFeeTemplateList", Storage="_PaymentFeeType", ThisKey="FeeTypeId", OtherKey="Id", IsForeignKey=true)]
		public PaymentFeeType PaymentFeeType
		{
			get
			{
				return this._PaymentFeeType.Entity;
			}
			set
			{
				PaymentFeeType previousValue = this._PaymentFeeType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentFeeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentFeeType.Entity = null;
						previousValue.PaymentFeeTemplateLists.Remove(this);
					}
					this._PaymentFeeType.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTemplateLists.Add(this);
						this._FeeTypeId = value.Id;
					}
					else
					{
						this._FeeTypeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentFeeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeTemplate_PaymentFeeTemplateList", Storage="_PaymentFeeTemplate", ThisKey="TemplateId", OtherKey="Id", IsForeignKey=true)]
		public PaymentFeeTemplate PaymentFeeTemplate
		{
			get
			{
				return this._PaymentFeeTemplate.Entity;
			}
			set
			{
				PaymentFeeTemplate previousValue = this._PaymentFeeTemplate.Entity;
				if (((previousValue != value) 
							|| (this._PaymentFeeTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentFeeTemplate.Entity = null;
						previousValue.PaymentFeeTemplateLists.Remove(this);
					}
					this._PaymentFeeTemplate.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTemplateLists.Add(this);
						this._TemplateId = value.Id;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentFeeTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFeeTemplateList", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PaymentFeeTemplateLists.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTemplateLists.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentFeeType")]
	public partial class PaymentFeeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FeeName;
		
		private long _CategoryId;
		
		private long _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private string _FeeCode;
		
		private EntitySet<PaymentFeeTemplateList> _PaymentFeeTemplateLists;
		
		private EntitySet<PaymentFee> _PaymentFees;
		
		private EntityRef<PaymentCategory> _PaymentCategory;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFeeNameChanging(string value);
    partial void OnFeeNameChanged();
    partial void OnCategoryIdChanging(long value);
    partial void OnCategoryIdChanged();
    partial void OnSchoolIdChanging(long value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnFeeCodeChanging(string value);
    partial void OnFeeCodeChanged();
    #endregion
		
		public PaymentFeeType()
		{
			this._PaymentFeeTemplateLists = new EntitySet<PaymentFeeTemplateList>(new Action<PaymentFeeTemplateList>(this.attach_PaymentFeeTemplateLists), new Action<PaymentFeeTemplateList>(this.detach_PaymentFeeTemplateLists));
			this._PaymentFees = new EntitySet<PaymentFee>(new Action<PaymentFee>(this.attach_PaymentFees), new Action<PaymentFee>(this.detach_PaymentFees));
			this._PaymentCategory = default(EntityRef<PaymentCategory>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FeeName
		{
			get
			{
				return this._FeeName;
			}
			set
			{
				if ((this._FeeName != value))
				{
					this.OnFeeNameChanging(value);
					this.SendPropertyChanging();
					this._FeeName = value;
					this.SendPropertyChanged("FeeName");
					this.OnFeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt NOT NULL")]
		public long CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._PaymentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt NOT NULL")]
		public long SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FeeCode
		{
			get
			{
				return this._FeeCode;
			}
			set
			{
				if ((this._FeeCode != value))
				{
					this.OnFeeCodeChanging(value);
					this.SendPropertyChanging();
					this._FeeCode = value;
					this.SendPropertyChanged("FeeCode");
					this.OnFeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeType_PaymentFeeTemplateList", Storage="_PaymentFeeTemplateLists", ThisKey="Id", OtherKey="FeeTypeId")]
		public EntitySet<PaymentFeeTemplateList> PaymentFeeTemplateLists
		{
			get
			{
				return this._PaymentFeeTemplateLists;
			}
			set
			{
				this._PaymentFeeTemplateLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeType_PaymentFee", Storage="_PaymentFees", ThisKey="Id", OtherKey="FeeTypeId")]
		public EntitySet<PaymentFee> PaymentFees
		{
			get
			{
				return this._PaymentFees;
			}
			set
			{
				this._PaymentFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentCategory_PaymentFeeType", Storage="_PaymentCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public PaymentCategory PaymentCategory
		{
			get
			{
				return this._PaymentCategory.Entity;
			}
			set
			{
				PaymentCategory previousValue = this._PaymentCategory.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCategory.Entity = null;
						previousValue.PaymentFeeTypes.Remove(this);
					}
					this._PaymentCategory.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTypes.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(long);
					}
					this.SendPropertyChanged("PaymentCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFeeType", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentFeeTypes.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTypes.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFeeType", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PaymentFeeTypes.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTypes.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(long);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeType = this;
		}
		
		private void detach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeType = null;
		}
		
		private void attach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeType = this;
		}
		
		private void detach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentFee")]
	public partial class PaymentFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _FeeTypeId;
		
		private System.Nullable<int> _Mandatory;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TemplateId;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<PaymentFeeType> _PaymentFeeType;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<PaymentFeeTemplate> _PaymentFeeTemplate;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFeeTypeIdChanging(System.Nullable<long> value);
    partial void OnFeeTypeIdChanged();
    partial void OnMandatoryChanging(System.Nullable<int> value);
    partial void OnMandatoryChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    #endregion
		
		public PaymentFee()
		{
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._PaymentFeeType = default(EntityRef<PaymentFeeType>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._PaymentFeeTemplate = default(EntityRef<PaymentFeeTemplate>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeTypeId", DbType="BigInt")]
		public System.Nullable<long> FeeTypeId
		{
			get
			{
				return this._FeeTypeId;
			}
			set
			{
				if ((this._FeeTypeId != value))
				{
					if (this._PaymentFeeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FeeTypeId = value;
					this.SendPropertyChanged("FeeTypeId");
					this.OnFeeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="Int")]
		public System.Nullable<int> Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._PaymentFeeTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFee_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="Id", OtherKey="FeeId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFee_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="Id", OtherKey="FeeId")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentFee", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.PaymentFees.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.PaymentFees.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeType_PaymentFee", Storage="_PaymentFeeType", ThisKey="FeeTypeId", OtherKey="Id", IsForeignKey=true)]
		public PaymentFeeType PaymentFeeType
		{
			get
			{
				return this._PaymentFeeType.Entity;
			}
			set
			{
				PaymentFeeType previousValue = this._PaymentFeeType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentFeeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentFeeType.Entity = null;
						previousValue.PaymentFees.Remove(this);
					}
					this._PaymentFeeType.Entity = value;
					if ((value != null))
					{
						value.PaymentFees.Add(this);
						this._FeeTypeId = value.Id;
					}
					else
					{
						this._FeeTypeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentFeeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFee", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentFees.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentFees.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeTemplate_PaymentFee", Storage="_PaymentFeeTemplate", ThisKey="TemplateId", OtherKey="Id", IsForeignKey=true)]
		public PaymentFeeTemplate PaymentFeeTemplate
		{
			get
			{
				return this._PaymentFeeTemplate.Entity;
			}
			set
			{
				PaymentFeeTemplate previousValue = this._PaymentFeeTemplate.Entity;
				if (((previousValue != value) 
							|| (this._PaymentFeeTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentFeeTemplate.Entity = null;
						previousValue.PaymentFees.Remove(this);
					}
					this._PaymentFeeTemplate.Entity = value;
					if ((value != null))
					{
						value.PaymentFees.Add(this);
						this._TemplateId = value.Id;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentFeeTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFee", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PaymentFees.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PaymentFees.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFee = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFee = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFee = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentFeeTemplate")]
	public partial class PaymentFeeTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TemplateName;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private EntitySet<PaymentFeeTemplateList> _PaymentFeeTemplateLists;
		
		private EntitySet<PaymentFee> _PaymentFees;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    #endregion
		
		public PaymentFeeTemplate()
		{
			this._PaymentFeeTemplateLists = new EntitySet<PaymentFeeTemplateList>(new Action<PaymentFeeTemplateList>(this.attach_PaymentFeeTemplateLists), new Action<PaymentFeeTemplateList>(this.detach_PaymentFeeTemplateLists));
			this._PaymentFees = new EntitySet<PaymentFee>(new Action<PaymentFee>(this.attach_PaymentFees), new Action<PaymentFee>(this.detach_PaymentFees));
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="VarChar(100)")]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeTemplate_PaymentFeeTemplateList", Storage="_PaymentFeeTemplateLists", ThisKey="Id", OtherKey="TemplateId")]
		public EntitySet<PaymentFeeTemplateList> PaymentFeeTemplateLists
		{
			get
			{
				return this._PaymentFeeTemplateLists;
			}
			set
			{
				this._PaymentFeeTemplateLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFeeTemplate_PaymentFee", Storage="_PaymentFees", ThisKey="Id", OtherKey="TemplateId")]
		public EntitySet<PaymentFee> PaymentFees
		{
			get
			{
				return this._PaymentFees;
			}
			set
			{
				this._PaymentFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentFeeTemplate", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentFeeTemplates.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTemplates.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFeeTemplate", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PaymentFeeTemplates.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PaymentFeeTemplates.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeTemplate = this;
		}
		
		private void detach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeTemplate = null;
		}
		
		private void attach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeTemplate = this;
		}
		
		private void detach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFeeTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApprovalStatus")]
	public partial class ApprovalStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Status;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public ApprovalStatus()
		{
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApprovalStatus_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="ApprovalStatusId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalStatus = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentTemporary")]
	public partial class PaymentTemporary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _InvoiceCode;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _ParentId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _PermanentPaymentId;
		
		private string _BankName;
		
		private string _DepositorAccountName;
		
		private string _ReferenceCode;
		
		private System.Nullable<long> _ApprovalStatusId;
		
		private System.Nullable<long> _ApprovedById;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<ApprovalStatus> _ApprovalStatus;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<PaymentPermanent> _PaymentPermanent;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPermanentPaymentIdChanging(System.Nullable<long> value);
    partial void OnPermanentPaymentIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnDepositorAccountNameChanging(string value);
    partial void OnDepositorAccountNameChanged();
    partial void OnReferenceCodeChanging(string value);
    partial void OnReferenceCodeChanged();
    partial void OnApprovalStatusIdChanging(System.Nullable<long> value);
    partial void OnApprovalStatusIdChanged();
    partial void OnApprovedByIdChanging(System.Nullable<long> value);
    partial void OnApprovedByIdChanged();
    #endregion
		
		public PaymentTemporary()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._ApprovalStatus = default(EntityRef<ApprovalStatus>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._PaymentPermanent = default(EntityRef<PaymentPermanent>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(50)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentPaymentId", DbType="BigInt")]
		public System.Nullable<long> PermanentPaymentId
		{
			get
			{
				return this._PermanentPaymentId;
			}
			set
			{
				if ((this._PermanentPaymentId != value))
				{
					if (this._PaymentPermanent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermanentPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PermanentPaymentId = value;
					this.SendPropertyChanged("PermanentPaymentId");
					this.OnPermanentPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(MAX)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositorAccountName", DbType="VarChar(MAX)")]
		public string DepositorAccountName
		{
			get
			{
				return this._DepositorAccountName;
			}
			set
			{
				if ((this._DepositorAccountName != value))
				{
					this.OnDepositorAccountNameChanging(value);
					this.SendPropertyChanging();
					this._DepositorAccountName = value;
					this.SendPropertyChanged("DepositorAccountName");
					this.OnDepositorAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="VarChar(50)")]
		public string ReferenceCode
		{
			get
			{
				return this._ReferenceCode;
			}
			set
			{
				if ((this._ReferenceCode != value))
				{
					this.OnReferenceCodeChanging(value);
					this.SendPropertyChanging();
					this._ReferenceCode = value;
					this.SendPropertyChanged("ReferenceCode");
					this.OnReferenceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalStatusId", DbType="BigInt")]
		public System.Nullable<long> ApprovalStatusId
		{
			get
			{
				return this._ApprovalStatusId;
			}
			set
			{
				if ((this._ApprovalStatusId != value))
				{
					if (this._ApprovalStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovalStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovalStatusId = value;
					this.SendPropertyChanged("ApprovalStatusId");
					this.OnApprovalStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt")]
		public System.Nullable<long> ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_PaymentTemporary", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_PaymentTemporary", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApprovalStatus_PaymentTemporary", Storage="_ApprovalStatus", ThisKey="ApprovalStatusId", OtherKey="Id", IsForeignKey=true)]
		public ApprovalStatus ApprovalStatus
		{
			get
			{
				return this._ApprovalStatus.Entity;
			}
			set
			{
				ApprovalStatus previousValue = this._ApprovalStatus.Entity;
				if (((previousValue != value) 
							|| (this._ApprovalStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApprovalStatus.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._ApprovalStatus.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._ApprovalStatusId = value.Id;
					}
					else
					{
						this._ApprovalStatusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ApprovalStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentTemporary", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PaymentTemporary", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentTemporary", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentTemporary", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentTemporary1", Storage="_User1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.PaymentTemporaries1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries1.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentTemporary2", Storage="_User2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.PaymentTemporaries2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentPermanent_PaymentTemporary", Storage="_PaymentPermanent", ThisKey="PermanentPaymentId", OtherKey="Id", IsForeignKey=true)]
		public PaymentPermanent PaymentPermanent
		{
			get
			{
				return this._PaymentPermanent.Entity;
			}
			set
			{
				PaymentPermanent previousValue = this._PaymentPermanent.Entity;
				if (((previousValue != value) 
							|| (this._PaymentPermanent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentPermanent.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._PaymentPermanent.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._PermanentPaymentId = value.Id;
					}
					else
					{
						this._PermanentPaymentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentPermanent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentTemporary", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PaymentTemporaries.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PaymentTemporaries.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectDepartment")]
	public partial class SubjectDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DepartmentName;
		
		private System.Nullable<long> _SchoolId;
		
		private EntitySet<Subject> _Subjects;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<StudentScoreCategory> _StudentScoreCategories;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<SubjectsInSchool> _SubjectsInSchools;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    #endregion
		
		public SubjectDepartment()
		{
			this._Subjects = new EntitySet<Subject>(new Action<Subject>(this.attach_Subjects), new Action<Subject>(this.detach_Subjects));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._StudentScoreCategories = new EntitySet<StudentScoreCategory>(new Action<StudentScoreCategory>(this.attach_StudentScoreCategories), new Action<StudentScoreCategory>(this.detach_StudentScoreCategories));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._SubjectsInSchools = new EntitySet<SubjectsInSchool>(new Action<SubjectsInSchool>(this.attach_SubjectsInSchools), new Action<SubjectsInSchool>(this.detach_SubjectsInSchools));
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(50)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_Subject", Storage="_Subjects", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<Subject> Subjects
		{
			get
			{
				return this._Subjects;
			}
			set
			{
				this._Subjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreCategory", Storage="_StudentScoreCategories", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreCategory> StudentScoreCategories
		{
			get
			{
				return this._StudentScoreCategories;
			}
			set
			{
				this._StudentScoreCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_SubjectsInSchool", Storage="_SubjectsInSchools", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<SubjectsInSchool> SubjectsInSchools
		{
			get
			{
				return this._SubjectsInSchools;
			}
			set
			{
				this._SubjectsInSchools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_SubjectDepartment", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.SubjectDepartments.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.SubjectDepartments.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreCategories(StudentScoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
		
		private void attach_SubjectsInSchools(SubjectsInSchool entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = this;
		}
		
		private void detach_SubjectsInSchools(SubjectsInSchool entity)
		{
			this.SendPropertyChanging();
			entity.SubjectDepartment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentInvoiceList")]
	public partial class PaymentInvoiceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _InvoiceCode;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _ParentId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<long> _FeeId;
		
		private System.Nullable<int> _Mandatory;
		
		private System.Nullable<long> _PermanentPaymentId;
		
		private System.Nullable<long> _ApprovedById;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<PaymentFee> _PaymentFee;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnFeeIdChanging(System.Nullable<long> value);
    partial void OnFeeIdChanged();
    partial void OnMandatoryChanging(System.Nullable<int> value);
    partial void OnMandatoryChanged();
    partial void OnPermanentPaymentIdChanging(System.Nullable<long> value);
    partial void OnPermanentPaymentIdChanged();
    partial void OnApprovedByIdChanging(System.Nullable<long> value);
    partial void OnApprovedByIdChanged();
    #endregion
		
		public PaymentInvoiceList()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._PaymentFee = default(EntityRef<PaymentFee>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(50)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeId", DbType="BigInt")]
		public System.Nullable<long> FeeId
		{
			get
			{
				return this._FeeId;
			}
			set
			{
				if ((this._FeeId != value))
				{
					if (this._PaymentFee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeIdChanging(value);
					this.SendPropertyChanging();
					this._FeeId = value;
					this.SendPropertyChanged("FeeId");
					this.OnFeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="Int")]
		public System.Nullable<int> Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentPaymentId", DbType="BigInt")]
		public System.Nullable<long> PermanentPaymentId
		{
			get
			{
				return this._PermanentPaymentId;
			}
			set
			{
				if ((this._PermanentPaymentId != value))
				{
					this.OnPermanentPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PermanentPaymentId = value;
					this.SendPropertyChanged("PermanentPaymentId");
					this.OnPermanentPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt")]
		public System.Nullable<long> ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_PaymentInvoiceList", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_PaymentInvoiceList", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentInvoiceList", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PaymentInvoiceList", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFee_PaymentInvoiceList", Storage="_PaymentFee", ThisKey="FeeId", OtherKey="Id", IsForeignKey=true)]
		public PaymentFee PaymentFee
		{
			get
			{
				return this._PaymentFee.Entity;
			}
			set
			{
				PaymentFee previousValue = this._PaymentFee.Entity;
				if (((previousValue != value) 
							|| (this._PaymentFee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentFee.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._PaymentFee.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._FeeId = value.Id;
					}
					else
					{
						this._FeeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentFee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentInvoiceList", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentInvoiceList", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentInvoiceList1", Storage="_User1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.PaymentInvoiceLists1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists1.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentInvoiceList", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PaymentInvoiceLists.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PaymentInvoiceLists.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
	public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _SubjectStatus;
		
		private int _CurriculumId;
		
		private System.Nullable<int> _SchoolTypeId;
		
		private System.Nullable<int> _MultiCurriculum;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _DepartmentId;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<LessonNote> _LessonNotes;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<ScoreSheetRepo> _ScoreSheetRepos;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<SubjectTeacher> _SubjectTeachers;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<SubjectsInSchool> _SubjectsInSchools;
		
		private EntitySet<ReportCardPrintConfig> _ReportCardPrintConfigs;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Curriculum> _Curriculum;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSubjectStatusChanging(string value);
    partial void OnSubjectStatusChanged();
    partial void OnCurriculumIdChanging(int value);
    partial void OnCurriculumIdChanged();
    partial void OnSchoolTypeIdChanging(System.Nullable<int> value);
    partial void OnSchoolTypeIdChanged();
    partial void OnMultiCurriculumChanging(System.Nullable<int> value);
    partial void OnMultiCurriculumChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    #endregion
		
		public Subject()
		{
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._LessonNotes = new EntitySet<LessonNote>(new Action<LessonNote>(this.attach_LessonNotes), new Action<LessonNote>(this.detach_LessonNotes));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._ScoreSheetRepos = new EntitySet<ScoreSheetRepo>(new Action<ScoreSheetRepo>(this.attach_ScoreSheetRepos), new Action<ScoreSheetRepo>(this.detach_ScoreSheetRepos));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._SubjectTeachers = new EntitySet<SubjectTeacher>(new Action<SubjectTeacher>(this.attach_SubjectTeachers), new Action<SubjectTeacher>(this.detach_SubjectTeachers));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._SubjectsInSchools = new EntitySet<SubjectsInSchool>(new Action<SubjectsInSchool>(this.attach_SubjectsInSchools), new Action<SubjectsInSchool>(this.detach_SubjectsInSchools));
			this._ReportCardPrintConfigs = new EntitySet<ReportCardPrintConfig>(new Action<ReportCardPrintConfig>(this.attach_ReportCardPrintConfigs), new Action<ReportCardPrintConfig>(this.detach_ReportCardPrintConfigs));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Curriculum = default(EntityRef<Curriculum>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectStatus", DbType="VarChar(50)")]
		public string SubjectStatus
		{
			get
			{
				return this._SubjectStatus;
			}
			set
			{
				if ((this._SubjectStatus != value))
				{
					this.OnSubjectStatusChanging(value);
					this.SendPropertyChanging();
					this._SubjectStatus = value;
					this.SendPropertyChanged("SubjectStatus");
					this.OnSubjectStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurriculumId", DbType="Int NOT NULL")]
		public int CurriculumId
		{
			get
			{
				return this._CurriculumId;
			}
			set
			{
				if ((this._CurriculumId != value))
				{
					if (this._Curriculum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurriculumIdChanging(value);
					this.SendPropertyChanging();
					this._CurriculumId = value;
					this.SendPropertyChanged("CurriculumId");
					this.OnCurriculumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolTypeId", DbType="Int")]
		public System.Nullable<int> SchoolTypeId
		{
			get
			{
				return this._SchoolTypeId;
			}
			set
			{
				if ((this._SchoolTypeId != value))
				{
					this.OnSchoolTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolTypeId = value;
					this.SendPropertyChanged("SchoolTypeId");
					this.OnSchoolTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiCurriculum", DbType="Int")]
		public System.Nullable<int> MultiCurriculum
		{
			get
			{
				return this._MultiCurriculum;
			}
			set
			{
				if ((this._MultiCurriculum != value))
				{
					this.OnMultiCurriculumChanging(value);
					this.SendPropertyChanging();
					this._MultiCurriculum = value;
					this.SendPropertyChanged("MultiCurriculum");
					this.OnMultiCurriculumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_LessonNote", Storage="_LessonNotes", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<LessonNote> LessonNotes
		{
			get
			{
				return this._LessonNotes;
			}
			set
			{
				this._LessonNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ReportCardData", Storage="_ReportCardDatas", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ScoreSheetRepo", Storage="_ScoreSheetRepos", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<ScoreSheetRepo> ScoreSheetRepos
		{
			get
			{
				return this._ScoreSheetRepos;
			}
			set
			{
				this._ScoreSheetRepos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectTeacher", Storage="_SubjectTeachers", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<SubjectTeacher> SubjectTeachers
		{
			get
			{
				return this._SubjectTeachers;
			}
			set
			{
				this._SubjectTeachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectsInSchool", Storage="_SubjectsInSchools", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<SubjectsInSchool> SubjectsInSchools
		{
			get
			{
				return this._SubjectsInSchools;
			}
			set
			{
				this._SubjectsInSchools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ReportCardPrintConfig", Storage="_ReportCardPrintConfigs", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this._ReportCardPrintConfigs;
			}
			set
			{
				this._ReportCardPrintConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_Subject", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.Subjects.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.Subjects.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_Subject", Storage="_Curriculum", ThisKey="CurriculumId", OtherKey="Id", IsForeignKey=true)]
		public Curriculum Curriculum
		{
			get
			{
				return this._Curriculum.Entity;
			}
			set
			{
				Curriculum previousValue = this._Curriculum.Entity;
				if (((previousValue != value) 
							|| (this._Curriculum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curriculum.Entity = null;
						previousValue.Subjects.Remove(this);
					}
					this._Curriculum.Entity = value;
					if ((value != null))
					{
						value.Subjects.Add(this);
						this._CurriculumId = value.Id;
					}
					else
					{
						this._CurriculumId = default(int);
					}
					this.SendPropertyChanged("Curriculum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_Subject", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.Subjects.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.Subjects.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_ScoreSheetRepos(ScoreSheetRepo entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_ScoreSheetRepos(ScoreSheetRepo entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_SubjectTeachers(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_SubjectTeachers(SubjectTeacher entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_SubjectsInSchools(SubjectsInSchool entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_SubjectsInSchools(SubjectsInSchool entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreCA")]
	public partial class StudentScoreCA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ClassWork;
		
		private System.Nullable<long> _HomeWorkProject;
		
		private System.Nullable<long> _AttendanceNote;
		
		private System.Nullable<long> _Test;
		
		private System.Nullable<long> _Total;
		
		private System.Nullable<long> _Exam;
		
		private long _SubjectTeacherId;
		
		private long _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _AcademicSessionID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnClassWorkChanging(System.Nullable<long> value);
    partial void OnClassWorkChanged();
    partial void OnHomeWorkProjectChanging(System.Nullable<long> value);
    partial void OnHomeWorkProjectChanged();
    partial void OnAttendanceNoteChanging(System.Nullable<long> value);
    partial void OnAttendanceNoteChanged();
    partial void OnTestChanging(System.Nullable<long> value);
    partial void OnTestChanged();
    partial void OnTotalChanging(System.Nullable<long> value);
    partial void OnTotalChanged();
    partial void OnExamChanging(System.Nullable<long> value);
    partial void OnExamChanged();
    partial void OnSubjectTeacherIdChanging(long value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAcademicSessionIDChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public StudentScoreCA()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassWork", DbType="BigInt")]
		public System.Nullable<long> ClassWork
		{
			get
			{
				return this._ClassWork;
			}
			set
			{
				if ((this._ClassWork != value))
				{
					this.OnClassWorkChanging(value);
					this.SendPropertyChanging();
					this._ClassWork = value;
					this.SendPropertyChanged("ClassWork");
					this.OnClassWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeWorkProject", DbType="BigInt")]
		public System.Nullable<long> HomeWorkProject
		{
			get
			{
				return this._HomeWorkProject;
			}
			set
			{
				if ((this._HomeWorkProject != value))
				{
					this.OnHomeWorkProjectChanging(value);
					this.SendPropertyChanging();
					this._HomeWorkProject = value;
					this.SendPropertyChanged("HomeWorkProject");
					this.OnHomeWorkProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceNote", DbType="BigInt")]
		public System.Nullable<long> AttendanceNote
		{
			get
			{
				return this._AttendanceNote;
			}
			set
			{
				if ((this._AttendanceNote != value))
				{
					this.OnAttendanceNoteChanging(value);
					this.SendPropertyChanging();
					this._AttendanceNote = value;
					this.SendPropertyChanged("AttendanceNote");
					this.OnAttendanceNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test", DbType="BigInt")]
		public System.Nullable<long> Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this.OnTestChanging(value);
					this.SendPropertyChanging();
					this._Test = value;
					this.SendPropertyChanged("Test");
					this.OnTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="BigInt")]
		public System.Nullable<long> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam", DbType="BigInt")]
		public System.Nullable<long> Exam
		{
			get
			{
				return this._Exam;
			}
			set
			{
				if ((this._Exam != value))
				{
					this.OnExamChanging(value);
					this.SendPropertyChanging();
					this._Exam = value;
					this.SendPropertyChanged("Exam");
					this.OnExamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt NOT NULL")]
		public long SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionID", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionID
		{
			get
			{
				return this._AcademicSessionID;
			}
			set
			{
				if ((this._AcademicSessionID != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionIDChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionID = value;
					this.SendPropertyChanged("AcademicSessionID");
					this.OnAcademicSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(500)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreCA", Storage="_AcademicSessionName", ThisKey="AcademicSessionID", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._AcademicSessionID = value.ID;
					}
					else
					{
						this._AcademicSessionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreCA", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreCA", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreCA", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreCA", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreCA", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(long);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreCA", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreCA", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreCA", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreCA", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScoreCAs.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCAs.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LessonNote")]
	public partial class LessonNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Description;
		
		private string _FileName;
		
		private long _SubjectId;
		
		private long _TeacherId;
		
		private long _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private long _TermId;
		
		private long _SessionId;
		
		private long _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _Status;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnTeacherIdChanging(long value);
    partial void OnTeacherIdChanged();
    partial void OnClassIdChanging(long value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnTermIdChanging(long value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(long value);
    partial void OnSessionIdChanged();
    partial void OnSchoolIdChanging(long value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnStatusChanging(System.Nullable<long> value);
    partial void OnStatusChanged();
    #endregion
		
		public LessonNote()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._Subject = default(EntityRef<Subject>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt NOT NULL")]
		public long TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt NOT NULL")]
		public long ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt NOT NULL")]
		public long TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt NOT NULL")]
		public long SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt NOT NULL")]
		public long SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="BigInt")]
		public System.Nullable<long> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_LessonNote", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.LessonNotes.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.LessonNotes.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(long);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_LessonNote", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.LessonNotes.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.LessonNotes.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(long);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_LessonNote", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.LessonNotes.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.LessonNotes.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(long);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_LessonNote", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.LessonNotes.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.LessonNotes.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_LessonNote", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.LessonNotes.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.LessonNotes.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(long);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LessonNote", Storage="_User", ThisKey="TeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.LessonNotes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.LessonNotes.Add(this);
						this._TeacherId = value.Id;
					}
					else
					{
						this._TeacherId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_LessonNote", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.LessonNotes.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.LessonNotes.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(long);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportCardData")]
	public partial class ReportCardData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _TextScore;
		
		private System.Nullable<long> _ExamScore;
		
		private System.Nullable<long> _TotalScore;
		
		private System.Nullable<long> _Position;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _YearId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _AverageScore;
		
		private System.Nullable<long> _AveragePosition;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<ReportCardData> _ReportCardData2;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<ReportCardData> _ReportCardData1;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTextScoreChanging(System.Nullable<long> value);
    partial void OnTextScoreChanged();
    partial void OnExamScoreChanging(System.Nullable<long> value);
    partial void OnExamScoreChanged();
    partial void OnTotalScoreChanging(System.Nullable<long> value);
    partial void OnTotalScoreChanged();
    partial void OnPositionChanging(System.Nullable<long> value);
    partial void OnPositionChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnYearIdChanging(System.Nullable<long> value);
    partial void OnYearIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnAverageScoreChanging(System.Nullable<long> value);
    partial void OnAverageScoreChanged();
    partial void OnAveragePositionChanging(System.Nullable<long> value);
    partial void OnAveragePositionChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public ReportCardData()
		{
			this._ReportCardData2 = default(EntityRef<ReportCardData>);
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._ReportCardData1 = default(EntityRef<ReportCardData>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._Subject = default(EntityRef<Subject>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._ReportCardData1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextScore", DbType="BigInt")]
		public System.Nullable<long> TextScore
		{
			get
			{
				return this._TextScore;
			}
			set
			{
				if ((this._TextScore != value))
				{
					this.OnTextScoreChanging(value);
					this.SendPropertyChanging();
					this._TextScore = value;
					this.SendPropertyChanged("TextScore");
					this.OnTextScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScore", DbType="BigInt")]
		public System.Nullable<long> ExamScore
		{
			get
			{
				return this._ExamScore;
			}
			set
			{
				if ((this._ExamScore != value))
				{
					this.OnExamScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamScore = value;
					this.SendPropertyChanged("ExamScore");
					this.OnExamScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="BigInt")]
		public System.Nullable<long> TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this.OnTotalScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalScore = value;
					this.SendPropertyChanged("TotalScore");
					this.OnTotalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="BigInt")]
		public System.Nullable<long> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="NVarChar(50)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearId", DbType="BigInt")]
		public System.Nullable<long> YearId
		{
			get
			{
				return this._YearId;
			}
			set
			{
				if ((this._YearId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYearIdChanging(value);
					this.SendPropertyChanging();
					this._YearId = value;
					this.SendPropertyChanged("YearId");
					this.OnYearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageScore", DbType="BigInt")]
		public System.Nullable<long> AverageScore
		{
			get
			{
				return this._AverageScore;
			}
			set
			{
				if ((this._AverageScore != value))
				{
					this.OnAverageScoreChanging(value);
					this.SendPropertyChanging();
					this._AverageScore = value;
					this.SendPropertyChanged("AverageScore");
					this.OnAverageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AveragePosition", DbType="BigInt")]
		public System.Nullable<long> AveragePosition
		{
			get
			{
				return this._AveragePosition;
			}
			set
			{
				if ((this._AveragePosition != value))
				{
					this.OnAveragePositionChanging(value);
					this.SendPropertyChanging();
					this._AveragePosition = value;
					this.SendPropertyChanged("AveragePosition");
					this.OnAveragePositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportCardData_ReportCardData", Storage="_ReportCardData2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ReportCardData ReportCardData2
		{
			get
			{
				return this._ReportCardData2.Entity;
			}
			set
			{
				ReportCardData previousValue = this._ReportCardData2.Entity;
				if (((previousValue != value) 
							|| (this._ReportCardData2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportCardData2.Entity = null;
						previousValue.ReportCardData1 = null;
					}
					this._ReportCardData2.Entity = value;
					if ((value != null))
					{
						value.ReportCardData1 = this;
					}
					this.SendPropertyChanged("ReportCardData2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardData", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardData", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardData", Storage="_Class_Grade", ThisKey="YearId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._YearId = value.Id;
					}
					else
					{
						this._YearId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardData", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportCardData_ReportCardData", Storage="_ReportCardData1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public ReportCardData ReportCardData1
		{
			get
			{
				return this._ReportCardData1.Entity;
			}
			set
			{
				ReportCardData previousValue = this._ReportCardData1.Entity;
				if (((previousValue != value) 
							|| (this._ReportCardData1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportCardData1.Entity = null;
						previousValue.ReportCardData2 = null;
					}
					this._ReportCardData1.Entity = value;
					if ((value != null))
					{
						value.ReportCardData2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("ReportCardData1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardData", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ReportCardData", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardData", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardData", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ReportCardDatas.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ReportCardDatas.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScoreSheetRepo")]
	public partial class ScoreSheetRepo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _GradeId;
		
		private System.DateTime _DateSubmitted;
		
		private string _FileName;
		
		private int _SubmissionStatus;
		
		private System.Nullable<long> _SubjectId;
		
		private long _SubmittedBy;
		
		private System.Nullable<long> _ProcessedBy;
		
		private System.Nullable<long> _CampusId;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGradeIdChanging(long value);
    partial void OnGradeIdChanged();
    partial void OnDateSubmittedChanging(System.DateTime value);
    partial void OnDateSubmittedChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnSubmissionStatusChanging(int value);
    partial void OnSubmissionStatusChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnSubmittedByChanging(long value);
    partial void OnSubmittedByChanged();
    partial void OnProcessedByChanging(System.Nullable<long> value);
    partial void OnProcessedByChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    #endregion
		
		public ScoreSheetRepo()
		{
			this._Grade = default(EntityRef<Grade>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt NOT NULL")]
		public long GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSubmitted", DbType="DateTime NOT NULL")]
		public System.DateTime DateSubmitted
		{
			get
			{
				return this._DateSubmitted;
			}
			set
			{
				if ((this._DateSubmitted != value))
				{
					this.OnDateSubmittedChanging(value);
					this.SendPropertyChanging();
					this._DateSubmitted = value;
					this.SendPropertyChanged("DateSubmitted");
					this.OnDateSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionStatus", DbType="Int NOT NULL")]
		public int SubmissionStatus
		{
			get
			{
				return this._SubmissionStatus;
			}
			set
			{
				if ((this._SubmissionStatus != value))
				{
					this.OnSubmissionStatusChanging(value);
					this.SendPropertyChanging();
					this._SubmissionStatus = value;
					this.SendPropertyChanged("SubmissionStatus");
					this.OnSubmissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="BigInt NOT NULL")]
		public long SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedBy", DbType="BigInt")]
		public System.Nullable<long> ProcessedBy
		{
			get
			{
				return this._ProcessedBy;
			}
			set
			{
				if ((this._ProcessedBy != value))
				{
					this.OnProcessedByChanging(value);
					this.SendPropertyChanging();
					this._ProcessedBy = value;
					this.SendPropertyChanged("ProcessedBy");
					this.OnProcessedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ScoreSheetRepo", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ScoreSheetRepos.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ScoreSheetRepos.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(long);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ScoreSheetRepo", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.ScoreSheetRepos.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.ScoreSheetRepos.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScoreCategorySystem")]
	public partial class ScoreCategorySystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _CategoryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public ScoreCategorySystem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(MAX)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreCategory")]
	public partial class StudentScoreCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _SubjectTeacherId;
		
		private System.Nullable<decimal> _Score;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private string _Description;
		
		private System.Nullable<long> _UploadedById;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnSubjectTeacherIdChanging(System.Nullable<long> value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnScoreChanging(System.Nullable<decimal> value);
    partial void OnScoreChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public StudentScoreCategory()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(50)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt")]
		public System.Nullable<long> SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreCategory", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.StudentScoreCategories.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCategories.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreCategory", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreCategories.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCategories.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreCategory", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreCategories.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCategories.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreCategory", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreCategories.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCategories.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreCategory", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreCategories.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCategories.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreCategory", Storage="_SubjectDepartment", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreCategories.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCategories.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreCategory", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreCategories.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreCategories.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreBehavioral")]
	public partial class StudentScoreBehavioral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNo;
		
		private System.Nullable<int> _MarkObtainable;
		
		private System.Nullable<decimal> _MarkObtained;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<decimal> _PercentageScore;
		
		private System.Nullable<int> _CAPercentage;
		
		private System.Nullable<decimal> _CAPercentageScore;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private System.Nullable<long> _SubjectTeacherId;
		
		private System.Nullable<long> _UploadedById;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<long> _TestAssigenmentBroadSheetTemplateID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Description;
		
		private string _Remark;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplate;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<ScoreCategoryConfiguration> _ScoreCategoryConfiguration;
		
		private EntityRef<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfiguration;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnMarkObtainableChanging(System.Nullable<int> value);
    partial void OnMarkObtainableChanged();
    partial void OnMarkObtainedChanging(System.Nullable<decimal> value);
    partial void OnMarkObtainedChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnPercentageScoreChanged();
    partial void OnCAPercentageChanging(System.Nullable<int> value);
    partial void OnCAPercentageChanged();
    partial void OnCAPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnCAPercentageScoreChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnSubjectTeacherIdChanging(System.Nullable<long> value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnTestAssigenmentBroadSheetTemplateIDChanging(System.Nullable<long> value);
    partial void OnTestAssigenmentBroadSheetTemplateIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public StudentScoreBehavioral()
		{
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssigenmentBroadSheetTemplate = default(EntityRef<TestAssigenmentBroadSheetTemplate>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._ScoreCategoryConfiguration = default(EntityRef<ScoreCategoryConfiguration>);
			this._ScoreSubCategoryConfiguration = default(EntityRef<ScoreSubCategoryConfiguration>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="VarChar(100)")]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtainable", DbType="Int")]
		public System.Nullable<int> MarkObtainable
		{
			get
			{
				return this._MarkObtainable;
			}
			set
			{
				if ((this._MarkObtainable != value))
				{
					this.OnMarkObtainableChanging(value);
					this.SendPropertyChanging();
					this._MarkObtainable = value;
					this.SendPropertyChanged("MarkObtainable");
					this.OnMarkObtainableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtained", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MarkObtained
		{
			get
			{
				return this._MarkObtained;
			}
			set
			{
				if ((this._MarkObtained != value))
				{
					this.OnMarkObtainedChanging(value);
					this.SendPropertyChanging();
					this._MarkObtained = value;
					this.SendPropertyChanged("MarkObtained");
					this.OnMarkObtainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PercentageScore
		{
			get
			{
				return this._PercentageScore;
			}
			set
			{
				if ((this._PercentageScore != value))
				{
					this.OnPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._PercentageScore = value;
					this.SendPropertyChanged("PercentageScore");
					this.OnPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentage", DbType="Int")]
		public System.Nullable<int> CAPercentage
		{
			get
			{
				return this._CAPercentage;
			}
			set
			{
				if ((this._CAPercentage != value))
				{
					this.OnCAPercentageChanging(value);
					this.SendPropertyChanging();
					this._CAPercentage = value;
					this.SendPropertyChanged("CAPercentage");
					this.OnCAPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CAPercentageScore
		{
			get
			{
				return this._CAPercentageScore;
			}
			set
			{
				if ((this._CAPercentageScore != value))
				{
					this.OnCAPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._CAPercentageScore = value;
					this.SendPropertyChanged("CAPercentageScore");
					this.OnCAPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					if (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt")]
		public System.Nullable<long> SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestAssigenmentBroadSheetTemplateID", DbType="BigInt")]
		public System.Nullable<long> TestAssigenmentBroadSheetTemplateID
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplateID;
			}
			set
			{
				if ((this._TestAssigenmentBroadSheetTemplateID != value))
				{
					if (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestAssigenmentBroadSheetTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TestAssigenmentBroadSheetTemplateID = value;
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplateID");
					this.OnTestAssigenmentBroadSheetTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreBehavioral", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreBehavioral", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreBehavioral", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreBehavioral", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreBehavioral", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreBehavioral", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreBehavioral", Storage="_TestAssigenmentBroadSheetTemplate", ThisKey="TestAssigenmentBroadSheetTemplateID", OtherKey="ID", IsForeignKey=true)]
		public TestAssigenmentBroadSheetTemplate TestAssigenmentBroadSheetTemplate
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplate.Entity;
			}
			set
			{
				TestAssigenmentBroadSheetTemplate previousValue = this._TestAssigenmentBroadSheetTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssigenmentBroadSheetTemplate.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._TestAssigenmentBroadSheetTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._TestAssigenmentBroadSheetTemplateID = value.ID;
					}
					else
					{
						this._TestAssigenmentBroadSheetTemplateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreBehavioral", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreBehavioral", Storage="_ScoreCategoryConfiguration", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreCategoryConfiguration ScoreCategoryConfiguration
		{
			get
			{
				return this._ScoreCategoryConfiguration.Entity;
			}
			set
			{
				ScoreCategoryConfiguration previousValue = this._ScoreCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreCategoryConfiguration.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._ScoreCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreBehavioral", Storage="_ScoreSubCategoryConfiguration", ThisKey="SubCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreSubCategoryConfiguration ScoreSubCategoryConfiguration
		{
			get
			{
				return this._ScoreSubCategoryConfiguration.Entity;
			}
			set
			{
				ScoreSubCategoryConfiguration previousValue = this._ScoreSubCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreSubCategoryConfiguration.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._ScoreSubCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._SubCategoryId = value.Id;
					}
					else
					{
						this._SubCategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreSubCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreBehavioral", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreBehavioral1", Storage="_User1", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.StudentScoreBehaviorals1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals1.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreBehavioral", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScoreBehaviorals.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScoreBehaviorals.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScoreCategoryConfiguration")]
	public partial class ScoreCategoryConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Category;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<int> _Range;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfigurations;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnRangeChanging(System.Nullable<int> value);
    partial void OnRangeChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public ScoreCategoryConfiguration()
		{
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._ScoreSubCategoryConfigurations = new EntitySet<ScoreSubCategoryConfiguration>(new Action<ScoreSubCategoryConfiguration>(this.attach_ScoreSubCategoryConfigurations), new Action<ScoreSubCategoryConfiguration>(this.detach_ScoreSubCategoryConfigurations));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Range", DbType="Int")]
		public System.Nullable<int> Range
		{
			get
			{
				return this._Range;
			}
			set
			{
				if ((this._Range != value))
				{
					this.OnRangeChanging(value);
					this.SendPropertyChanging();
					this._Range = value;
					this.SendPropertyChanged("Range");
					this.OnRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_ScoreSubCategoryConfiguration", Storage="_ScoreSubCategoryConfigurations", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<ScoreSubCategoryConfiguration> ScoreSubCategoryConfigurations
		{
			get
			{
				return this._ScoreSubCategoryConfigurations;
			}
			set
			{
				this._ScoreSubCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ScoreCategoryConfiguration", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ScoreCategoryConfigurations.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ScoreCategoryConfigurations.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ScoreCategoryConfiguration", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ScoreCategoryConfigurations.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ScoreCategoryConfigurations.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ScoreCategoryConfiguration", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ScoreCategoryConfigurations.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ScoreCategoryConfigurations.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ScoreCategoryConfiguration", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ScoreCategoryConfigurations.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ScoreCategoryConfigurations.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ScoreCategoryConfiguration", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ScoreCategoryConfigurations.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ScoreCategoryConfigurations.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = null;
		}
		
		private void attach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = this;
		}
		
		private void detach_ScoreSubCategoryConfigurations(ScoreSubCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.ScoreCategoryConfiguration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScoreSubCategoryConfiguration")]
	public partial class ScoreSubCategoryConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private string _SubCategory;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<ScoreCategoryConfiguration> _ScoreCategoryConfiguration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSubCategoryChanging(string value);
    partial void OnSubCategoryChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public ScoreSubCategoryConfiguration()
		{
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._ScoreCategoryConfiguration = default(EntityRef<ScoreCategoryConfiguration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="VarChar(MAX)")]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this.OnSubCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubCategory = value;
					this.SendPropertyChanged("SubCategory");
					this.OnSubCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="SubCategoryId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="SubCategoryId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="SubCategoryId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="SubCategoryId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="SubCategoryId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="SubCategoryId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ScoreSubCategoryConfiguration", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ScoreSubCategoryConfigurations.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ScoreSubCategoryConfigurations.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ScoreSubCategoryConfiguration", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ScoreSubCategoryConfigurations.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ScoreSubCategoryConfigurations.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ScoreSubCategoryConfiguration", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ScoreSubCategoryConfigurations.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ScoreSubCategoryConfigurations.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_ScoreSubCategoryConfiguration", Storage="_ScoreCategoryConfiguration", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreCategoryConfiguration ScoreCategoryConfiguration
		{
			get
			{
				return this._ScoreCategoryConfiguration.Entity;
			}
			set
			{
				ScoreCategoryConfiguration previousValue = this._ScoreCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreCategoryConfiguration.Entity = null;
						previousValue.ScoreSubCategoryConfigurations.Remove(this);
					}
					this._ScoreCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.ScoreSubCategoryConfigurations.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreCategoryConfiguration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.ScoreSubCategoryConfiguration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportCardComment")]
	public partial class ReportCardComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _UploadedById;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _AcademicSessionID;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _CommentConfigId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Comment;
		
		private string _Remark;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<ReportCardCommentConfig> _ReportCardCommentConfig;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAcademicSessionIDChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIDChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnCommentConfigIdChanging(System.Nullable<long> value);
    partial void OnCommentConfigIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public ReportCardComment()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._ReportCardCommentConfig = default(EntityRef<ReportCardCommentConfig>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionID", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionID
		{
			get
			{
				return this._AcademicSessionID;
			}
			set
			{
				if ((this._AcademicSessionID != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionIDChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionID = value;
					this.SendPropertyChanged("AcademicSessionID");
					this.OnAcademicSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(500)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentConfigId", DbType="BigInt")]
		public System.Nullable<long> CommentConfigId
		{
			get
			{
				return this._CommentConfigId;
			}
			set
			{
				if ((this._CommentConfigId != value))
				{
					if (this._ReportCardCommentConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentConfigIdChanging(value);
					this.SendPropertyChanging();
					this._CommentConfigId = value;
					this.SendPropertyChanged("CommentConfigId");
					this.OnCommentConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardComment", Storage="_AcademicSessionName", ThisKey="AcademicSessionID", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._AcademicSessionID = value.ID;
					}
					else
					{
						this._AcademicSessionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardComment", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardComment", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardComment", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardComment", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportCardCommentConfig_ReportCardComment", Storage="_ReportCardCommentConfig", ThisKey="CommentConfigId", OtherKey="ID", IsForeignKey=true)]
		public ReportCardCommentConfig ReportCardCommentConfig
		{
			get
			{
				return this._ReportCardCommentConfig.Entity;
			}
			set
			{
				ReportCardCommentConfig previousValue = this._ReportCardCommentConfig.Entity;
				if (((previousValue != value) 
							|| (this._ReportCardCommentConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportCardCommentConfig.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._ReportCardCommentConfig.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._CommentConfigId = value.ID;
					}
					else
					{
						this._CommentConfigId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ReportCardCommentConfig");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardComment", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardComment1", Storage="_User1", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ReportCardComments1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments1.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardComment", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ReportCardComments.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ReportCardComments.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportCardCommentConfig")]
	public partial class ReportCardCommentConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _CommentBy;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCommentByChanging(string value);
    partial void OnCommentByChanged();
    #endregion
		
		public ReportCardCommentConfig()
		{
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentBy", DbType="VarChar(MAX)")]
		public string CommentBy
		{
			get
			{
				return this._CommentBy;
			}
			set
			{
				if ((this._CommentBy != value))
				{
					this.OnCommentByChanging(value);
					this.SendPropertyChanging();
					this._CommentBy = value;
					this.SendPropertyChanged("CommentBy");
					this.OnCommentByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportCardCommentConfig_ReportCardComment", Storage="_ReportCardComments", ThisKey="ID", OtherKey="CommentConfigId")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.ReportCardCommentConfig = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.ReportCardCommentConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreExtraCurricular")]
	public partial class StudentScoreExtraCurricular : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNo;
		
		private System.Nullable<int> _MarkObtainable;
		
		private System.Nullable<decimal> _MarkObtained;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<decimal> _PercentageScore;
		
		private System.Nullable<int> _CAPercentage;
		
		private System.Nullable<decimal> _CAPercentageScore;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private System.Nullable<long> _SubjectTeacherId;
		
		private System.Nullable<long> _UploadedById;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<long> _TestAssigenmentBroadSheetTemplateID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Description;
		
		private string _Remark;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<ScoreCategoryConfiguration> _ScoreCategoryConfiguration;
		
		private EntityRef<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfiguration;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplate;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnMarkObtainableChanging(System.Nullable<int> value);
    partial void OnMarkObtainableChanged();
    partial void OnMarkObtainedChanging(System.Nullable<decimal> value);
    partial void OnMarkObtainedChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnPercentageScoreChanged();
    partial void OnCAPercentageChanging(System.Nullable<int> value);
    partial void OnCAPercentageChanged();
    partial void OnCAPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnCAPercentageScoreChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnSubjectTeacherIdChanging(System.Nullable<long> value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnTestAssigenmentBroadSheetTemplateIDChanging(System.Nullable<long> value);
    partial void OnTestAssigenmentBroadSheetTemplateIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public StudentScoreExtraCurricular()
		{
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._ScoreCategoryConfiguration = default(EntityRef<ScoreCategoryConfiguration>);
			this._ScoreSubCategoryConfiguration = default(EntityRef<ScoreSubCategoryConfiguration>);
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssigenmentBroadSheetTemplate = default(EntityRef<TestAssigenmentBroadSheetTemplate>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="VarChar(100)")]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtainable", DbType="Int")]
		public System.Nullable<int> MarkObtainable
		{
			get
			{
				return this._MarkObtainable;
			}
			set
			{
				if ((this._MarkObtainable != value))
				{
					this.OnMarkObtainableChanging(value);
					this.SendPropertyChanging();
					this._MarkObtainable = value;
					this.SendPropertyChanged("MarkObtainable");
					this.OnMarkObtainableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtained", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MarkObtained
		{
			get
			{
				return this._MarkObtained;
			}
			set
			{
				if ((this._MarkObtained != value))
				{
					this.OnMarkObtainedChanging(value);
					this.SendPropertyChanging();
					this._MarkObtained = value;
					this.SendPropertyChanged("MarkObtained");
					this.OnMarkObtainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PercentageScore
		{
			get
			{
				return this._PercentageScore;
			}
			set
			{
				if ((this._PercentageScore != value))
				{
					this.OnPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._PercentageScore = value;
					this.SendPropertyChanged("PercentageScore");
					this.OnPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentage", DbType="Int")]
		public System.Nullable<int> CAPercentage
		{
			get
			{
				return this._CAPercentage;
			}
			set
			{
				if ((this._CAPercentage != value))
				{
					this.OnCAPercentageChanging(value);
					this.SendPropertyChanging();
					this._CAPercentage = value;
					this.SendPropertyChanged("CAPercentage");
					this.OnCAPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CAPercentageScore
		{
			get
			{
				return this._CAPercentageScore;
			}
			set
			{
				if ((this._CAPercentageScore != value))
				{
					this.OnCAPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._CAPercentageScore = value;
					this.SendPropertyChanged("CAPercentageScore");
					this.OnCAPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					if (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt")]
		public System.Nullable<long> SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestAssigenmentBroadSheetTemplateID", DbType="BigInt")]
		public System.Nullable<long> TestAssigenmentBroadSheetTemplateID
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplateID;
			}
			set
			{
				if ((this._TestAssigenmentBroadSheetTemplateID != value))
				{
					if (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestAssigenmentBroadSheetTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TestAssigenmentBroadSheetTemplateID = value;
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplateID");
					this.OnTestAssigenmentBroadSheetTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreExtraCurricular", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreExtraCurricular", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreExtraCurricular", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreExtraCurricular", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreExtraCurricular", Storage="_ScoreCategoryConfiguration", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreCategoryConfiguration ScoreCategoryConfiguration
		{
			get
			{
				return this._ScoreCategoryConfiguration.Entity;
			}
			set
			{
				ScoreCategoryConfiguration previousValue = this._ScoreCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreCategoryConfiguration.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._ScoreCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreExtraCurricular", Storage="_ScoreSubCategoryConfiguration", ThisKey="SubCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreSubCategoryConfiguration ScoreSubCategoryConfiguration
		{
			get
			{
				return this._ScoreSubCategoryConfiguration.Entity;
			}
			set
			{
				ScoreSubCategoryConfiguration previousValue = this._ScoreSubCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreSubCategoryConfiguration.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._ScoreSubCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._SubCategoryId = value.Id;
					}
					else
					{
						this._SubCategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreSubCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreExtraCurricular", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreExtraCurricular", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreExtraCurricular", Storage="_TestAssigenmentBroadSheetTemplate", ThisKey="TestAssigenmentBroadSheetTemplateID", OtherKey="ID", IsForeignKey=true)]
		public TestAssigenmentBroadSheetTemplate TestAssigenmentBroadSheetTemplate
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplate.Entity;
			}
			set
			{
				TestAssigenmentBroadSheetTemplate previousValue = this._TestAssigenmentBroadSheetTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssigenmentBroadSheetTemplate.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._TestAssigenmentBroadSheetTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._TestAssigenmentBroadSheetTemplateID = value.ID;
					}
					else
					{
						this._TestAssigenmentBroadSheetTemplateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreExtraCurricular", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreExtraCurricular", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreExtraCurricular1", Storage="_User1", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.StudentScoreExtraCurriculars1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars1.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreExtraCurricular", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScoreExtraCurriculars.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScoreExtraCurriculars.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectTeachers")]
	public partial class SubjectTeacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _TeacherId;
		
		private System.Nullable<long> _SchoolId;
		
		private string _SubjectStatus;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _ClassId;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<Grade> _Grade1;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnTeacherIdChanging(System.Nullable<long> value);
    partial void OnTeacherIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnSubjectStatusChanging(string value);
    partial void OnSubjectStatusChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    #endregion
		
		public SubjectTeacher()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._Grade1 = default(EntityRef<Grade>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt")]
		public System.Nullable<long> TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectStatus", DbType="VarChar(50)")]
		public string SubjectStatus
		{
			get
			{
				return this._SubjectStatus;
			}
			set
			{
				if ((this._SubjectStatus != value))
				{
					this.OnSubjectStatusChanging(value);
					this.SendPropertyChanging();
					this._SubjectStatus = value;
					this.SendPropertyChanged("SubjectStatus");
					this.OnSubjectStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if ((this._Grade.HasLoadedOrAssignedValue || this._Grade1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_SubjectTeacher", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.SubjectTeachers.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.SubjectTeachers.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_SubjectTeacher", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.SubjectTeachers.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.SubjectTeachers.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_SubjectTeacher1", Storage="_Grade1", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade1
		{
			get
			{
				return this._Grade1.Entity;
			}
			set
			{
				Grade previousValue = this._Grade1.Entity;
				if (((previousValue != value) 
							|| (this._Grade1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade1.Entity = null;
						previousValue.SubjectTeachers1.Remove(this);
					}
					this._Grade1.Entity = value;
					if ((value != null))
					{
						value.SubjectTeachers1.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectTeacher", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.SubjectTeachers.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.SubjectTeachers.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreRepository")]
	public partial class StudentScoreRepository : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNo;
		
		private System.Nullable<int> _MarkObtainable;
		
		private System.Nullable<decimal> _MarkObtained;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<decimal> _PercentageScore;
		
		private System.Nullable<int> _CAPercentage;
		
		private System.Nullable<decimal> _CAPercentageScore;
		
		private System.Nullable<int> _SubjectMaxScore;
		
		private System.Nullable<decimal> _FinalScore;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private System.Nullable<long> _SubjectTeacherId;
		
		private System.Nullable<long> _UploadedById;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<long> _TestAssigenmentBroadSheetTemplateID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Description;
		
		private string _Remark;
		
		private System.Nullable<int> _Count;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<ScoreCategoryConfiguration> _ScoreCategoryConfiguration;
		
		private EntityRef<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfiguration;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplate;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnMarkObtainableChanging(System.Nullable<int> value);
    partial void OnMarkObtainableChanged();
    partial void OnMarkObtainedChanging(System.Nullable<decimal> value);
    partial void OnMarkObtainedChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnPercentageScoreChanged();
    partial void OnCAPercentageChanging(System.Nullable<int> value);
    partial void OnCAPercentageChanged();
    partial void OnCAPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnCAPercentageScoreChanged();
    partial void OnSubjectMaxScoreChanging(System.Nullable<int> value);
    partial void OnSubjectMaxScoreChanged();
    partial void OnFinalScoreChanging(System.Nullable<decimal> value);
    partial void OnFinalScoreChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnSubjectTeacherIdChanging(System.Nullable<long> value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnTestAssigenmentBroadSheetTemplateIDChanging(System.Nullable<long> value);
    partial void OnTestAssigenmentBroadSheetTemplateIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    #endregion
		
		public StudentScoreRepository()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._ScoreCategoryConfiguration = default(EntityRef<ScoreCategoryConfiguration>);
			this._ScoreSubCategoryConfiguration = default(EntityRef<ScoreSubCategoryConfiguration>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssigenmentBroadSheetTemplate = default(EntityRef<TestAssigenmentBroadSheetTemplate>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._Subject = default(EntityRef<Subject>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="VarChar(100)")]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtainable", DbType="Int")]
		public System.Nullable<int> MarkObtainable
		{
			get
			{
				return this._MarkObtainable;
			}
			set
			{
				if ((this._MarkObtainable != value))
				{
					this.OnMarkObtainableChanging(value);
					this.SendPropertyChanging();
					this._MarkObtainable = value;
					this.SendPropertyChanged("MarkObtainable");
					this.OnMarkObtainableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtained", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MarkObtained
		{
			get
			{
				return this._MarkObtained;
			}
			set
			{
				if ((this._MarkObtained != value))
				{
					this.OnMarkObtainedChanging(value);
					this.SendPropertyChanging();
					this._MarkObtained = value;
					this.SendPropertyChanged("MarkObtained");
					this.OnMarkObtainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PercentageScore
		{
			get
			{
				return this._PercentageScore;
			}
			set
			{
				if ((this._PercentageScore != value))
				{
					this.OnPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._PercentageScore = value;
					this.SendPropertyChanged("PercentageScore");
					this.OnPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentage", DbType="Int")]
		public System.Nullable<int> CAPercentage
		{
			get
			{
				return this._CAPercentage;
			}
			set
			{
				if ((this._CAPercentage != value))
				{
					this.OnCAPercentageChanging(value);
					this.SendPropertyChanging();
					this._CAPercentage = value;
					this.SendPropertyChanged("CAPercentage");
					this.OnCAPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CAPercentageScore
		{
			get
			{
				return this._CAPercentageScore;
			}
			set
			{
				if ((this._CAPercentageScore != value))
				{
					this.OnCAPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._CAPercentageScore = value;
					this.SendPropertyChanged("CAPercentageScore");
					this.OnCAPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectMaxScore", DbType="Int")]
		public System.Nullable<int> SubjectMaxScore
		{
			get
			{
				return this._SubjectMaxScore;
			}
			set
			{
				if ((this._SubjectMaxScore != value))
				{
					this.OnSubjectMaxScoreChanging(value);
					this.SendPropertyChanging();
					this._SubjectMaxScore = value;
					this.SendPropertyChanged("SubjectMaxScore");
					this.OnSubjectMaxScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FinalScore
		{
			get
			{
				return this._FinalScore;
			}
			set
			{
				if ((this._FinalScore != value))
				{
					this.OnFinalScoreChanging(value);
					this.SendPropertyChanging();
					this._FinalScore = value;
					this.SendPropertyChanged("FinalScore");
					this.OnFinalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					if (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt")]
		public System.Nullable<long> SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestAssigenmentBroadSheetTemplateID", DbType="BigInt")]
		public System.Nullable<long> TestAssigenmentBroadSheetTemplateID
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplateID;
			}
			set
			{
				if ((this._TestAssigenmentBroadSheetTemplateID != value))
				{
					if (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestAssigenmentBroadSheetTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TestAssigenmentBroadSheetTemplateID = value;
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplateID");
					this.OnTestAssigenmentBroadSheetTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreRepository", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreRepository", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreRepository", Storage="_ScoreCategoryConfiguration", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreCategoryConfiguration ScoreCategoryConfiguration
		{
			get
			{
				return this._ScoreCategoryConfiguration.Entity;
			}
			set
			{
				ScoreCategoryConfiguration previousValue = this._ScoreCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreCategoryConfiguration.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._ScoreCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreRepository", Storage="_ScoreSubCategoryConfiguration", ThisKey="SubCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreSubCategoryConfiguration ScoreSubCategoryConfiguration
		{
			get
			{
				return this._ScoreSubCategoryConfiguration.Entity;
			}
			set
			{
				ScoreSubCategoryConfiguration previousValue = this._ScoreSubCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreSubCategoryConfiguration.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._ScoreSubCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._SubCategoryId = value.Id;
					}
					else
					{
						this._SubCategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreSubCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreRepository", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreRepository", Storage="_TestAssigenmentBroadSheetTemplate", ThisKey="TestAssigenmentBroadSheetTemplateID", OtherKey="ID", IsForeignKey=true)]
		public TestAssigenmentBroadSheetTemplate TestAssigenmentBroadSheetTemplate
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplate.Entity;
			}
			set
			{
				TestAssigenmentBroadSheetTemplate previousValue = this._TestAssigenmentBroadSheetTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssigenmentBroadSheetTemplate.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._TestAssigenmentBroadSheetTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._TestAssigenmentBroadSheetTemplateID = value.ID;
					}
					else
					{
						this._TestAssigenmentBroadSheetTemplateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreRepository", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreRepository", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreRepository", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreRepository", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepository", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepository1", Storage="_User1", ThisKey="SubjectTeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.StudentScoreRepositories1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories1.Add(this);
						this._SubjectTeacherId = value.Id;
					}
					else
					{
						this._SubjectTeacherId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepository2", Storage="_User2", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.StudentScoreRepositories2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories2.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreRepository", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScoreRepositories.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositories.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScore")]
	public partial class StudentScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _ExamScoreObtainable;
		
		private System.Nullable<decimal> _ExamScore;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<decimal> _PercentageScore;
		
		private System.Nullable<int> _ExamPercentage;
		
		private System.Nullable<decimal> _ExamPercentageScore;
		
		private System.Nullable<int> _SubjectMaxScore;
		
		private System.Nullable<decimal> _FinalScore;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private System.Nullable<long> _SubjectTeacherId;
		
		private System.Nullable<long> _UploadedById;
		
		private long _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _AcademicSessionID;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<long> _BroadSheetTemplateID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Description;
		
		private string _Remark;
		
		private System.Nullable<int> _Count;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<ScoreCategoryConfiguration> _ScoreCategoryConfiguration;
		
		private EntityRef<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfiguration;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplate;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnExamScoreObtainableChanging(System.Nullable<int> value);
    partial void OnExamScoreObtainableChanged();
    partial void OnExamScoreChanging(System.Nullable<decimal> value);
    partial void OnExamScoreChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnPercentageScoreChanged();
    partial void OnExamPercentageChanging(System.Nullable<int> value);
    partial void OnExamPercentageChanged();
    partial void OnExamPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnExamPercentageScoreChanged();
    partial void OnSubjectMaxScoreChanging(System.Nullable<int> value);
    partial void OnSubjectMaxScoreChanged();
    partial void OnFinalScoreChanging(System.Nullable<decimal> value);
    partial void OnFinalScoreChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnSubjectTeacherIdChanging(System.Nullable<long> value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAcademicSessionIDChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIDChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnBroadSheetTemplateIDChanging(System.Nullable<long> value);
    partial void OnBroadSheetTemplateIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    #endregion
		
		public StudentScore()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._ScoreCategoryConfiguration = default(EntityRef<ScoreCategoryConfiguration>);
			this._ScoreSubCategoryConfiguration = default(EntityRef<ScoreSubCategoryConfiguration>);
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssigenmentBroadSheetTemplate = default(EntityRef<TestAssigenmentBroadSheetTemplate>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScoreObtainable", DbType="Int")]
		public System.Nullable<int> ExamScoreObtainable
		{
			get
			{
				return this._ExamScoreObtainable;
			}
			set
			{
				if ((this._ExamScoreObtainable != value))
				{
					this.OnExamScoreObtainableChanging(value);
					this.SendPropertyChanging();
					this._ExamScoreObtainable = value;
					this.SendPropertyChanged("ExamScoreObtainable");
					this.OnExamScoreObtainableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExamScore
		{
			get
			{
				return this._ExamScore;
			}
			set
			{
				if ((this._ExamScore != value))
				{
					this.OnExamScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamScore = value;
					this.SendPropertyChanged("ExamScore");
					this.OnExamScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PercentageScore
		{
			get
			{
				return this._PercentageScore;
			}
			set
			{
				if ((this._PercentageScore != value))
				{
					this.OnPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._PercentageScore = value;
					this.SendPropertyChanged("PercentageScore");
					this.OnPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPercentage", DbType="Int")]
		public System.Nullable<int> ExamPercentage
		{
			get
			{
				return this._ExamPercentage;
			}
			set
			{
				if ((this._ExamPercentage != value))
				{
					this.OnExamPercentageChanging(value);
					this.SendPropertyChanging();
					this._ExamPercentage = value;
					this.SendPropertyChanged("ExamPercentage");
					this.OnExamPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExamPercentageScore
		{
			get
			{
				return this._ExamPercentageScore;
			}
			set
			{
				if ((this._ExamPercentageScore != value))
				{
					this.OnExamPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamPercentageScore = value;
					this.SendPropertyChanged("ExamPercentageScore");
					this.OnExamPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectMaxScore", DbType="Int")]
		public System.Nullable<int> SubjectMaxScore
		{
			get
			{
				return this._SubjectMaxScore;
			}
			set
			{
				if ((this._SubjectMaxScore != value))
				{
					this.OnSubjectMaxScoreChanging(value);
					this.SendPropertyChanging();
					this._SubjectMaxScore = value;
					this.SendPropertyChanged("SubjectMaxScore");
					this.OnSubjectMaxScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FinalScore
		{
			get
			{
				return this._FinalScore;
			}
			set
			{
				if ((this._FinalScore != value))
				{
					this.OnFinalScoreChanging(value);
					this.SendPropertyChanging();
					this._FinalScore = value;
					this.SendPropertyChanged("FinalScore");
					this.OnFinalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					if (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt")]
		public System.Nullable<long> SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionID", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionID
		{
			get
			{
				return this._AcademicSessionID;
			}
			set
			{
				if ((this._AcademicSessionID != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionIDChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionID = value;
					this.SendPropertyChanged("AcademicSessionID");
					this.OnAcademicSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(500)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BroadSheetTemplateID", DbType="BigInt")]
		public System.Nullable<long> BroadSheetTemplateID
		{
			get
			{
				return this._BroadSheetTemplateID;
			}
			set
			{
				if ((this._BroadSheetTemplateID != value))
				{
					if (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBroadSheetTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._BroadSheetTemplateID = value;
					this.SendPropertyChanged("BroadSheetTemplateID");
					this.OnBroadSheetTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScore", Storage="_AcademicSessionName", ThisKey="AcademicSessionID", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._AcademicSessionID = value.ID;
					}
					else
					{
						this._AcademicSessionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScore", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScore", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScore", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScore", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScore", Storage="_ScoreCategoryConfiguration", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreCategoryConfiguration ScoreCategoryConfiguration
		{
			get
			{
				return this._ScoreCategoryConfiguration.Entity;
			}
			set
			{
				ScoreCategoryConfiguration previousValue = this._ScoreCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreCategoryConfiguration.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._ScoreCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScore", Storage="_ScoreSubCategoryConfiguration", ThisKey="SubCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreSubCategoryConfiguration ScoreSubCategoryConfiguration
		{
			get
			{
				return this._ScoreSubCategoryConfiguration.Entity;
			}
			set
			{
				ScoreSubCategoryConfiguration previousValue = this._ScoreSubCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreSubCategoryConfiguration.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._ScoreSubCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._SubCategoryId = value.Id;
					}
					else
					{
						this._SubCategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreSubCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScore", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(long);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScore", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScore", Storage="_TestAssigenmentBroadSheetTemplate", ThisKey="BroadSheetTemplateID", OtherKey="ID", IsForeignKey=true)]
		public TestAssigenmentBroadSheetTemplate TestAssigenmentBroadSheetTemplate
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplate.Entity;
			}
			set
			{
				TestAssigenmentBroadSheetTemplate previousValue = this._TestAssigenmentBroadSheetTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssigenmentBroadSheetTemplate.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._TestAssigenmentBroadSheetTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._BroadSheetTemplateID = value.ID;
					}
					else
					{
						this._BroadSheetTemplateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScore", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScore", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScore1", Storage="_User1", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.StudentScores1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.StudentScores1.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScore2", Storage="_User2", ThisKey="SubjectTeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.StudentScores2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.StudentScores2.Add(this);
						this._SubjectTeacherId = value.Id;
					}
					else
					{
						this._SubjectTeacherId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScore", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _UserId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<long> _SchoolId;
		
		private string _MatricNumber;
		
		private string _AdmissionNumber;
		
		private string _MiddleName;
		
		private int _Gender;
		
		private System.Nullable<long> _Status;
		
		private string _BusRoute;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _SchoolHouse;
		
		private string _SchoolHouseParentName;
		
		private string _StreetAddress;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _FathersTitle;
		
		private string _FathersName;
		
		private string _FathersPhoneNumber;
		
		private string _FathersWorkAddress;
		
		private string _FathersEmail;
		
		private string _FathersNationality;
		
		private string _MothersName;
		
		private string _MothersOtherName;
		
		private string _MothersWorkAddress;
		
		private string _MothersPhoneNumber;
		
		private string _MothersEmail;
		
		private string _MothersNationality;
		
		private string _GuardianDetails;
		
		private string _GuardianPhoneNumber;
		
		private string _GuardianEmail;
		
		private string _GuardianRelationship;
		
		private string _SpecialNoteAlert;
		
		private string _Siblings;
		
		private long _SchoolCampusId;
		
		private string _YearofAdmission;
		
		private string _StateofOrigin;
		
		private string _LocalGovt;
		
		private string _Religion;
		
		private string _StudentFullName;
		
		private string _LastSchoolAttended;
		
		private string _LastSchoolAttendedYear;
		
		private string _LastSchoolAttendedCityCountry;
		
		private string _LastSchoolAttendedClass;
		
		private string _AccomodationType;
		
		private System.Nullable<long> _ParentId;
		
		private string _PassportFileName;
		
		private System.Nullable<int> _IsLearningSupport;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _UserStatus;
		
		private System.Nullable<long> _CreatedBy;
		
		private string _TeacherCode;
		
		private string _AcademicStatus;
		
		private System.Nullable<int> _AcademicSessionId;
		
		private System.Nullable<bool> _StudentStatus;
		
		private EntitySet<BatchStudent> _BatchStudents;
		
		private EntitySet<FeedBackDetail> _FeedBackDetails;
		
		private EntitySet<GradeClassTeacher> _GradeClassTeachers;
		
		private EntitySet<Grouping> _Groupings;
		
		private EntitySet<GroupStudent> _GroupStudents;
		
		private EntitySet<HomeRoomTeacher> _HomeRoomTeachers;
		
		private EntitySet<OptionGroupSubject> _OptionGroupSubjects;
		
		private EntitySet<PAAuditTrial> _PAAuditTrials;
		
		private EntitySet<ParentStudentMap> _ParentStudentMaps;
		
		private EntitySet<StudentBill> _StudentBills;
		
		private EntitySet<SweepTransactionLog> _SweepTransactionLogs;
		
		private EntitySet<TeachersProfile> _TeachersProfiles;
		
		private EntitySet<TransactionHistory> _TransactionHistories;
		
		private EntitySet<TransactionLog> _TransactionLogs;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<ReportCardPosition> _ReportCardPositions;
		
		private EntitySet<StudentNameDuplicateException> _StudentNameDuplicateExceptions;
		
		private EntitySet<GradeStudent> _GradeStudents;
		
		private EntitySet<Alumni> _Alumnis;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries1;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries2;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists1;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<LessonNote> _LessonNotes;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals1;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
		private EntitySet<ReportCardComment> _ReportCardComments1;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars1;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories1;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories2;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentScore> _StudentScores1;
		
		private EntitySet<StudentScore> _StudentScores2;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents1;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions1;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions2;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions1;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions2;
		
		private EntitySet<NewsLetter> _NewsLetters;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries1;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries2;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
		private EntitySet<CbtNotice> _CbtNotices;
		
		private EntityRef<Status> _Status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnMatricNumberChanging(string value);
    partial void OnMatricNumberChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnGenderChanging(int value);
    partial void OnGenderChanged();
    partial void OnStatusChanging(System.Nullable<long> value);
    partial void OnStatusChanged();
    partial void OnBusRouteChanging(string value);
    partial void OnBusRouteChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnSchoolHouseChanging(string value);
    partial void OnSchoolHouseChanged();
    partial void OnSchoolHouseParentNameChanging(string value);
    partial void OnSchoolHouseParentNameChanged();
    partial void OnStreetAddressChanging(string value);
    partial void OnStreetAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnFathersTitleChanging(string value);
    partial void OnFathersTitleChanged();
    partial void OnFathersNameChanging(string value);
    partial void OnFathersNameChanged();
    partial void OnFathersPhoneNumberChanging(string value);
    partial void OnFathersPhoneNumberChanged();
    partial void OnFathersWorkAddressChanging(string value);
    partial void OnFathersWorkAddressChanged();
    partial void OnFathersEmailChanging(string value);
    partial void OnFathersEmailChanged();
    partial void OnFathersNationalityChanging(string value);
    partial void OnFathersNationalityChanged();
    partial void OnMothersNameChanging(string value);
    partial void OnMothersNameChanged();
    partial void OnMothersOtherNameChanging(string value);
    partial void OnMothersOtherNameChanged();
    partial void OnMothersWorkAddressChanging(string value);
    partial void OnMothersWorkAddressChanged();
    partial void OnMothersPhoneNumberChanging(string value);
    partial void OnMothersPhoneNumberChanged();
    partial void OnMothersEmailChanging(string value);
    partial void OnMothersEmailChanged();
    partial void OnMothersNationalityChanging(string value);
    partial void OnMothersNationalityChanged();
    partial void OnGuardianDetailsChanging(string value);
    partial void OnGuardianDetailsChanged();
    partial void OnGuardianPhoneNumberChanging(string value);
    partial void OnGuardianPhoneNumberChanged();
    partial void OnGuardianEmailChanging(string value);
    partial void OnGuardianEmailChanged();
    partial void OnGuardianRelationshipChanging(string value);
    partial void OnGuardianRelationshipChanged();
    partial void OnSpecialNoteAlertChanging(string value);
    partial void OnSpecialNoteAlertChanged();
    partial void OnSiblingsChanging(string value);
    partial void OnSiblingsChanged();
    partial void OnSchoolCampusIdChanging(long value);
    partial void OnSchoolCampusIdChanged();
    partial void OnYearofAdmissionChanging(string value);
    partial void OnYearofAdmissionChanged();
    partial void OnStateofOriginChanging(string value);
    partial void OnStateofOriginChanged();
    partial void OnLocalGovtChanging(string value);
    partial void OnLocalGovtChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnStudentFullNameChanging(string value);
    partial void OnStudentFullNameChanged();
    partial void OnLastSchoolAttendedChanging(string value);
    partial void OnLastSchoolAttendedChanged();
    partial void OnLastSchoolAttendedYearChanging(string value);
    partial void OnLastSchoolAttendedYearChanged();
    partial void OnLastSchoolAttendedCityCountryChanging(string value);
    partial void OnLastSchoolAttendedCityCountryChanged();
    partial void OnLastSchoolAttendedClassChanging(string value);
    partial void OnLastSchoolAttendedClassChanged();
    partial void OnAccomodationTypeChanging(string value);
    partial void OnAccomodationTypeChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnPassportFileNameChanging(string value);
    partial void OnPassportFileNameChanged();
    partial void OnIsLearningSupportChanging(System.Nullable<int> value);
    partial void OnIsLearningSupportChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnUserStatusChanging(System.Nullable<int> value);
    partial void OnUserStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnTeacherCodeChanging(string value);
    partial void OnTeacherCodeChanged();
    partial void OnAcademicStatusChanging(string value);
    partial void OnAcademicStatusChanged();
    partial void OnAcademicSessionIdChanging(System.Nullable<int> value);
    partial void OnAcademicSessionIdChanged();
    partial void OnStudentStatusChanging(System.Nullable<bool> value);
    partial void OnStudentStatusChanged();
    #endregion
		
		public User()
		{
			this._BatchStudents = new EntitySet<BatchStudent>(new Action<BatchStudent>(this.attach_BatchStudents), new Action<BatchStudent>(this.detach_BatchStudents));
			this._FeedBackDetails = new EntitySet<FeedBackDetail>(new Action<FeedBackDetail>(this.attach_FeedBackDetails), new Action<FeedBackDetail>(this.detach_FeedBackDetails));
			this._GradeClassTeachers = new EntitySet<GradeClassTeacher>(new Action<GradeClassTeacher>(this.attach_GradeClassTeachers), new Action<GradeClassTeacher>(this.detach_GradeClassTeachers));
			this._Groupings = new EntitySet<Grouping>(new Action<Grouping>(this.attach_Groupings), new Action<Grouping>(this.detach_Groupings));
			this._GroupStudents = new EntitySet<GroupStudent>(new Action<GroupStudent>(this.attach_GroupStudents), new Action<GroupStudent>(this.detach_GroupStudents));
			this._HomeRoomTeachers = new EntitySet<HomeRoomTeacher>(new Action<HomeRoomTeacher>(this.attach_HomeRoomTeachers), new Action<HomeRoomTeacher>(this.detach_HomeRoomTeachers));
			this._OptionGroupSubjects = new EntitySet<OptionGroupSubject>(new Action<OptionGroupSubject>(this.attach_OptionGroupSubjects), new Action<OptionGroupSubject>(this.detach_OptionGroupSubjects));
			this._PAAuditTrials = new EntitySet<PAAuditTrial>(new Action<PAAuditTrial>(this.attach_PAAuditTrials), new Action<PAAuditTrial>(this.detach_PAAuditTrials));
			this._ParentStudentMaps = new EntitySet<ParentStudentMap>(new Action<ParentStudentMap>(this.attach_ParentStudentMaps), new Action<ParentStudentMap>(this.detach_ParentStudentMaps));
			this._StudentBills = new EntitySet<StudentBill>(new Action<StudentBill>(this.attach_StudentBills), new Action<StudentBill>(this.detach_StudentBills));
			this._SweepTransactionLogs = new EntitySet<SweepTransactionLog>(new Action<SweepTransactionLog>(this.attach_SweepTransactionLogs), new Action<SweepTransactionLog>(this.detach_SweepTransactionLogs));
			this._TeachersProfiles = new EntitySet<TeachersProfile>(new Action<TeachersProfile>(this.attach_TeachersProfiles), new Action<TeachersProfile>(this.detach_TeachersProfiles));
			this._TransactionHistories = new EntitySet<TransactionHistory>(new Action<TransactionHistory>(this.attach_TransactionHistories), new Action<TransactionHistory>(this.detach_TransactionHistories));
			this._TransactionLogs = new EntitySet<TransactionLog>(new Action<TransactionLog>(this.attach_TransactionLogs), new Action<TransactionLog>(this.detach_TransactionLogs));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._ReportCardPositions = new EntitySet<ReportCardPosition>(new Action<ReportCardPosition>(this.attach_ReportCardPositions), new Action<ReportCardPosition>(this.detach_ReportCardPositions));
			this._StudentNameDuplicateExceptions = new EntitySet<StudentNameDuplicateException>(new Action<StudentNameDuplicateException>(this.attach_StudentNameDuplicateExceptions), new Action<StudentNameDuplicateException>(this.detach_StudentNameDuplicateExceptions));
			this._GradeStudents = new EntitySet<GradeStudent>(new Action<GradeStudent>(this.attach_GradeStudents), new Action<GradeStudent>(this.detach_GradeStudents));
			this._Alumnis = new EntitySet<Alumni>(new Action<Alumni>(this.attach_Alumnis), new Action<Alumni>(this.detach_Alumnis));
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._PaymentTemporaries1 = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries1), new Action<PaymentTemporary>(this.detach_PaymentTemporaries1));
			this._PaymentTemporaries2 = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries2), new Action<PaymentTemporary>(this.detach_PaymentTemporaries2));
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._PaymentInvoiceLists1 = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists1), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists1));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._LessonNotes = new EntitySet<LessonNote>(new Action<LessonNote>(this.attach_LessonNotes), new Action<LessonNote>(this.detach_LessonNotes));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._StudentScoreBehaviorals1 = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals1), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals1));
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			this._ReportCardComments1 = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments1), new Action<ReportCardComment>(this.detach_ReportCardComments1));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreExtraCurriculars1 = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars1), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars1));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScoreRepositories1 = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories1), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories1));
			this._StudentScoreRepositories2 = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories2), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories2));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentScores1 = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores1), new Action<StudentScore>(this.detach_StudentScores1));
			this._StudentScores2 = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores2), new Action<StudentScore>(this.detach_StudentScores2));
			this._PaymentPermanents = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents), new Action<PaymentPermanent>(this.detach_PaymentPermanents));
			this._PaymentPermanents1 = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents1), new Action<PaymentPermanent>(this.detach_PaymentPermanents1));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreTransactions1 = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions1), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions1));
			this._StudentScoreTransactions2 = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions2), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions2));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._StudentScoreRepositoryTransactions1 = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions1), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions1));
			this._StudentScoreRepositoryTransactions2 = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions2), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions2));
			this._NewsLetters = new EntitySet<NewsLetter>(new Action<NewsLetter>(this.attach_NewsLetters), new Action<NewsLetter>(this.detach_NewsLetters));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._StudentScoreTemporaries1 = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries1), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries1));
			this._StudentScoreTemporaries2 = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries2), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries2));
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			this._CbtNotices = new EntitySet<CbtNotice>(new Action<CbtNotice>(this.attach_CbtNotices), new Action<CbtNotice>(this.detach_CbtNotices));
			this._Status1 = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(200)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatricNumber", DbType="VarChar(100)")]
		public string MatricNumber
		{
			get
			{
				return this._MatricNumber;
			}
			set
			{
				if ((this._MatricNumber != value))
				{
					this.OnMatricNumberChanging(value);
					this.SendPropertyChanging();
					this._MatricNumber = value;
					this.SendPropertyChanged("MatricNumber");
					this.OnMatricNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(100)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(100)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int NOT NULL")]
		public int Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="BigInt")]
		public System.Nullable<long> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusRoute", DbType="VarChar(500)")]
		public string BusRoute
		{
			get
			{
				return this._BusRoute;
			}
			set
			{
				if ((this._BusRoute != value))
				{
					this.OnBusRouteChanging(value);
					this.SendPropertyChanging();
					this._BusRoute = value;
					this.SendPropertyChanged("BusRoute");
					this.OnBusRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolHouse", DbType="VarChar(100)")]
		public string SchoolHouse
		{
			get
			{
				return this._SchoolHouse;
			}
			set
			{
				if ((this._SchoolHouse != value))
				{
					this.OnSchoolHouseChanging(value);
					this.SendPropertyChanging();
					this._SchoolHouse = value;
					this.SendPropertyChanged("SchoolHouse");
					this.OnSchoolHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolHouseParentName", DbType="VarChar(100)")]
		public string SchoolHouseParentName
		{
			get
			{
				return this._SchoolHouseParentName;
			}
			set
			{
				if ((this._SchoolHouseParentName != value))
				{
					this.OnSchoolHouseParentNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolHouseParentName = value;
					this.SendPropertyChanged("SchoolHouseParentName");
					this.OnSchoolHouseParentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress", DbType="VarChar(1000)")]
		public string StreetAddress
		{
			get
			{
				return this._StreetAddress;
			}
			set
			{
				if ((this._StreetAddress != value))
				{
					this.OnStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._StreetAddress = value;
					this.SendPropertyChanged("StreetAddress");
					this.OnStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(100)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersTitle", DbType="VarChar(100)")]
		public string FathersTitle
		{
			get
			{
				return this._FathersTitle;
			}
			set
			{
				if ((this._FathersTitle != value))
				{
					this.OnFathersTitleChanging(value);
					this.SendPropertyChanging();
					this._FathersTitle = value;
					this.SendPropertyChanged("FathersTitle");
					this.OnFathersTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersName", DbType="VarChar(100)")]
		public string FathersName
		{
			get
			{
				return this._FathersName;
			}
			set
			{
				if ((this._FathersName != value))
				{
					this.OnFathersNameChanging(value);
					this.SendPropertyChanging();
					this._FathersName = value;
					this.SendPropertyChanged("FathersName");
					this.OnFathersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersPhoneNumber", DbType="VarChar(100)")]
		public string FathersPhoneNumber
		{
			get
			{
				return this._FathersPhoneNumber;
			}
			set
			{
				if ((this._FathersPhoneNumber != value))
				{
					this.OnFathersPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._FathersPhoneNumber = value;
					this.SendPropertyChanged("FathersPhoneNumber");
					this.OnFathersPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersWorkAddress", DbType="VarChar(500)")]
		public string FathersWorkAddress
		{
			get
			{
				return this._FathersWorkAddress;
			}
			set
			{
				if ((this._FathersWorkAddress != value))
				{
					this.OnFathersWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._FathersWorkAddress = value;
					this.SendPropertyChanged("FathersWorkAddress");
					this.OnFathersWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersEmail", DbType="VarChar(100)")]
		public string FathersEmail
		{
			get
			{
				return this._FathersEmail;
			}
			set
			{
				if ((this._FathersEmail != value))
				{
					this.OnFathersEmailChanging(value);
					this.SendPropertyChanging();
					this._FathersEmail = value;
					this.SendPropertyChanged("FathersEmail");
					this.OnFathersEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FathersNationality", DbType="VarChar(100)")]
		public string FathersNationality
		{
			get
			{
				return this._FathersNationality;
			}
			set
			{
				if ((this._FathersNationality != value))
				{
					this.OnFathersNationalityChanging(value);
					this.SendPropertyChanging();
					this._FathersNationality = value;
					this.SendPropertyChanged("FathersNationality");
					this.OnFathersNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersName", DbType="VarChar(100)")]
		public string MothersName
		{
			get
			{
				return this._MothersName;
			}
			set
			{
				if ((this._MothersName != value))
				{
					this.OnMothersNameChanging(value);
					this.SendPropertyChanging();
					this._MothersName = value;
					this.SendPropertyChanged("MothersName");
					this.OnMothersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersOtherName", DbType="VarChar(100)")]
		public string MothersOtherName
		{
			get
			{
				return this._MothersOtherName;
			}
			set
			{
				if ((this._MothersOtherName != value))
				{
					this.OnMothersOtherNameChanging(value);
					this.SendPropertyChanging();
					this._MothersOtherName = value;
					this.SendPropertyChanged("MothersOtherName");
					this.OnMothersOtherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersWorkAddress", DbType="VarChar(500)")]
		public string MothersWorkAddress
		{
			get
			{
				return this._MothersWorkAddress;
			}
			set
			{
				if ((this._MothersWorkAddress != value))
				{
					this.OnMothersWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._MothersWorkAddress = value;
					this.SendPropertyChanged("MothersWorkAddress");
					this.OnMothersWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersPhoneNumber", DbType="VarChar(100)")]
		public string MothersPhoneNumber
		{
			get
			{
				return this._MothersPhoneNumber;
			}
			set
			{
				if ((this._MothersPhoneNumber != value))
				{
					this.OnMothersPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._MothersPhoneNumber = value;
					this.SendPropertyChanged("MothersPhoneNumber");
					this.OnMothersPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersEmail", DbType="VarChar(100)")]
		public string MothersEmail
		{
			get
			{
				return this._MothersEmail;
			}
			set
			{
				if ((this._MothersEmail != value))
				{
					this.OnMothersEmailChanging(value);
					this.SendPropertyChanging();
					this._MothersEmail = value;
					this.SendPropertyChanged("MothersEmail");
					this.OnMothersEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothersNationality", DbType="VarChar(100)")]
		public string MothersNationality
		{
			get
			{
				return this._MothersNationality;
			}
			set
			{
				if ((this._MothersNationality != value))
				{
					this.OnMothersNationalityChanging(value);
					this.SendPropertyChanging();
					this._MothersNationality = value;
					this.SendPropertyChanged("MothersNationality");
					this.OnMothersNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianDetails", DbType="VarChar(1000)")]
		public string GuardianDetails
		{
			get
			{
				return this._GuardianDetails;
			}
			set
			{
				if ((this._GuardianDetails != value))
				{
					this.OnGuardianDetailsChanging(value);
					this.SendPropertyChanging();
					this._GuardianDetails = value;
					this.SendPropertyChanged("GuardianDetails");
					this.OnGuardianDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianPhoneNumber", DbType="VarChar(100)")]
		public string GuardianPhoneNumber
		{
			get
			{
				return this._GuardianPhoneNumber;
			}
			set
			{
				if ((this._GuardianPhoneNumber != value))
				{
					this.OnGuardianPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._GuardianPhoneNumber = value;
					this.SendPropertyChanged("GuardianPhoneNumber");
					this.OnGuardianPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianEmail", DbType="VarChar(100)")]
		public string GuardianEmail
		{
			get
			{
				return this._GuardianEmail;
			}
			set
			{
				if ((this._GuardianEmail != value))
				{
					this.OnGuardianEmailChanging(value);
					this.SendPropertyChanging();
					this._GuardianEmail = value;
					this.SendPropertyChanged("GuardianEmail");
					this.OnGuardianEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianRelationship", DbType="VarChar(100)")]
		public string GuardianRelationship
		{
			get
			{
				return this._GuardianRelationship;
			}
			set
			{
				if ((this._GuardianRelationship != value))
				{
					this.OnGuardianRelationshipChanging(value);
					this.SendPropertyChanging();
					this._GuardianRelationship = value;
					this.SendPropertyChanged("GuardianRelationship");
					this.OnGuardianRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialNoteAlert", DbType="VarChar(200)")]
		public string SpecialNoteAlert
		{
			get
			{
				return this._SpecialNoteAlert;
			}
			set
			{
				if ((this._SpecialNoteAlert != value))
				{
					this.OnSpecialNoteAlertChanging(value);
					this.SendPropertyChanging();
					this._SpecialNoteAlert = value;
					this.SendPropertyChanged("SpecialNoteAlert");
					this.OnSpecialNoteAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Siblings", DbType="VarChar(200)")]
		public string Siblings
		{
			get
			{
				return this._Siblings;
			}
			set
			{
				if ((this._Siblings != value))
				{
					this.OnSiblingsChanging(value);
					this.SendPropertyChanging();
					this._Siblings = value;
					this.SendPropertyChanged("Siblings");
					this.OnSiblingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampusId", DbType="BigInt NOT NULL")]
		public long SchoolCampusId
		{
			get
			{
				return this._SchoolCampusId;
			}
			set
			{
				if ((this._SchoolCampusId != value))
				{
					this.OnSchoolCampusIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampusId = value;
					this.SendPropertyChanged("SchoolCampusId");
					this.OnSchoolCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearofAdmission", DbType="VarChar(50)")]
		public string YearofAdmission
		{
			get
			{
				return this._YearofAdmission;
			}
			set
			{
				if ((this._YearofAdmission != value))
				{
					this.OnYearofAdmissionChanging(value);
					this.SendPropertyChanging();
					this._YearofAdmission = value;
					this.SendPropertyChanged("YearofAdmission");
					this.OnYearofAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateofOrigin", DbType="VarChar(100)")]
		public string StateofOrigin
		{
			get
			{
				return this._StateofOrigin;
			}
			set
			{
				if ((this._StateofOrigin != value))
				{
					this.OnStateofOriginChanging(value);
					this.SendPropertyChanging();
					this._StateofOrigin = value;
					this.SendPropertyChanged("StateofOrigin");
					this.OnStateofOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalGovt", DbType="VarChar(100)")]
		public string LocalGovt
		{
			get
			{
				return this._LocalGovt;
			}
			set
			{
				if ((this._LocalGovt != value))
				{
					this.OnLocalGovtChanging(value);
					this.SendPropertyChanging();
					this._LocalGovt = value;
					this.SendPropertyChanged("LocalGovt");
					this.OnLocalGovtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="VarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentFullName", DbType="VarChar(500)")]
		public string StudentFullName
		{
			get
			{
				return this._StudentFullName;
			}
			set
			{
				if ((this._StudentFullName != value))
				{
					this.OnStudentFullNameChanging(value);
					this.SendPropertyChanging();
					this._StudentFullName = value;
					this.SendPropertyChanged("StudentFullName");
					this.OnStudentFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttended", DbType="VarChar(500)")]
		public string LastSchoolAttended
		{
			get
			{
				return this._LastSchoolAttended;
			}
			set
			{
				if ((this._LastSchoolAttended != value))
				{
					this.OnLastSchoolAttendedChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttended = value;
					this.SendPropertyChanged("LastSchoolAttended");
					this.OnLastSchoolAttendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttendedYear", DbType="VarChar(50)")]
		public string LastSchoolAttendedYear
		{
			get
			{
				return this._LastSchoolAttendedYear;
			}
			set
			{
				if ((this._LastSchoolAttendedYear != value))
				{
					this.OnLastSchoolAttendedYearChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttendedYear = value;
					this.SendPropertyChanged("LastSchoolAttendedYear");
					this.OnLastSchoolAttendedYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttendedCityCountry", DbType="VarChar(100)")]
		public string LastSchoolAttendedCityCountry
		{
			get
			{
				return this._LastSchoolAttendedCityCountry;
			}
			set
			{
				if ((this._LastSchoolAttendedCityCountry != value))
				{
					this.OnLastSchoolAttendedCityCountryChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttendedCityCountry = value;
					this.SendPropertyChanged("LastSchoolAttendedCityCountry");
					this.OnLastSchoolAttendedCityCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSchoolAttendedClass", DbType="VarChar(50)")]
		public string LastSchoolAttendedClass
		{
			get
			{
				return this._LastSchoolAttendedClass;
			}
			set
			{
				if ((this._LastSchoolAttendedClass != value))
				{
					this.OnLastSchoolAttendedClassChanging(value);
					this.SendPropertyChanging();
					this._LastSchoolAttendedClass = value;
					this.SendPropertyChanged("LastSchoolAttendedClass");
					this.OnLastSchoolAttendedClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationType", DbType="VarChar(50)")]
		public string AccomodationType
		{
			get
			{
				return this._AccomodationType;
			}
			set
			{
				if ((this._AccomodationType != value))
				{
					this.OnAccomodationTypeChanging(value);
					this.SendPropertyChanging();
					this._AccomodationType = value;
					this.SendPropertyChanged("AccomodationType");
					this.OnAccomodationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportFileName", DbType="VarChar(200)")]
		public string PassportFileName
		{
			get
			{
				return this._PassportFileName;
			}
			set
			{
				if ((this._PassportFileName != value))
				{
					this.OnPassportFileNameChanging(value);
					this.SendPropertyChanging();
					this._PassportFileName = value;
					this.SendPropertyChanged("PassportFileName");
					this.OnPassportFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLearningSupport", DbType="Int")]
		public System.Nullable<int> IsLearningSupport
		{
			get
			{
				return this._IsLearningSupport;
			}
			set
			{
				if ((this._IsLearningSupport != value))
				{
					this.OnIsLearningSupportChanging(value);
					this.SendPropertyChanging();
					this._IsLearningSupport = value;
					this.SendPropertyChanged("IsLearningSupport");
					this.OnIsLearningSupportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatus", DbType="Int")]
		public System.Nullable<int> UserStatus
		{
			get
			{
				return this._UserStatus;
			}
			set
			{
				if ((this._UserStatus != value))
				{
					this.OnUserStatusChanging(value);
					this.SendPropertyChanging();
					this._UserStatus = value;
					this.SendPropertyChanged("UserStatus");
					this.OnUserStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCode", DbType="VarChar(6)")]
		public string TeacherCode
		{
			get
			{
				return this._TeacherCode;
			}
			set
			{
				if ((this._TeacherCode != value))
				{
					this.OnTeacherCodeChanging(value);
					this.SendPropertyChanging();
					this._TeacherCode = value;
					this.SendPropertyChanged("TeacherCode");
					this.OnTeacherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicStatus", DbType="VarChar(50)")]
		public string AcademicStatus
		{
			get
			{
				return this._AcademicStatus;
			}
			set
			{
				if ((this._AcademicStatus != value))
				{
					this.OnAcademicStatusChanging(value);
					this.SendPropertyChanging();
					this._AcademicStatus = value;
					this.SendPropertyChanged("AcademicStatus");
					this.OnAcademicStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionId", DbType="Int")]
		public System.Nullable<int> AcademicSessionId
		{
			get
			{
				return this._AcademicSessionId;
			}
			set
			{
				if ((this._AcademicSessionId != value))
				{
					this.OnAcademicSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionId = value;
					this.SendPropertyChanged("AcademicSessionId");
					this.OnAcademicSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentStatus", DbType="Bit")]
		public System.Nullable<bool> StudentStatus
		{
			get
			{
				return this._StudentStatus;
			}
			set
			{
				if ((this._StudentStatus != value))
				{
					this.OnStudentStatusChanging(value);
					this.SendPropertyChanging();
					this._StudentStatus = value;
					this.SendPropertyChanged("StudentStatus");
					this.OnStudentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BatchStudent", Storage="_BatchStudents", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<BatchStudent> BatchStudents
		{
			get
			{
				return this._BatchStudents;
			}
			set
			{
				this._BatchStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FeedBackDetail", Storage="_FeedBackDetails", ThisKey="Id", OtherKey="ParentUserId")]
		public EntitySet<FeedBackDetail> FeedBackDetails
		{
			get
			{
				return this._FeedBackDetails;
			}
			set
			{
				this._FeedBackDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GradeClassTeacher", Storage="_GradeClassTeachers", ThisKey="Id", OtherKey="Teacher")]
		public EntitySet<GradeClassTeacher> GradeClassTeachers
		{
			get
			{
				return this._GradeClassTeachers;
			}
			set
			{
				this._GradeClassTeachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Grouping", Storage="_Groupings", ThisKey="Id", OtherKey="TeacherId")]
		public EntitySet<Grouping> Groupings
		{
			get
			{
				return this._Groupings;
			}
			set
			{
				this._Groupings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupStudent", Storage="_GroupStudents", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<GroupStudent> GroupStudents
		{
			get
			{
				return this._GroupStudents;
			}
			set
			{
				this._GroupStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_HomeRoomTeacher", Storage="_HomeRoomTeachers", ThisKey="Id", OtherKey="TeacherId")]
		public EntitySet<HomeRoomTeacher> HomeRoomTeachers
		{
			get
			{
				return this._HomeRoomTeachers;
			}
			set
			{
				this._HomeRoomTeachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OptionGroupSubject", Storage="_OptionGroupSubjects", ThisKey="Id", OtherKey="TeacherId")]
		public EntitySet<OptionGroupSubject> OptionGroupSubjects
		{
			get
			{
				return this._OptionGroupSubjects;
			}
			set
			{
				this._OptionGroupSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PAAuditTrial", Storage="_PAAuditTrials", ThisKey="Id", OtherKey="UserID")]
		public EntitySet<PAAuditTrial> PAAuditTrials
		{
			get
			{
				return this._PAAuditTrials;
			}
			set
			{
				this._PAAuditTrials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ParentStudentMap", Storage="_ParentStudentMaps", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<ParentStudentMap> ParentStudentMaps
		{
			get
			{
				return this._ParentStudentMaps;
			}
			set
			{
				this._ParentStudentMaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentBill", Storage="_StudentBills", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentBill> StudentBills
		{
			get
			{
				return this._StudentBills;
			}
			set
			{
				this._StudentBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SweepTransactionLog", Storage="_SweepTransactionLogs", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SweepTransactionLog> SweepTransactionLogs
		{
			get
			{
				return this._SweepTransactionLogs;
			}
			set
			{
				this._SweepTransactionLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TeachersProfile", Storage="_TeachersProfiles", ThisKey="Id", OtherKey="Userid")]
		public EntitySet<TeachersProfile> TeachersProfiles
		{
			get
			{
				return this._TeachersProfiles;
			}
			set
			{
				this._TeachersProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionHistory", Storage="_TransactionHistories", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<TransactionHistory> TransactionHistories
		{
			get
			{
				return this._TransactionHistories;
			}
			set
			{
				this._TransactionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransactionLog", Storage="_TransactionLogs", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<TransactionLog> TransactionLogs
		{
			get
			{
				return this._TransactionLogs;
			}
			set
			{
				this._TransactionLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardPosition", Storage="_ReportCardPositions", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this._ReportCardPositions;
			}
			set
			{
				this._ReportCardPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentNameDuplicateException", Storage="_StudentNameDuplicateExceptions", ThisKey="Id", OtherKey="ExistingStudentId")]
		public EntitySet<StudentNameDuplicateException> StudentNameDuplicateExceptions
		{
			get
			{
				return this._StudentNameDuplicateExceptions;
			}
			set
			{
				this._StudentNameDuplicateExceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GradeStudent", Storage="_GradeStudents", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<GradeStudent> GradeStudents
		{
			get
			{
				return this._GradeStudents;
			}
			set
			{
				this._GradeStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Alumni", Storage="_Alumnis", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<Alumni> Alumnis
		{
			get
			{
				return this._Alumnis;
			}
			set
			{
				this._Alumnis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentTemporary1", Storage="_PaymentTemporaries1", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries1
		{
			get
			{
				return this._PaymentTemporaries1;
			}
			set
			{
				this._PaymentTemporaries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentTemporary2", Storage="_PaymentTemporaries2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<PaymentTemporary> PaymentTemporaries2
		{
			get
			{
				return this._PaymentTemporaries2;
			}
			set
			{
				this._PaymentTemporaries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentInvoiceList1", Storage="_PaymentInvoiceLists1", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists1
		{
			get
			{
				return this._PaymentInvoiceLists1;
			}
			set
			{
				this._PaymentInvoiceLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LessonNote", Storage="_LessonNotes", ThisKey="Id", OtherKey="TeacherId")]
		public EntitySet<LessonNote> LessonNotes
		{
			get
			{
				return this._LessonNotes;
			}
			set
			{
				this._LessonNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardData", Storage="_ReportCardDatas", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreBehavioral1", Storage="_StudentScoreBehaviorals1", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals1
		{
			get
			{
				return this._StudentScoreBehaviorals1;
			}
			set
			{
				this._StudentScoreBehaviorals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardComment", Storage="_ReportCardComments", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportCardComment1", Storage="_ReportCardComments1", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<ReportCardComment> ReportCardComments1
		{
			get
			{
				return this._ReportCardComments1;
			}
			set
			{
				this._ReportCardComments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreExtraCurricular1", Storage="_StudentScoreExtraCurriculars1", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars1
		{
			get
			{
				return this._StudentScoreExtraCurriculars1;
			}
			set
			{
				this._StudentScoreExtraCurriculars1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepository1", Storage="_StudentScoreRepositories1", ThisKey="Id", OtherKey="SubjectTeacherId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories1
		{
			get
			{
				return this._StudentScoreRepositories1;
			}
			set
			{
				this._StudentScoreRepositories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepository2", Storage="_StudentScoreRepositories2", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories2
		{
			get
			{
				return this._StudentScoreRepositories2;
			}
			set
			{
				this._StudentScoreRepositories2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScore1", Storage="_StudentScores1", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<StudentScore> StudentScores1
		{
			get
			{
				return this._StudentScores1;
			}
			set
			{
				this._StudentScores1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScore2", Storage="_StudentScores2", ThisKey="Id", OtherKey="SubjectTeacherId")]
		public EntitySet<StudentScore> StudentScores2
		{
			get
			{
				return this._StudentScores2;
			}
			set
			{
				this._StudentScores2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentPermanent", Storage="_PaymentPermanents", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this._PaymentPermanents;
			}
			set
			{
				this._PaymentPermanents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentPermanent1", Storage="_PaymentPermanents1", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<PaymentPermanent> PaymentPermanents1
		{
			get
			{
				return this._PaymentPermanents1;
			}
			set
			{
				this._PaymentPermanents1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTransaction1", Storage="_StudentScoreTransactions1", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions1
		{
			get
			{
				return this._StudentScoreTransactions1;
			}
			set
			{
				this._StudentScoreTransactions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTransaction2", Storage="_StudentScoreTransactions2", ThisKey="Id", OtherKey="SubjectTeacherId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions2
		{
			get
			{
				return this._StudentScoreTransactions2;
			}
			set
			{
				this._StudentScoreTransactions2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepositoryTransaction1", Storage="_StudentScoreRepositoryTransactions1", ThisKey="Id", OtherKey="SubjectTeacherId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions1
		{
			get
			{
				return this._StudentScoreRepositoryTransactions1;
			}
			set
			{
				this._StudentScoreRepositoryTransactions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepositoryTransaction2", Storage="_StudentScoreRepositoryTransactions2", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions2
		{
			get
			{
				return this._StudentScoreRepositoryTransactions2;
			}
			set
			{
				this._StudentScoreRepositoryTransactions2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NewsLetter", Storage="_NewsLetters", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<NewsLetter> NewsLetters
		{
			get
			{
				return this._NewsLetters;
			}
			set
			{
				this._NewsLetters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTemporary1", Storage="_StudentScoreTemporaries1", ThisKey="Id", OtherKey="UploadedById")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries1
		{
			get
			{
				return this._StudentScoreTemporaries1;
			}
			set
			{
				this._StudentScoreTemporaries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTemporary2", Storage="_StudentScoreTemporaries2", ThisKey="Id", OtherKey="SubjectTeacherId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries2
		{
			get
			{
				return this._StudentScoreTemporaries2;
			}
			set
			{
				this._StudentScoreTemporaries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="TeacherId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CbtNotice", Storage="_CbtNotices", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<CbtNotice> CbtNotices
		{
			get
			{
				return this._CbtNotices;
			}
			set
			{
				this._CbtNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_User", Storage="_Status1", ThisKey="Status", OtherKey="Id", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Status = value.Id;
					}
					else
					{
						this._Status = default(Nullable<long>);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FeedBackDetails(FeedBackDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FeedBackDetails(FeedBackDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GradeClassTeachers(GradeClassTeacher entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GradeClassTeachers(GradeClassTeacher entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Groupings(Grouping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Groupings(Grouping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupStudents(GroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupStudents(GroupStudent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_HomeRoomTeachers(HomeRoomTeacher entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_HomeRoomTeachers(HomeRoomTeacher entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_OptionGroupSubjects(OptionGroupSubject entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_OptionGroupSubjects(OptionGroupSubject entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PAAuditTrials(PAAuditTrial entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PAAuditTrials(PAAuditTrial entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ParentStudentMaps(ParentStudentMap entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ParentStudentMaps(ParentStudentMap entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentBills(StudentBill entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentBills(StudentBill entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SweepTransactionLogs(SweepTransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SweepTransactionLogs(SweepTransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TeachersProfiles(TeachersProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TeachersProfiles(TeachersProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TransactionHistories(TransactionHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TransactionHistories(TransactionHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TransactionLogs(TransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TransactionLogs(TransactionLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentNameDuplicateExceptions(StudentNameDuplicateException entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentNameDuplicateExceptions(StudentNameDuplicateException entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GradeStudents(GradeStudent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GradeStudents(GradeStudent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PaymentTemporaries1(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_PaymentTemporaries1(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_PaymentTemporaries2(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_PaymentTemporaries2(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PaymentInvoiceLists1(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_PaymentInvoiceLists1(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreBehaviorals1(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_StudentScoreBehaviorals1(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ReportCardComments1(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ReportCardComments1(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreExtraCurriculars1(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_StudentScoreExtraCurriculars1(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreRepositories1(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_StudentScoreRepositories1(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreRepositories2(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_StudentScoreRepositories2(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScores1(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_StudentScores1(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScores2(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_StudentScores2(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PaymentPermanents1(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_PaymentPermanents1(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreTransactions1(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_StudentScoreTransactions1(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreTransactions2(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_StudentScoreTransactions2(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions1(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions1(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions2(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions2(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StudentScoreTemporaries1(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_StudentScoreTemporaries1(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_StudentScoreTemporaries2(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_StudentScoreTemporaries2(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CbtNotices(CbtNotice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CbtNotices(CbtNotice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _StatusName;
		
		private EntitySet<User> _Users;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public Status()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_User", Storage="_Users", ThisKey="Id", OtherKey="Status")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="Id", OtherKey="Status")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceDiscount")]
	public partial class FinanceDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _FeeId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _Discount;
		
		private System.Nullable<long> _NumChild;
		
		private System.Nullable<long> _Status;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<FinanceDiscount> _FinanceDiscount2;
		
		private EntityRef<FinanceDiscount> _FinanceDiscount4;
		
		private EntityRef<FinanceDiscount> _FinanceDiscount6;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<FinanceDiscount> _FinanceDiscount1;
		
		private EntityRef<FinanceDiscount> _FinanceDiscount3;
		
		private EntityRef<FinanceDiscount> _FinanceDiscount5;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<PaymentFee> _PaymentFee;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<Status> _Status1;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFeeIdChanging(System.Nullable<long> value);
    partial void OnFeeIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnDiscountChanging(System.Nullable<long> value);
    partial void OnDiscountChanged();
    partial void OnNumChildChanging(System.Nullable<long> value);
    partial void OnNumChildChanged();
    partial void OnStatusChanging(System.Nullable<long> value);
    partial void OnStatusChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public FinanceDiscount()
		{
			this._FinanceDiscount2 = default(EntityRef<FinanceDiscount>);
			this._FinanceDiscount4 = default(EntityRef<FinanceDiscount>);
			this._FinanceDiscount6 = default(EntityRef<FinanceDiscount>);
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._FinanceDiscount1 = default(EntityRef<FinanceDiscount>);
			this._FinanceDiscount3 = default(EntityRef<FinanceDiscount>);
			this._FinanceDiscount5 = default(EntityRef<FinanceDiscount>);
			this._Grade = default(EntityRef<Grade>);
			this._PaymentFee = default(EntityRef<PaymentFee>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._Status1 = default(EntityRef<Status>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (((this._FinanceDiscount1.HasLoadedOrAssignedValue || this._FinanceDiscount3.HasLoadedOrAssignedValue) 
								|| this._FinanceDiscount5.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeId", DbType="BigInt")]
		public System.Nullable<long> FeeId
		{
			get
			{
				return this._FeeId;
			}
			set
			{
				if ((this._FeeId != value))
				{
					if (this._PaymentFee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeIdChanging(value);
					this.SendPropertyChanging();
					this._FeeId = value;
					this.SendPropertyChanged("FeeId");
					this.OnFeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="BigInt")]
		public System.Nullable<long> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumChild", DbType="BigInt")]
		public System.Nullable<long> NumChild
		{
			get
			{
				return this._NumChild;
			}
			set
			{
				if ((this._NumChild != value))
				{
					this.OnNumChildChanging(value);
					this.SendPropertyChanging();
					this._NumChild = value;
					this.SendPropertyChanged("NumChild");
					this.OnNumChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="BigInt")]
		public System.Nullable<long> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceDiscount_FinanceDiscount", Storage="_FinanceDiscount2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public FinanceDiscount FinanceDiscount2
		{
			get
			{
				return this._FinanceDiscount2.Entity;
			}
			set
			{
				FinanceDiscount previousValue = this._FinanceDiscount2.Entity;
				if (((previousValue != value) 
							|| (this._FinanceDiscount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceDiscount2.Entity = null;
						previousValue.FinanceDiscount1 = null;
					}
					this._FinanceDiscount2.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscount1 = this;
					}
					this.SendPropertyChanged("FinanceDiscount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceDiscount_FinanceDiscount1", Storage="_FinanceDiscount4", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public FinanceDiscount FinanceDiscount4
		{
			get
			{
				return this._FinanceDiscount4.Entity;
			}
			set
			{
				FinanceDiscount previousValue = this._FinanceDiscount4.Entity;
				if (((previousValue != value) 
							|| (this._FinanceDiscount4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceDiscount4.Entity = null;
						previousValue.FinanceDiscount3 = null;
					}
					this._FinanceDiscount4.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscount3 = this;
					}
					this.SendPropertyChanged("FinanceDiscount4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceDiscount_FinanceDiscount2", Storage="_FinanceDiscount6", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public FinanceDiscount FinanceDiscount6
		{
			get
			{
				return this._FinanceDiscount6.Entity;
			}
			set
			{
				FinanceDiscount previousValue = this._FinanceDiscount6.Entity;
				if (((previousValue != value) 
							|| (this._FinanceDiscount6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceDiscount6.Entity = null;
						previousValue.FinanceDiscount5 = null;
					}
					this._FinanceDiscount6.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscount5 = this;
					}
					this.SendPropertyChanged("FinanceDiscount6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_FinanceDiscount", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_FinanceDiscount", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_FinanceDiscount", Storage="_Class_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceDiscount_FinanceDiscount", Storage="_FinanceDiscount1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public FinanceDiscount FinanceDiscount1
		{
			get
			{
				return this._FinanceDiscount1.Entity;
			}
			set
			{
				FinanceDiscount previousValue = this._FinanceDiscount1.Entity;
				if (((previousValue != value) 
							|| (this._FinanceDiscount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceDiscount1.Entity = null;
						previousValue.FinanceDiscount2 = null;
					}
					this._FinanceDiscount1.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscount2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("FinanceDiscount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceDiscount_FinanceDiscount1", Storage="_FinanceDiscount3", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public FinanceDiscount FinanceDiscount3
		{
			get
			{
				return this._FinanceDiscount3.Entity;
			}
			set
			{
				FinanceDiscount previousValue = this._FinanceDiscount3.Entity;
				if (((previousValue != value) 
							|| (this._FinanceDiscount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceDiscount3.Entity = null;
						previousValue.FinanceDiscount4 = null;
					}
					this._FinanceDiscount3.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscount4 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("FinanceDiscount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceDiscount_FinanceDiscount2", Storage="_FinanceDiscount5", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public FinanceDiscount FinanceDiscount5
		{
			get
			{
				return this._FinanceDiscount5.Entity;
			}
			set
			{
				FinanceDiscount previousValue = this._FinanceDiscount5.Entity;
				if (((previousValue != value) 
							|| (this._FinanceDiscount5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceDiscount5.Entity = null;
						previousValue.FinanceDiscount6 = null;
					}
					this._FinanceDiscount5.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscount6 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("FinanceDiscount5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_FinanceDiscount", Storage="_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFee_FinanceDiscount", Storage="_PaymentFee", ThisKey="FeeId", OtherKey="Id", IsForeignKey=true)]
		public PaymentFee PaymentFee
		{
			get
			{
				return this._PaymentFee.Entity;
			}
			set
			{
				PaymentFee previousValue = this._PaymentFee.Entity;
				if (((previousValue != value) 
							|| (this._PaymentFee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentFee.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._PaymentFee.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._FeeId = value.Id;
					}
					else
					{
						this._FeeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentFee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_FinanceDiscount", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_FinanceDiscount", Storage="_Status1", ThisKey="Status", OtherKey="Id", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._Status = value.Id;
					}
					else
					{
						this._Status = default(Nullable<long>);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_FinanceDiscount", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.FinanceDiscounts.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.FinanceDiscounts.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentPermanent")]
	public partial class PaymentPermanent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _InvoiceCode;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _ParentId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<decimal> _OriginalAmountGenerated;
		
		private System.Nullable<decimal> _AmountGenerated;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<bool> _IsPaymentCompleted;
		
		private System.Nullable<bool> _IsClosed;
		
		private System.Nullable<bool> _IsDiscount;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnOriginalAmountGeneratedChanging(System.Nullable<decimal> value);
    partial void OnOriginalAmountGeneratedChanged();
    partial void OnAmountGeneratedChanging(System.Nullable<decimal> value);
    partial void OnAmountGeneratedChanged();
    partial void OnAmountPaidChanging(System.Nullable<decimal> value);
    partial void OnAmountPaidChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnIsPaymentCompletedChanging(System.Nullable<bool> value);
    partial void OnIsPaymentCompletedChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnIsDiscountChanging(System.Nullable<bool> value);
    partial void OnIsDiscountChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public PaymentPermanent()
		{
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(50)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalAmountGenerated", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OriginalAmountGenerated
		{
			get
			{
				return this._OriginalAmountGenerated;
			}
			set
			{
				if ((this._OriginalAmountGenerated != value))
				{
					this.OnOriginalAmountGeneratedChanging(value);
					this.SendPropertyChanging();
					this._OriginalAmountGenerated = value;
					this.SendPropertyChanged("OriginalAmountGenerated");
					this.OnOriginalAmountGeneratedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountGenerated", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountGenerated
		{
			get
			{
				return this._AmountGenerated;
			}
			set
			{
				if ((this._AmountGenerated != value))
				{
					this.OnAmountGeneratedChanging(value);
					this.SendPropertyChanging();
					this._AmountGenerated = value;
					this.SendPropertyChanged("AmountGenerated");
					this.OnAmountGeneratedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaymentCompleted", DbType="Bit")]
		public System.Nullable<bool> IsPaymentCompleted
		{
			get
			{
				return this._IsPaymentCompleted;
			}
			set
			{
				if ((this._IsPaymentCompleted != value))
				{
					this.OnIsPaymentCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsPaymentCompleted = value;
					this.SendPropertyChanged("IsPaymentCompleted");
					this.OnIsPaymentCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscount", DbType="Bit")]
		public System.Nullable<bool> IsDiscount
		{
			get
			{
				return this._IsDiscount;
			}
			set
			{
				if ((this._IsDiscount != value))
				{
					this.OnIsDiscountChanging(value);
					this.SendPropertyChanging();
					this._IsDiscount = value;
					this.SendPropertyChanged("IsDiscount");
					this.OnIsDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentPermanent_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="PermanentPaymentId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_PaymentPermanent", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.PaymentPermanents.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_PaymentPermanent", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.PaymentPermanents.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_PaymentPermanent", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.PaymentPermanents.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PaymentPermanent", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.PaymentPermanents.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_PaymentPermanent", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.PaymentPermanents.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentPermanent", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PaymentPermanents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentPermanent1", Storage="_User1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.PaymentPermanents1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents1.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentPermanent", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PaymentPermanents.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PaymentPermanents.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.PaymentPermanent = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.PaymentPermanent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuSub")]
	public partial class MenuSub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _SubMenuName;
		
		private EntitySet<MenuRole> _MenuRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSubMenuNameChanging(string value);
    partial void OnSubMenuNameChanged();
    #endregion
		
		public MenuSub()
		{
			this._MenuRoles = new EntitySet<MenuRole>(new Action<MenuRole>(this.attach_MenuRoles), new Action<MenuRole>(this.detach_MenuRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuName", DbType="VarChar(255)")]
		public string SubMenuName
		{
			get
			{
				return this._SubMenuName;
			}
			set
			{
				if ((this._SubMenuName != value))
				{
					this.OnSubMenuNameChanging(value);
					this.SendPropertyChanging();
					this._SubMenuName = value;
					this.SendPropertyChanged("SubMenuName");
					this.OnSubMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuSub_MenuRole", Storage="_MenuRoles", ThisKey="ID", OtherKey="SubMenuID")]
		public EntitySet<MenuRole> MenuRoles
		{
			get
			{
				return this._MenuRoles;
			}
			set
			{
				this._MenuRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.MenuSub = this;
		}
		
		private void detach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.MenuSub = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _MenuName;
		
		private string _Url;
		
		private string _Icon;
		
		private EntitySet<MenuRole> _MenuRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    #endregion
		
		public Menu()
		{
			this._MenuRoles = new EntitySet<MenuRole>(new Action<MenuRole>(this.attach_MenuRoles), new Action<MenuRole>(this.detach_MenuRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="VarChar(MAX)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuRole", Storage="_MenuRoles", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<MenuRole> MenuRoles
		{
			get
			{
				return this._MenuRoles;
			}
			set
			{
				this._MenuRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuRole")]
	public partial class MenuRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RoleID;
		
		private System.Nullable<long> _SubMenuID;
		
		private System.Nullable<long> _MenuID;
		
		private System.Nullable<long> _SchoolID;
		
		private System.Nullable<long> _CampusID;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<MenuSub> _MenuSub;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(System.Nullable<long> value);
    partial void OnRoleIDChanged();
    partial void OnSubMenuIDChanging(System.Nullable<long> value);
    partial void OnSubMenuIDChanged();
    partial void OnMenuIDChanging(System.Nullable<long> value);
    partial void OnMenuIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<long> value);
    partial void OnSchoolIDChanged();
    partial void OnCampusIDChanging(System.Nullable<long> value);
    partial void OnCampusIDChanged();
    #endregion
		
		public MenuRole()
		{
			this._Menu = default(EntityRef<Menu>);
			this._MenuSub = default(EntityRef<MenuSub>);
			this._Role = default(EntityRef<Role>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="BigInt")]
		public System.Nullable<long> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuID", DbType="BigInt")]
		public System.Nullable<long> SubMenuID
		{
			get
			{
				return this._SubMenuID;
			}
			set
			{
				if ((this._SubMenuID != value))
				{
					if (this._MenuSub.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubMenuIDChanging(value);
					this.SendPropertyChanging();
					this._SubMenuID = value;
					this.SendPropertyChanged("SubMenuID");
					this.OnSubMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="BigInt")]
		public System.Nullable<long> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusID", DbType="BigInt")]
		public System.Nullable<long> CampusID
		{
			get
			{
				return this._CampusID;
			}
			set
			{
				if ((this._CampusID != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIDChanging(value);
					this.SendPropertyChanging();
					this._CampusID = value;
					this.SendPropertyChanged("CampusID");
					this.OnCampusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuRole", Storage="_Menu", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.MenuRoles.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.MenuRoles.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuSub_MenuRole", Storage="_MenuSub", ThisKey="SubMenuID", OtherKey="ID", IsForeignKey=true)]
		public MenuSub MenuSub
		{
			get
			{
				return this._MenuSub.Entity;
			}
			set
			{
				MenuSub previousValue = this._MenuSub.Entity;
				if (((previousValue != value) 
							|| (this._MenuSub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MenuSub.Entity = null;
						previousValue.MenuRoles.Remove(this);
					}
					this._MenuSub.Entity = value;
					if ((value != null))
					{
						value.MenuRoles.Add(this);
						this._SubMenuID = value.ID;
					}
					else
					{
						this._SubMenuID = default(Nullable<long>);
					}
					this.SendPropertyChanged("MenuSub");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_MenuRole", Storage="_Role", ThisKey="RoleID", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.MenuRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.MenuRoles.Add(this);
						this._RoleID = value.Id;
					}
					else
					{
						this._RoleID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_MenuRole", Storage="_SchoolCampus", ThisKey="CampusID", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.MenuRoles.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.MenuRoles.Add(this);
						this._CampusID = value.Id;
					}
					else
					{
						this._CampusID = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_MenuRole", Storage="_School", ThisKey="SchoolID", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.MenuRoles.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.MenuRoles.Add(this);
						this._SchoolID = value.Id;
					}
					else
					{
						this._SchoolID = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreTransaction")]
	public partial class StudentScoreTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _ExamScoreObtainable;
		
		private System.Nullable<decimal> _ExamScore;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<decimal> _PercentageScore;
		
		private System.Nullable<int> _ExamPercentage;
		
		private System.Nullable<decimal> _ExamPercentageScore;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private long _SubjectTeacherId;
		
		private System.Nullable<long> _UploadedById;
		
		private long _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _AcademicSessionID;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<long> _BroadSheetTemplateID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Description;
		
		private string _Remark;
		
		private System.Nullable<int> _Code;
		
		private string _StatusCode;
		
		private System.Nullable<bool> _IsCancelled;
		
		private System.Nullable<System.DateTime> _IsCancelledDate;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<ScoreCategoryConfiguration> _ScoreCategoryConfiguration;
		
		private EntityRef<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfiguration;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnExamScoreObtainableChanging(System.Nullable<int> value);
    partial void OnExamScoreObtainableChanged();
    partial void OnExamScoreChanging(System.Nullable<decimal> value);
    partial void OnExamScoreChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnPercentageScoreChanged();
    partial void OnExamPercentageChanging(System.Nullable<int> value);
    partial void OnExamPercentageChanged();
    partial void OnExamPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnExamPercentageScoreChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnSubjectTeacherIdChanging(long value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAcademicSessionIDChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIDChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnBroadSheetTemplateIDChanging(System.Nullable<long> value);
    partial void OnBroadSheetTemplateIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnStatusCodeChanging(string value);
    partial void OnStatusCodeChanged();
    partial void OnIsCancelledChanging(System.Nullable<bool> value);
    partial void OnIsCancelledChanged();
    partial void OnIsCancelledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIsCancelledDateChanged();
    #endregion
		
		public StudentScoreTransaction()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._ScoreCategoryConfiguration = default(EntityRef<ScoreCategoryConfiguration>);
			this._ScoreSubCategoryConfiguration = default(EntityRef<ScoreSubCategoryConfiguration>);
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScoreObtainable", DbType="Int")]
		public System.Nullable<int> ExamScoreObtainable
		{
			get
			{
				return this._ExamScoreObtainable;
			}
			set
			{
				if ((this._ExamScoreObtainable != value))
				{
					this.OnExamScoreObtainableChanging(value);
					this.SendPropertyChanging();
					this._ExamScoreObtainable = value;
					this.SendPropertyChanged("ExamScoreObtainable");
					this.OnExamScoreObtainableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExamScore
		{
			get
			{
				return this._ExamScore;
			}
			set
			{
				if ((this._ExamScore != value))
				{
					this.OnExamScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamScore = value;
					this.SendPropertyChanged("ExamScore");
					this.OnExamScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PercentageScore
		{
			get
			{
				return this._PercentageScore;
			}
			set
			{
				if ((this._PercentageScore != value))
				{
					this.OnPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._PercentageScore = value;
					this.SendPropertyChanged("PercentageScore");
					this.OnPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPercentage", DbType="Int")]
		public System.Nullable<int> ExamPercentage
		{
			get
			{
				return this._ExamPercentage;
			}
			set
			{
				if ((this._ExamPercentage != value))
				{
					this.OnExamPercentageChanging(value);
					this.SendPropertyChanging();
					this._ExamPercentage = value;
					this.SendPropertyChanged("ExamPercentage");
					this.OnExamPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExamPercentageScore
		{
			get
			{
				return this._ExamPercentageScore;
			}
			set
			{
				if ((this._ExamPercentageScore != value))
				{
					this.OnExamPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamPercentageScore = value;
					this.SendPropertyChanged("ExamPercentageScore");
					this.OnExamPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					if (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt NOT NULL")]
		public long SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionID", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionID
		{
			get
			{
				return this._AcademicSessionID;
			}
			set
			{
				if ((this._AcademicSessionID != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionIDChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionID = value;
					this.SendPropertyChanged("AcademicSessionID");
					this.OnAcademicSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(500)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BroadSheetTemplateID", DbType="BigInt")]
		public System.Nullable<long> BroadSheetTemplateID
		{
			get
			{
				return this._BroadSheetTemplateID;
			}
			set
			{
				if ((this._BroadSheetTemplateID != value))
				{
					this.OnBroadSheetTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._BroadSheetTemplateID = value;
					this.SendPropertyChanged("BroadSheetTemplateID");
					this.OnBroadSheetTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCode", DbType="VarChar(MAX)")]
		public string StatusCode
		{
			get
			{
				return this._StatusCode;
			}
			set
			{
				if ((this._StatusCode != value))
				{
					this.OnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._StatusCode = value;
					this.SendPropertyChanged("StatusCode");
					this.OnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit")]
		public System.Nullable<bool> IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IsCancelledDate
		{
			get
			{
				return this._IsCancelledDate;
			}
			set
			{
				if ((this._IsCancelledDate != value))
				{
					this.OnIsCancelledDateChanging(value);
					this.SendPropertyChanging();
					this._IsCancelledDate = value;
					this.SendPropertyChanged("IsCancelledDate");
					this.OnIsCancelledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreTransaction", Storage="_AcademicSessionName", ThisKey="AcademicSessionID", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._AcademicSessionID = value.ID;
					}
					else
					{
						this._AcademicSessionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreTransaction", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreTransaction", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreTransaction", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreTransaction", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreTransaction", Storage="_ScoreCategoryConfiguration", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreCategoryConfiguration ScoreCategoryConfiguration
		{
			get
			{
				return this._ScoreCategoryConfiguration.Entity;
			}
			set
			{
				ScoreCategoryConfiguration previousValue = this._ScoreCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreCategoryConfiguration.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._ScoreCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreTransaction", Storage="_ScoreSubCategoryConfiguration", ThisKey="SubCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreSubCategoryConfiguration ScoreSubCategoryConfiguration
		{
			get
			{
				return this._ScoreSubCategoryConfiguration.Entity;
			}
			set
			{
				ScoreSubCategoryConfiguration previousValue = this._ScoreSubCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreSubCategoryConfiguration.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._ScoreSubCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._SubCategoryId = value.Id;
					}
					else
					{
						this._SubCategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreSubCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreTransaction", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(long);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreTransaction", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreTransaction", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTransaction", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTransaction1", Storage="_User1", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.StudentScoreTransactions1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions1.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTransaction2", Storage="_User2", ThisKey="SubjectTeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.StudentScoreTransactions2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions2.Add(this);
						this._SubjectTeacherId = value.Id;
					}
					else
					{
						this._SubjectTeacherId = default(long);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreTransaction", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScoreTransactions.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTransactions.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreRepositoryTransaction")]
	public partial class StudentScoreRepositoryTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNo;
		
		private System.Nullable<int> _MarkObtainable;
		
		private System.Nullable<decimal> _MarkObtained;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<decimal> _PercentageScore;
		
		private System.Nullable<int> _CAPercentage;
		
		private System.Nullable<decimal> _CAPercentageScore;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private System.Nullable<long> _SubjectTeacherId;
		
		private System.Nullable<long> _UploadedById;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<long> _TestAssigenmentBroadSheetTemplateID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Description;
		
		private string _Remark;
		
		private System.Nullable<int> _Code;
		
		private string _StatusCode;
		
		private System.Nullable<bool> _IsCancelled;
		
		private System.Nullable<System.DateTime> _IsCancelledDate;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssigenmentBroadSheetTemplate> _TestAssigenmentBroadSheetTemplate;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnMarkObtainableChanging(System.Nullable<int> value);
    partial void OnMarkObtainableChanged();
    partial void OnMarkObtainedChanging(System.Nullable<decimal> value);
    partial void OnMarkObtainedChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnPercentageScoreChanged();
    partial void OnCAPercentageChanging(System.Nullable<int> value);
    partial void OnCAPercentageChanged();
    partial void OnCAPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnCAPercentageScoreChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnSubjectTeacherIdChanging(System.Nullable<long> value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnTestAssigenmentBroadSheetTemplateIDChanging(System.Nullable<long> value);
    partial void OnTestAssigenmentBroadSheetTemplateIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnStatusCodeChanging(string value);
    partial void OnStatusCodeChanged();
    partial void OnIsCancelledChanging(System.Nullable<bool> value);
    partial void OnIsCancelledChanged();
    partial void OnIsCancelledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIsCancelledDateChanged();
    #endregion
		
		public StudentScoreRepositoryTransaction()
		{
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssigenmentBroadSheetTemplate = default(EntityRef<TestAssigenmentBroadSheetTemplate>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="VarChar(100)")]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtainable", DbType="Int")]
		public System.Nullable<int> MarkObtainable
		{
			get
			{
				return this._MarkObtainable;
			}
			set
			{
				if ((this._MarkObtainable != value))
				{
					this.OnMarkObtainableChanging(value);
					this.SendPropertyChanging();
					this._MarkObtainable = value;
					this.SendPropertyChanged("MarkObtainable");
					this.OnMarkObtainableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkObtained", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MarkObtained
		{
			get
			{
				return this._MarkObtained;
			}
			set
			{
				if ((this._MarkObtained != value))
				{
					this.OnMarkObtainedChanging(value);
					this.SendPropertyChanging();
					this._MarkObtained = value;
					this.SendPropertyChanged("MarkObtained");
					this.OnMarkObtainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PercentageScore
		{
			get
			{
				return this._PercentageScore;
			}
			set
			{
				if ((this._PercentageScore != value))
				{
					this.OnPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._PercentageScore = value;
					this.SendPropertyChanged("PercentageScore");
					this.OnPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentage", DbType="Int")]
		public System.Nullable<int> CAPercentage
		{
			get
			{
				return this._CAPercentage;
			}
			set
			{
				if ((this._CAPercentage != value))
				{
					this.OnCAPercentageChanging(value);
					this.SendPropertyChanging();
					this._CAPercentage = value;
					this.SendPropertyChanged("CAPercentage");
					this.OnCAPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CAPercentageScore
		{
			get
			{
				return this._CAPercentageScore;
			}
			set
			{
				if ((this._CAPercentageScore != value))
				{
					this.OnCAPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._CAPercentageScore = value;
					this.SendPropertyChanged("CAPercentageScore");
					this.OnCAPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt")]
		public System.Nullable<long> SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestAssigenmentBroadSheetTemplateID", DbType="BigInt")]
		public System.Nullable<long> TestAssigenmentBroadSheetTemplateID
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplateID;
			}
			set
			{
				if ((this._TestAssigenmentBroadSheetTemplateID != value))
				{
					if (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestAssigenmentBroadSheetTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TestAssigenmentBroadSheetTemplateID = value;
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplateID");
					this.OnTestAssigenmentBroadSheetTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCode", DbType="VarChar(50)")]
		public string StatusCode
		{
			get
			{
				return this._StatusCode;
			}
			set
			{
				if ((this._StatusCode != value))
				{
					this.OnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._StatusCode = value;
					this.SendPropertyChanged("StatusCode");
					this.OnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit")]
		public System.Nullable<bool> IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IsCancelledDate
		{
			get
			{
				return this._IsCancelledDate;
			}
			set
			{
				if ((this._IsCancelledDate != value))
				{
					this.OnIsCancelledDateChanging(value);
					this.SendPropertyChanging();
					this._IsCancelledDate = value;
					this.SendPropertyChanged("IsCancelledDate");
					this.OnIsCancelledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreRepositoryTransaction", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreRepositoryTransaction", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreRepositoryTransaction", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreRepositoryTransaction", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssigenmentBroadSheetTemplate_StudentScoreRepositoryTransaction", Storage="_TestAssigenmentBroadSheetTemplate", ThisKey="TestAssigenmentBroadSheetTemplateID", OtherKey="ID", IsForeignKey=true)]
		public TestAssigenmentBroadSheetTemplate TestAssigenmentBroadSheetTemplate
		{
			get
			{
				return this._TestAssigenmentBroadSheetTemplate.Entity;
			}
			set
			{
				TestAssigenmentBroadSheetTemplate previousValue = this._TestAssigenmentBroadSheetTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssigenmentBroadSheetTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssigenmentBroadSheetTemplate.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._TestAssigenmentBroadSheetTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._TestAssigenmentBroadSheetTemplateID = value.ID;
					}
					else
					{
						this._TestAssigenmentBroadSheetTemplateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssigenmentBroadSheetTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreRepositoryTransaction", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepositoryTransaction", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepositoryTransaction1", Storage="_User1", ThisKey="SubjectTeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.StudentScoreRepositoryTransactions1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions1.Add(this);
						this._SubjectTeacherId = value.Id;
					}
					else
					{
						this._SubjectTeacherId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreRepositoryTransaction2", Storage="_User2", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.StudentScoreRepositoryTransactions2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions2.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreRepositoryTransaction", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreRepositoryTransaction", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreRepositoryTransaction", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScoreRepositoryTransactions.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScoreRepositoryTransactions.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RpComments")]
	public partial class RpComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _UploadedById;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    #endregion
		
		public RpComment()
		{
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="Date")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_RpComment", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.RpComments.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.RpComments.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schools")]
	public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<int> _SchoolStatus;
		
		private string _Address;
		
		private string _Logo;
		
		private string _Signature;
		
		private string _Url;
		
		private System.Nullable<int> _CurriculumId;
		
		private int _SchoolTypeId;
		
		private EntitySet<AdmissionApplicationList> _AdmissionApplicationLists;
		
		private EntitySet<AdmissionConfiguration> _AdmissionConfigurations;
		
		private EntitySet<AdmissionInterviewRequirement> _AdmissionInterviewRequirements;
		
		private EntitySet<AdmissionPayment> _AdmissionPayments;
		
		private EntitySet<AdmissionTestRequirement> _AdmissionTestRequirements;
		
		private EntitySet<BatchStudent> _BatchStudents;
		
		private EntitySet<Fee> _Fees;
		
		private EntitySet<FeedBackDetail> _FeedBackDetails;
		
		private EntitySet<FeesConfig> _FeesConfigs;
		
		private EntitySet<PAAuditTrial> _PAAuditTrials;
		
		private EntitySet<SchoolAccount> _SchoolAccounts;
		
		private EntitySet<ScoreConfiguration> _ScoreConfigurations;
		
		private EntitySet<ScoreGradeConfiguration> _ScoreGradeConfigurations;
		
		private EntitySet<SubscriptionPaymentDetail> _SubscriptionPaymentDetails;
		
		private EntitySet<TeachersProfile> _TeachersProfiles;
		
		private EntitySet<ReportCardPosition> _ReportCardPositions;
		
		private EntitySet<PaymentFeeTemplateList> _PaymentFeeTemplateLists;
		
		private EntitySet<PaymentFeeType> _PaymentFeeTypes;
		
		private EntitySet<PaymentFee> _PaymentFees;
		
		private EntitySet<PaymentFeeTemplate> _PaymentFeeTemplates;
		
		private EntitySet<PaymentTemporary> _PaymentTemporaries;
		
		private EntitySet<SubjectDepartment> _SubjectDepartments;
		
		private EntitySet<PaymentInvoiceList> _PaymentInvoiceLists;
		
		private EntitySet<StudentScoreCA> _StudentScoreCAs;
		
		private EntitySet<LessonNote> _LessonNotes;
		
		private EntitySet<ReportCardData> _ReportCardDatas;
		
		private EntitySet<StudentScoreBehavioral> _StudentScoreBehaviorals;
		
		private EntitySet<ScoreCategoryConfiguration> _ScoreCategoryConfigurations;
		
		private EntitySet<ReportCardComment> _ReportCardComments;
		
		private EntitySet<StudentScoreExtraCurricular> _StudentScoreExtraCurriculars;
		
		private EntitySet<StudentScoreRepository> _StudentScoreRepositories;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<FinanceDiscount> _FinanceDiscounts;
		
		private EntitySet<PaymentPermanent> _PaymentPermanents;
		
		private EntitySet<MenuRole> _MenuRoles;
		
		private EntitySet<StudentScoreTransaction> _StudentScoreTransactions;
		
		private EntitySet<StudentScoreRepositoryTransaction> _StudentScoreRepositoryTransactions;
		
		private EntitySet<RpComment> _RpComments;
		
		private EntitySet<ReportCardNextTermBegin> _ReportCardNextTermBegins;
		
		private EntitySet<NewsLetter> _NewsLetters;
		
		private EntitySet<StudentScoreTemporary> _StudentScoreTemporaries;
		
		private EntitySet<ReportCardPrintConfig> _ReportCardPrintConfigs;
		
		private EntitySet<ExternalResourceLink> _ExternalResourceLinks;
		
		private EntitySet<ExternalResourceDocument> _ExternalResourceDocuments;
		
		private EntitySet<ExternalResourceMultimedia> _ExternalResourceMultimedias;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
		private EntitySet<CbtNotice> _CbtNotices;
		
		private EntityRef<Curriculum> _Curriculum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSchoolStatusChanging(System.Nullable<int> value);
    partial void OnSchoolStatusChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCurriculumIdChanging(System.Nullable<int> value);
    partial void OnCurriculumIdChanged();
    partial void OnSchoolTypeIdChanging(int value);
    partial void OnSchoolTypeIdChanged();
    #endregion
		
		public School()
		{
			this._AdmissionApplicationLists = new EntitySet<AdmissionApplicationList>(new Action<AdmissionApplicationList>(this.attach_AdmissionApplicationLists), new Action<AdmissionApplicationList>(this.detach_AdmissionApplicationLists));
			this._AdmissionConfigurations = new EntitySet<AdmissionConfiguration>(new Action<AdmissionConfiguration>(this.attach_AdmissionConfigurations), new Action<AdmissionConfiguration>(this.detach_AdmissionConfigurations));
			this._AdmissionInterviewRequirements = new EntitySet<AdmissionInterviewRequirement>(new Action<AdmissionInterviewRequirement>(this.attach_AdmissionInterviewRequirements), new Action<AdmissionInterviewRequirement>(this.detach_AdmissionInterviewRequirements));
			this._AdmissionPayments = new EntitySet<AdmissionPayment>(new Action<AdmissionPayment>(this.attach_AdmissionPayments), new Action<AdmissionPayment>(this.detach_AdmissionPayments));
			this._AdmissionTestRequirements = new EntitySet<AdmissionTestRequirement>(new Action<AdmissionTestRequirement>(this.attach_AdmissionTestRequirements), new Action<AdmissionTestRequirement>(this.detach_AdmissionTestRequirements));
			this._BatchStudents = new EntitySet<BatchStudent>(new Action<BatchStudent>(this.attach_BatchStudents), new Action<BatchStudent>(this.detach_BatchStudents));
			this._Fees = new EntitySet<Fee>(new Action<Fee>(this.attach_Fees), new Action<Fee>(this.detach_Fees));
			this._FeedBackDetails = new EntitySet<FeedBackDetail>(new Action<FeedBackDetail>(this.attach_FeedBackDetails), new Action<FeedBackDetail>(this.detach_FeedBackDetails));
			this._FeesConfigs = new EntitySet<FeesConfig>(new Action<FeesConfig>(this.attach_FeesConfigs), new Action<FeesConfig>(this.detach_FeesConfigs));
			this._PAAuditTrials = new EntitySet<PAAuditTrial>(new Action<PAAuditTrial>(this.attach_PAAuditTrials), new Action<PAAuditTrial>(this.detach_PAAuditTrials));
			this._SchoolAccounts = new EntitySet<SchoolAccount>(new Action<SchoolAccount>(this.attach_SchoolAccounts), new Action<SchoolAccount>(this.detach_SchoolAccounts));
			this._ScoreConfigurations = new EntitySet<ScoreConfiguration>(new Action<ScoreConfiguration>(this.attach_ScoreConfigurations), new Action<ScoreConfiguration>(this.detach_ScoreConfigurations));
			this._ScoreGradeConfigurations = new EntitySet<ScoreGradeConfiguration>(new Action<ScoreGradeConfiguration>(this.attach_ScoreGradeConfigurations), new Action<ScoreGradeConfiguration>(this.detach_ScoreGradeConfigurations));
			this._SubscriptionPaymentDetails = new EntitySet<SubscriptionPaymentDetail>(new Action<SubscriptionPaymentDetail>(this.attach_SubscriptionPaymentDetails), new Action<SubscriptionPaymentDetail>(this.detach_SubscriptionPaymentDetails));
			this._TeachersProfiles = new EntitySet<TeachersProfile>(new Action<TeachersProfile>(this.attach_TeachersProfiles), new Action<TeachersProfile>(this.detach_TeachersProfiles));
			this._ReportCardPositions = new EntitySet<ReportCardPosition>(new Action<ReportCardPosition>(this.attach_ReportCardPositions), new Action<ReportCardPosition>(this.detach_ReportCardPositions));
			this._PaymentFeeTemplateLists = new EntitySet<PaymentFeeTemplateList>(new Action<PaymentFeeTemplateList>(this.attach_PaymentFeeTemplateLists), new Action<PaymentFeeTemplateList>(this.detach_PaymentFeeTemplateLists));
			this._PaymentFeeTypes = new EntitySet<PaymentFeeType>(new Action<PaymentFeeType>(this.attach_PaymentFeeTypes), new Action<PaymentFeeType>(this.detach_PaymentFeeTypes));
			this._PaymentFees = new EntitySet<PaymentFee>(new Action<PaymentFee>(this.attach_PaymentFees), new Action<PaymentFee>(this.detach_PaymentFees));
			this._PaymentFeeTemplates = new EntitySet<PaymentFeeTemplate>(new Action<PaymentFeeTemplate>(this.attach_PaymentFeeTemplates), new Action<PaymentFeeTemplate>(this.detach_PaymentFeeTemplates));
			this._PaymentTemporaries = new EntitySet<PaymentTemporary>(new Action<PaymentTemporary>(this.attach_PaymentTemporaries), new Action<PaymentTemporary>(this.detach_PaymentTemporaries));
			this._SubjectDepartments = new EntitySet<SubjectDepartment>(new Action<SubjectDepartment>(this.attach_SubjectDepartments), new Action<SubjectDepartment>(this.detach_SubjectDepartments));
			this._PaymentInvoiceLists = new EntitySet<PaymentInvoiceList>(new Action<PaymentInvoiceList>(this.attach_PaymentInvoiceLists), new Action<PaymentInvoiceList>(this.detach_PaymentInvoiceLists));
			this._StudentScoreCAs = new EntitySet<StudentScoreCA>(new Action<StudentScoreCA>(this.attach_StudentScoreCAs), new Action<StudentScoreCA>(this.detach_StudentScoreCAs));
			this._LessonNotes = new EntitySet<LessonNote>(new Action<LessonNote>(this.attach_LessonNotes), new Action<LessonNote>(this.detach_LessonNotes));
			this._ReportCardDatas = new EntitySet<ReportCardData>(new Action<ReportCardData>(this.attach_ReportCardDatas), new Action<ReportCardData>(this.detach_ReportCardDatas));
			this._StudentScoreBehaviorals = new EntitySet<StudentScoreBehavioral>(new Action<StudentScoreBehavioral>(this.attach_StudentScoreBehaviorals), new Action<StudentScoreBehavioral>(this.detach_StudentScoreBehaviorals));
			this._ScoreCategoryConfigurations = new EntitySet<ScoreCategoryConfiguration>(new Action<ScoreCategoryConfiguration>(this.attach_ScoreCategoryConfigurations), new Action<ScoreCategoryConfiguration>(this.detach_ScoreCategoryConfigurations));
			this._ReportCardComments = new EntitySet<ReportCardComment>(new Action<ReportCardComment>(this.attach_ReportCardComments), new Action<ReportCardComment>(this.detach_ReportCardComments));
			this._StudentScoreExtraCurriculars = new EntitySet<StudentScoreExtraCurricular>(new Action<StudentScoreExtraCurricular>(this.attach_StudentScoreExtraCurriculars), new Action<StudentScoreExtraCurricular>(this.detach_StudentScoreExtraCurriculars));
			this._StudentScoreRepositories = new EntitySet<StudentScoreRepository>(new Action<StudentScoreRepository>(this.attach_StudentScoreRepositories), new Action<StudentScoreRepository>(this.detach_StudentScoreRepositories));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._FinanceDiscounts = new EntitySet<FinanceDiscount>(new Action<FinanceDiscount>(this.attach_FinanceDiscounts), new Action<FinanceDiscount>(this.detach_FinanceDiscounts));
			this._PaymentPermanents = new EntitySet<PaymentPermanent>(new Action<PaymentPermanent>(this.attach_PaymentPermanents), new Action<PaymentPermanent>(this.detach_PaymentPermanents));
			this._MenuRoles = new EntitySet<MenuRole>(new Action<MenuRole>(this.attach_MenuRoles), new Action<MenuRole>(this.detach_MenuRoles));
			this._StudentScoreTransactions = new EntitySet<StudentScoreTransaction>(new Action<StudentScoreTransaction>(this.attach_StudentScoreTransactions), new Action<StudentScoreTransaction>(this.detach_StudentScoreTransactions));
			this._StudentScoreRepositoryTransactions = new EntitySet<StudentScoreRepositoryTransaction>(new Action<StudentScoreRepositoryTransaction>(this.attach_StudentScoreRepositoryTransactions), new Action<StudentScoreRepositoryTransaction>(this.detach_StudentScoreRepositoryTransactions));
			this._RpComments = new EntitySet<RpComment>(new Action<RpComment>(this.attach_RpComments), new Action<RpComment>(this.detach_RpComments));
			this._ReportCardNextTermBegins = new EntitySet<ReportCardNextTermBegin>(new Action<ReportCardNextTermBegin>(this.attach_ReportCardNextTermBegins), new Action<ReportCardNextTermBegin>(this.detach_ReportCardNextTermBegins));
			this._NewsLetters = new EntitySet<NewsLetter>(new Action<NewsLetter>(this.attach_NewsLetters), new Action<NewsLetter>(this.detach_NewsLetters));
			this._StudentScoreTemporaries = new EntitySet<StudentScoreTemporary>(new Action<StudentScoreTemporary>(this.attach_StudentScoreTemporaries), new Action<StudentScoreTemporary>(this.detach_StudentScoreTemporaries));
			this._ReportCardPrintConfigs = new EntitySet<ReportCardPrintConfig>(new Action<ReportCardPrintConfig>(this.attach_ReportCardPrintConfigs), new Action<ReportCardPrintConfig>(this.detach_ReportCardPrintConfigs));
			this._ExternalResourceLinks = new EntitySet<ExternalResourceLink>(new Action<ExternalResourceLink>(this.attach_ExternalResourceLinks), new Action<ExternalResourceLink>(this.detach_ExternalResourceLinks));
			this._ExternalResourceDocuments = new EntitySet<ExternalResourceDocument>(new Action<ExternalResourceDocument>(this.attach_ExternalResourceDocuments), new Action<ExternalResourceDocument>(this.detach_ExternalResourceDocuments));
			this._ExternalResourceMultimedias = new EntitySet<ExternalResourceMultimedia>(new Action<ExternalResourceMultimedia>(this.attach_ExternalResourceMultimedias), new Action<ExternalResourceMultimedia>(this.detach_ExternalResourceMultimedias));
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			this._CbtNotices = new EntitySet<CbtNotice>(new Action<CbtNotice>(this.attach_CbtNotices), new Action<CbtNotice>(this.detach_CbtNotices));
			this._Curriculum = default(EntityRef<Curriculum>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolStatus", DbType="Int")]
		public System.Nullable<int> SchoolStatus
		{
			get
			{
				return this._SchoolStatus;
			}
			set
			{
				if ((this._SchoolStatus != value))
				{
					this.OnSchoolStatusChanging(value);
					this.SendPropertyChanging();
					this._SchoolStatus = value;
					this.SendPropertyChanged("SchoolStatus");
					this.OnSchoolStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(250)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="VarChar(250)")]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(100)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurriculumId", DbType="Int")]
		public System.Nullable<int> CurriculumId
		{
			get
			{
				return this._CurriculumId;
			}
			set
			{
				if ((this._CurriculumId != value))
				{
					if (this._Curriculum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurriculumIdChanging(value);
					this.SendPropertyChanging();
					this._CurriculumId = value;
					this.SendPropertyChanged("CurriculumId");
					this.OnCurriculumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolTypeId", DbType="Int NOT NULL")]
		public int SchoolTypeId
		{
			get
			{
				return this._SchoolTypeId;
			}
			set
			{
				if ((this._SchoolTypeId != value))
				{
					this.OnSchoolTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolTypeId = value;
					this.SendPropertyChanged("SchoolTypeId");
					this.OnSchoolTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionApplicationList", Storage="_AdmissionApplicationLists", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<AdmissionApplicationList> AdmissionApplicationLists
		{
			get
			{
				return this._AdmissionApplicationLists;
			}
			set
			{
				this._AdmissionApplicationLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionConfiguration", Storage="_AdmissionConfigurations", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<AdmissionConfiguration> AdmissionConfigurations
		{
			get
			{
				return this._AdmissionConfigurations;
			}
			set
			{
				this._AdmissionConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionInterviewRequirement", Storage="_AdmissionInterviewRequirements", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<AdmissionInterviewRequirement> AdmissionInterviewRequirements
		{
			get
			{
				return this._AdmissionInterviewRequirements;
			}
			set
			{
				this._AdmissionInterviewRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionPayment", Storage="_AdmissionPayments", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<AdmissionPayment> AdmissionPayments
		{
			get
			{
				return this._AdmissionPayments;
			}
			set
			{
				this._AdmissionPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_AdmissionTestRequirement", Storage="_AdmissionTestRequirements", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<AdmissionTestRequirement> AdmissionTestRequirements
		{
			get
			{
				return this._AdmissionTestRequirements;
			}
			set
			{
				this._AdmissionTestRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_BatchStudent", Storage="_BatchStudents", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<BatchStudent> BatchStudents
		{
			get
			{
				return this._BatchStudents;
			}
			set
			{
				this._BatchStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Fee", Storage="_Fees", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<Fee> Fees
		{
			get
			{
				return this._Fees;
			}
			set
			{
				this._Fees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_FeedBackDetail", Storage="_FeedBackDetails", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<FeedBackDetail> FeedBackDetails
		{
			get
			{
				return this._FeedBackDetails;
			}
			set
			{
				this._FeedBackDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_FeesConfig", Storage="_FeesConfigs", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<FeesConfig> FeesConfigs
		{
			get
			{
				return this._FeesConfigs;
			}
			set
			{
				this._FeesConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PAAuditTrial", Storage="_PAAuditTrials", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PAAuditTrial> PAAuditTrials
		{
			get
			{
				return this._PAAuditTrials;
			}
			set
			{
				this._PAAuditTrials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_SchoolAccount", Storage="_SchoolAccounts", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<SchoolAccount> SchoolAccounts
		{
			get
			{
				return this._SchoolAccounts;
			}
			set
			{
				this._SchoolAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ScoreConfiguration", Storage="_ScoreConfigurations", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ScoreConfiguration> ScoreConfigurations
		{
			get
			{
				return this._ScoreConfigurations;
			}
			set
			{
				this._ScoreConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ScoreGradeConfiguration", Storage="_ScoreGradeConfigurations", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ScoreGradeConfiguration> ScoreGradeConfigurations
		{
			get
			{
				return this._ScoreGradeConfigurations;
			}
			set
			{
				this._ScoreGradeConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_SubscriptionPaymentDetail", Storage="_SubscriptionPaymentDetails", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<SubscriptionPaymentDetail> SubscriptionPaymentDetails
		{
			get
			{
				return this._SubscriptionPaymentDetails;
			}
			set
			{
				this._SubscriptionPaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_TeachersProfile", Storage="_TeachersProfiles", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<TeachersProfile> TeachersProfiles
		{
			get
			{
				return this._TeachersProfiles;
			}
			set
			{
				this._TeachersProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardPosition", Storage="_ReportCardPositions", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ReportCardPosition> ReportCardPositions
		{
			get
			{
				return this._ReportCardPositions;
			}
			set
			{
				this._ReportCardPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFeeTemplateList", Storage="_PaymentFeeTemplateLists", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PaymentFeeTemplateList> PaymentFeeTemplateLists
		{
			get
			{
				return this._PaymentFeeTemplateLists;
			}
			set
			{
				this._PaymentFeeTemplateLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFeeType", Storage="_PaymentFeeTypes", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PaymentFeeType> PaymentFeeTypes
		{
			get
			{
				return this._PaymentFeeTypes;
			}
			set
			{
				this._PaymentFeeTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFee", Storage="_PaymentFees", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PaymentFee> PaymentFees
		{
			get
			{
				return this._PaymentFees;
			}
			set
			{
				this._PaymentFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentFeeTemplate", Storage="_PaymentFeeTemplates", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PaymentFeeTemplate> PaymentFeeTemplates
		{
			get
			{
				return this._PaymentFeeTemplates;
			}
			set
			{
				this._PaymentFeeTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentTemporary", Storage="_PaymentTemporaries", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PaymentTemporary> PaymentTemporaries
		{
			get
			{
				return this._PaymentTemporaries;
			}
			set
			{
				this._PaymentTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_SubjectDepartment", Storage="_SubjectDepartments", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<SubjectDepartment> SubjectDepartments
		{
			get
			{
				return this._SubjectDepartments;
			}
			set
			{
				this._SubjectDepartments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentInvoiceList", Storage="_PaymentInvoiceLists", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PaymentInvoiceList> PaymentInvoiceLists
		{
			get
			{
				return this._PaymentInvoiceLists;
			}
			set
			{
				this._PaymentInvoiceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreCA", Storage="_StudentScoreCAs", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScoreCA> StudentScoreCAs
		{
			get
			{
				return this._StudentScoreCAs;
			}
			set
			{
				this._StudentScoreCAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_LessonNote", Storage="_LessonNotes", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<LessonNote> LessonNotes
		{
			get
			{
				return this._LessonNotes;
			}
			set
			{
				this._LessonNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardData", Storage="_ReportCardDatas", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ReportCardData> ReportCardDatas
		{
			get
			{
				return this._ReportCardDatas;
			}
			set
			{
				this._ReportCardDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreBehavioral", Storage="_StudentScoreBehaviorals", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScoreBehavioral> StudentScoreBehaviorals
		{
			get
			{
				return this._StudentScoreBehaviorals;
			}
			set
			{
				this._StudentScoreBehaviorals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ScoreCategoryConfiguration", Storage="_ScoreCategoryConfigurations", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ScoreCategoryConfiguration> ScoreCategoryConfigurations
		{
			get
			{
				return this._ScoreCategoryConfigurations;
			}
			set
			{
				this._ScoreCategoryConfigurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardComment", Storage="_ReportCardComments", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ReportCardComment> ReportCardComments
		{
			get
			{
				return this._ReportCardComments;
			}
			set
			{
				this._ReportCardComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreExtraCurricular", Storage="_StudentScoreExtraCurriculars", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScoreExtraCurricular> StudentScoreExtraCurriculars
		{
			get
			{
				return this._StudentScoreExtraCurriculars;
			}
			set
			{
				this._StudentScoreExtraCurriculars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreRepository", Storage="_StudentScoreRepositories", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScoreRepository> StudentScoreRepositories
		{
			get
			{
				return this._StudentScoreRepositories;
			}
			set
			{
				this._StudentScoreRepositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScore", Storage="_StudentScores", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_FinanceDiscount", Storage="_FinanceDiscounts", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<FinanceDiscount> FinanceDiscounts
		{
			get
			{
				return this._FinanceDiscounts;
			}
			set
			{
				this._FinanceDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PaymentPermanent", Storage="_PaymentPermanents", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<PaymentPermanent> PaymentPermanents
		{
			get
			{
				return this._PaymentPermanents;
			}
			set
			{
				this._PaymentPermanents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_MenuRole", Storage="_MenuRoles", ThisKey="Id", OtherKey="SchoolID")]
		public EntitySet<MenuRole> MenuRoles
		{
			get
			{
				return this._MenuRoles;
			}
			set
			{
				this._MenuRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreTransaction", Storage="_StudentScoreTransactions", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScoreTransaction> StudentScoreTransactions
		{
			get
			{
				return this._StudentScoreTransactions;
			}
			set
			{
				this._StudentScoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreRepositoryTransaction", Storage="_StudentScoreRepositoryTransactions", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScoreRepositoryTransaction> StudentScoreRepositoryTransactions
		{
			get
			{
				return this._StudentScoreRepositoryTransactions;
			}
			set
			{
				this._StudentScoreRepositoryTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_RpComment", Storage="_RpComments", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<RpComment> RpComments
		{
			get
			{
				return this._RpComments;
			}
			set
			{
				this._RpComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardNextTermBegin", Storage="_ReportCardNextTermBegins", ThisKey="Id", OtherKey="SchoolID")]
		public EntitySet<ReportCardNextTermBegin> ReportCardNextTermBegins
		{
			get
			{
				return this._ReportCardNextTermBegins;
			}
			set
			{
				this._ReportCardNextTermBegins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_NewsLetter", Storage="_NewsLetters", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<NewsLetter> NewsLetters
		{
			get
			{
				return this._NewsLetters;
			}
			set
			{
				this._NewsLetters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreTemporary", Storage="_StudentScoreTemporaries", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<StudentScoreTemporary> StudentScoreTemporaries
		{
			get
			{
				return this._StudentScoreTemporaries;
			}
			set
			{
				this._StudentScoreTemporaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardPrintConfig", Storage="_ReportCardPrintConfigs", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ReportCardPrintConfig> ReportCardPrintConfigs
		{
			get
			{
				return this._ReportCardPrintConfigs;
			}
			set
			{
				this._ReportCardPrintConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ExternalResourceLink", Storage="_ExternalResourceLinks", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ExternalResourceLink> ExternalResourceLinks
		{
			get
			{
				return this._ExternalResourceLinks;
			}
			set
			{
				this._ExternalResourceLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ExternalResourceDocument", Storage="_ExternalResourceDocuments", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ExternalResourceDocument> ExternalResourceDocuments
		{
			get
			{
				return this._ExternalResourceDocuments;
			}
			set
			{
				this._ExternalResourceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ExternalResourceMultimedia", Storage="_ExternalResourceMultimedias", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this._ExternalResourceMultimedias;
			}
			set
			{
				this._ExternalResourceMultimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_CbtNotice", Storage="_CbtNotices", ThisKey="Id", OtherKey="SchoolId")]
		public EntitySet<CbtNotice> CbtNotices
		{
			get
			{
				return this._CbtNotices;
			}
			set
			{
				this._CbtNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curriculum_School", Storage="_Curriculum", ThisKey="CurriculumId", OtherKey="Id", IsForeignKey=true)]
		public Curriculum Curriculum
		{
			get
			{
				return this._Curriculum.Entity;
			}
			set
			{
				Curriculum previousValue = this._Curriculum.Entity;
				if (((previousValue != value) 
							|| (this._Curriculum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curriculum.Entity = null;
						previousValue.Schools.Remove(this);
					}
					this._Curriculum.Entity = value;
					if ((value != null))
					{
						value.Schools.Add(this);
						this._CurriculumId = value.Id;
					}
					else
					{
						this._CurriculumId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Curriculum");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionApplicationLists(AdmissionApplicationList entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_AdmissionApplicationLists(AdmissionApplicationList entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_AdmissionConfigurations(AdmissionConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_AdmissionConfigurations(AdmissionConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_AdmissionInterviewRequirements(AdmissionInterviewRequirement entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_AdmissionInterviewRequirements(AdmissionInterviewRequirement entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_AdmissionPayments(AdmissionPayment entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_AdmissionPayments(AdmissionPayment entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_AdmissionTestRequirements(AdmissionTestRequirement entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_AdmissionTestRequirements(AdmissionTestRequirement entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_BatchStudents(BatchStudent entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_Fees(Fee entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_Fees(Fee entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_FeedBackDetails(FeedBackDetail entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_FeedBackDetails(FeedBackDetail entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_FeesConfigs(FeesConfig entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PAAuditTrials(PAAuditTrial entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PAAuditTrials(PAAuditTrial entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_SchoolAccounts(SchoolAccount entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_SchoolAccounts(SchoolAccount entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ScoreConfigurations(ScoreConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ScoreConfigurations(ScoreConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ScoreGradeConfigurations(ScoreGradeConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ScoreGradeConfigurations(ScoreGradeConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_SubscriptionPaymentDetails(SubscriptionPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_TeachersProfiles(TeachersProfile entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_TeachersProfiles(TeachersProfile entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ReportCardPositions(ReportCardPosition entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PaymentFeeTemplateLists(PaymentFeeTemplateList entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PaymentFeeTypes(PaymentFeeType entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PaymentFeeTypes(PaymentFeeType entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PaymentFees(PaymentFee entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PaymentFeeTemplates(PaymentFeeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PaymentFeeTemplates(PaymentFeeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PaymentTemporaries(PaymentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_SubjectDepartments(SubjectDepartment entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_SubjectDepartments(SubjectDepartment entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PaymentInvoiceLists(PaymentInvoiceList entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScoreCAs(StudentScoreCA entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_LessonNotes(LessonNote entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ReportCardDatas(ReportCardData entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScoreBehaviorals(StudentScoreBehavioral entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ScoreCategoryConfigurations(ScoreCategoryConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ReportCardComments(ReportCardComment entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScoreExtraCurriculars(StudentScoreExtraCurricular entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScoreRepositories(StudentScoreRepository entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_FinanceDiscounts(FinanceDiscount entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PaymentPermanents(PaymentPermanent entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_MenuRoles(MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScoreTransactions(StudentScoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScoreRepositoryTransactions(StudentScoreRepositoryTransaction entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_RpComments(RpComment entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_RpComments(RpComment entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ReportCardNextTermBegins(ReportCardNextTermBegin entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ReportCardNextTermBegins(ReportCardNextTermBegin entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_NewsLetters(NewsLetter entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentScoreTemporaries(StudentScoreTemporary entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ReportCardPrintConfigs(ReportCardPrintConfig entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ExternalResourceLinks(ExternalResourceLink entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ExternalResourceDocuments(ExternalResourceDocument entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_CbtNotices(CbtNotice entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_CbtNotices(CbtNotice entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportCardNextTermBegins")]
	public partial class ReportCardNextTermBegin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _NextTermBegins;
		
		private System.Nullable<long> _SchoolID;
		
		private System.Nullable<long> _CampusID;
		
		private EntityRef<School> _School;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNextTermBeginsChanging(System.Nullable<System.DateTime> value);
    partial void OnNextTermBeginsChanged();
    partial void OnSchoolIDChanging(System.Nullable<long> value);
    partial void OnSchoolIDChanged();
    partial void OnCampusIDChanging(System.Nullable<long> value);
    partial void OnCampusIDChanged();
    #endregion
		
		public ReportCardNextTermBegin()
		{
			this._School = default(EntityRef<School>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTermBegins", DbType="Date")]
		public System.Nullable<System.DateTime> NextTermBegins
		{
			get
			{
				return this._NextTermBegins;
			}
			set
			{
				if ((this._NextTermBegins != value))
				{
					this.OnNextTermBeginsChanging(value);
					this.SendPropertyChanging();
					this._NextTermBegins = value;
					this.SendPropertyChanged("NextTermBegins");
					this.OnNextTermBeginsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusID", DbType="BigInt")]
		public System.Nullable<long> CampusID
		{
			get
			{
				return this._CampusID;
			}
			set
			{
				if ((this._CampusID != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIDChanging(value);
					this.SendPropertyChanging();
					this._CampusID = value;
					this.SendPropertyChanged("CampusID");
					this.OnCampusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardNextTermBegin", Storage="_School", ThisKey="SchoolID", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ReportCardNextTermBegins.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ReportCardNextTermBegins.Add(this);
						this._SchoolID = value.Id;
					}
					else
					{
						this._SchoolID = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardNextTermBegin", Storage="_SchoolCampus", ThisKey="CampusID", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ReportCardNextTermBegins.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ReportCardNextTermBegins.Add(this);
						this._CampusID = value.Id;
					}
					else
					{
						this._CampusID = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportCardNextTermBegins")]
	public partial class ReportCardNextTermBegin1
	{
		
		private System.Nullable<long> _ID;
		
		private System.Nullable<System.DateTime> _NextTermBegins;
		
		private System.Nullable<long> _SchoolID;
		
		private System.Nullable<long> _CampusID;
		
		public ReportCardNextTermBegin1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt")]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTermBegins", DbType="Date")]
		public System.Nullable<System.DateTime> NextTermBegins
		{
			get
			{
				return this._NextTermBegins;
			}
			set
			{
				if ((this._NextTermBegins != value))
				{
					this._NextTermBegins = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="BigInt")]
		public System.Nullable<long> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusID", DbType="BigInt")]
		public System.Nullable<long> CampusID
		{
			get
			{
				return this._CampusID;
			}
			set
			{
				if ((this._CampusID != value))
				{
					this._CampusID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsLetter")]
	public partial class NewsLetter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _UploadedById;
		
		private string _Description;
		
		private string _FileName;
		
		private System.Nullable<System.DateTime> _DateUploaded;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDateUploadedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUploadedChanged();
    #endregion
		
		public NewsLetter()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(MAX)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUploaded", DbType="Date")]
		public System.Nullable<System.DateTime> DateUploaded
		{
			get
			{
				return this._DateUploaded;
			}
			set
			{
				if ((this._DateUploaded != value))
				{
					this.OnDateUploadedChanging(value);
					this.SendPropertyChanging();
					this._DateUploaded = value;
					this.SendPropertyChanged("DateUploaded");
					this.OnDateUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_NewsLetter", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.NewsLetters.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.NewsLetters.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_NewsLetter", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.NewsLetters.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.NewsLetters.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_NewsLetter", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.NewsLetters.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.NewsLetters.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_NewsLetter", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.NewsLetters.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.NewsLetters.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NewsLetter", Storage="_User", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.NewsLetters.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.NewsLetters.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScoreTemporary")]
	public partial class StudentScoreTemporary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _ExamScoreObtainable;
		
		private System.Nullable<decimal> _ExamScore;
		
		private System.Nullable<int> _Percentage;
		
		private System.Nullable<decimal> _PercentageScore;
		
		private System.Nullable<int> _ExamPercentage;
		
		private System.Nullable<decimal> _ExamPercentageScore;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _SubCategoryId;
		
		private long _SubjectTeacherId;
		
		private System.Nullable<long> _UploadedById;
		
		private long _SubjectId;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _AcademicSessionID;
		
		private System.Nullable<long> _StudentId;
		
		private string _AdmissionNumber;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TemplateId;
		
		private System.Nullable<long> _BroadSheetTemplateID;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Description;
		
		private string _Remark;
		
		private System.Nullable<int> _Code;
		
		private string _StatusCode;
		
		private System.Nullable<bool> _IsCancelled;
		
		private System.Nullable<System.DateTime> _IsCancelledDate;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
		private EntityRef<ScoreCategoryConfiguration> _ScoreCategoryConfiguration;
		
		private EntityRef<ScoreSubCategoryConfiguration> _ScoreSubCategoryConfiguration;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
		private EntityRef<TestAssignmentScoreTemplate> _TestAssignmentScoreTemplate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnExamScoreObtainableChanging(System.Nullable<int> value);
    partial void OnExamScoreObtainableChanged();
    partial void OnExamScoreChanging(System.Nullable<decimal> value);
    partial void OnExamScoreChanged();
    partial void OnPercentageChanging(System.Nullable<int> value);
    partial void OnPercentageChanged();
    partial void OnPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnPercentageScoreChanged();
    partial void OnExamPercentageChanging(System.Nullable<int> value);
    partial void OnExamPercentageChanged();
    partial void OnExamPercentageScoreChanging(System.Nullable<decimal> value);
    partial void OnExamPercentageScoreChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<long> value);
    partial void OnSubCategoryIdChanged();
    partial void OnSubjectTeacherIdChanging(long value);
    partial void OnSubjectTeacherIdChanged();
    partial void OnUploadedByIdChanging(System.Nullable<long> value);
    partial void OnUploadedByIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnAcademicSessionIDChanging(System.Nullable<long> value);
    partial void OnAcademicSessionIDChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnAdmissionNumberChanging(string value);
    partial void OnAdmissionNumberChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<long> value);
    partial void OnTemplateIdChanged();
    partial void OnBroadSheetTemplateIDChanging(System.Nullable<long> value);
    partial void OnBroadSheetTemplateIDChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnStatusCodeChanging(string value);
    partial void OnStatusCodeChanged();
    partial void OnIsCancelledChanging(System.Nullable<bool> value);
    partial void OnIsCancelledChanged();
    partial void OnIsCancelledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIsCancelledDateChanged();
    #endregion
		
		public StudentScoreTemporary()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			this._ScoreCategoryConfiguration = default(EntityRef<ScoreCategoryConfiguration>);
			this._ScoreSubCategoryConfiguration = default(EntityRef<ScoreSubCategoryConfiguration>);
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			this._TestAssignmentScoreTemplate = default(EntityRef<TestAssignmentScoreTemplate>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScoreObtainable", DbType="Int")]
		public System.Nullable<int> ExamScoreObtainable
		{
			get
			{
				return this._ExamScoreObtainable;
			}
			set
			{
				if ((this._ExamScoreObtainable != value))
				{
					this.OnExamScoreObtainableChanging(value);
					this.SendPropertyChanging();
					this._ExamScoreObtainable = value;
					this.SendPropertyChanged("ExamScoreObtainable");
					this.OnExamScoreObtainableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExamScore
		{
			get
			{
				return this._ExamScore;
			}
			set
			{
				if ((this._ExamScore != value))
				{
					this.OnExamScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamScore = value;
					this.SendPropertyChanged("ExamScore");
					this.OnExamScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PercentageScore
		{
			get
			{
				return this._PercentageScore;
			}
			set
			{
				if ((this._PercentageScore != value))
				{
					this.OnPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._PercentageScore = value;
					this.SendPropertyChanged("PercentageScore");
					this.OnPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPercentage", DbType="Int")]
		public System.Nullable<int> ExamPercentage
		{
			get
			{
				return this._ExamPercentage;
			}
			set
			{
				if ((this._ExamPercentage != value))
				{
					this.OnExamPercentageChanging(value);
					this.SendPropertyChanging();
					this._ExamPercentage = value;
					this.SendPropertyChanged("ExamPercentage");
					this.OnExamPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPercentageScore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExamPercentageScore
		{
			get
			{
				return this._ExamPercentageScore;
			}
			set
			{
				if ((this._ExamPercentageScore != value))
				{
					this.OnExamPercentageScoreChanging(value);
					this.SendPropertyChanging();
					this._ExamPercentageScore = value;
					this.SendPropertyChanged("ExamPercentageScore");
					this.OnExamPercentageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="BigInt")]
		public System.Nullable<long> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					if (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectTeacherId", DbType="BigInt NOT NULL")]
		public long SubjectTeacherId
		{
			get
			{
				return this._SubjectTeacherId;
			}
			set
			{
				if ((this._SubjectTeacherId != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectTeacherId = value;
					this.SendPropertyChanged("SubjectTeacherId");
					this.OnSubjectTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedById", DbType="BigInt")]
		public System.Nullable<long> UploadedById
		{
			get
			{
				return this._UploadedById;
			}
			set
			{
				if ((this._UploadedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadedByIdChanging(value);
					this.SendPropertyChanging();
					this._UploadedById = value;
					this.SendPropertyChanged("UploadedById");
					this.OnUploadedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionID", DbType="BigInt")]
		public System.Nullable<long> AcademicSessionID
		{
			get
			{
				return this._AcademicSessionID;
			}
			set
			{
				if ((this._AcademicSessionID != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionIDChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionID = value;
					this.SendPropertyChanged("AcademicSessionID");
					this.OnAcademicSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNumber", DbType="VarChar(500)")]
		public string AdmissionNumber
		{
			get
			{
				return this._AdmissionNumber;
			}
			set
			{
				if ((this._AdmissionNumber != value))
				{
					this.OnAdmissionNumberChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNumber = value;
					this.SendPropertyChanged("AdmissionNumber");
					this.OnAdmissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="BigInt")]
		public System.Nullable<long> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BroadSheetTemplateID", DbType="BigInt")]
		public System.Nullable<long> BroadSheetTemplateID
		{
			get
			{
				return this._BroadSheetTemplateID;
			}
			set
			{
				if ((this._BroadSheetTemplateID != value))
				{
					this.OnBroadSheetTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._BroadSheetTemplateID = value;
					this.SendPropertyChanged("BroadSheetTemplateID");
					this.OnBroadSheetTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCode", DbType="VarChar(MAX)")]
		public string StatusCode
		{
			get
			{
				return this._StatusCode;
			}
			set
			{
				if ((this._StatusCode != value))
				{
					this.OnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._StatusCode = value;
					this.SendPropertyChanged("StatusCode");
					this.OnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit")]
		public System.Nullable<bool> IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IsCancelledDate
		{
			get
			{
				return this._IsCancelledDate;
			}
			set
			{
				if ((this._IsCancelledDate != value))
				{
					this.OnIsCancelledDateChanging(value);
					this.SendPropertyChanging();
					this._IsCancelledDate = value;
					this.SendPropertyChanged("IsCancelledDate");
					this.OnIsCancelledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_StudentScoreTemporary", Storage="_AcademicSessionName", ThisKey="AcademicSessionID", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._AcademicSessionID = value.ID;
					}
					else
					{
						this._AcademicSessionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_StudentScoreTemporary", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_StudentScoreTemporary", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_StudentScoreTemporary", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_StudentScoreTemporary", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentScoreTemporary", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreCategoryConfiguration_StudentScoreTemporary", Storage="_ScoreCategoryConfiguration", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreCategoryConfiguration ScoreCategoryConfiguration
		{
			get
			{
				return this._ScoreCategoryConfiguration.Entity;
			}
			set
			{
				ScoreCategoryConfiguration previousValue = this._ScoreCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreCategoryConfiguration.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._ScoreCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScoreSubCategoryConfiguration_StudentScoreTemporary", Storage="_ScoreSubCategoryConfiguration", ThisKey="SubCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ScoreSubCategoryConfiguration ScoreSubCategoryConfiguration
		{
			get
			{
				return this._ScoreSubCategoryConfiguration.Entity;
			}
			set
			{
				ScoreSubCategoryConfiguration previousValue = this._ScoreSubCategoryConfiguration.Entity;
				if (((previousValue != value) 
							|| (this._ScoreSubCategoryConfiguration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScoreSubCategoryConfiguration.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._ScoreSubCategoryConfiguration.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._SubCategoryId = value.Id;
					}
					else
					{
						this._SubCategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ScoreSubCategoryConfiguration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudentScoreTemporary", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(long);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_StudentScoreTemporary", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestAssignmentScoreTemplate_StudentScoreTemporary", Storage="_TestAssignmentScoreTemplate", ThisKey="TemplateId", OtherKey="ID", IsForeignKey=true)]
		public TestAssignmentScoreTemplate TestAssignmentScoreTemplate
		{
			get
			{
				return this._TestAssignmentScoreTemplate.Entity;
			}
			set
			{
				TestAssignmentScoreTemplate previousValue = this._TestAssignmentScoreTemplate.Entity;
				if (((previousValue != value) 
							|| (this._TestAssignmentScoreTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestAssignmentScoreTemplate.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._TestAssignmentScoreTemplate.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._TemplateId = value.ID;
					}
					else
					{
						this._TemplateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TestAssignmentScoreTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTemporary", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StudentScoreTemporaries.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTemporary1", Storage="_User1", ThisKey="UploadedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.StudentScoreTemporaries1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries1.Add(this);
						this._UploadedById = value.Id;
					}
					else
					{
						this._UploadedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StudentScoreTemporary2", Storage="_User2", ThisKey="SubjectTeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.StudentScoreTemporaries2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.StudentScoreTemporaries2.Add(this);
						this._SubjectTeacherId = value.Id;
					}
					else
					{
						this._SubjectTeacherId = default(long);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectsInSchool")]
	public partial class SubjectsInSchool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<int> _SchoolPickedSubject;
		
		private System.Nullable<long> _DepartmentId;
		
		private System.Nullable<int> _ReportCardOrder;
		
		private System.Nullable<int> _MaximumScore;
		
		private System.Nullable<bool> _CA;
		
		private System.Nullable<bool> _Exam;
		
		private EntitySet<Grouping> _Groupings;
		
		private EntitySet<HomeRoomTeacher> _HomeRoomTeachers;
		
		private EntitySet<OptionGroupSubject> _OptionGroupSubjects;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SubjectDepartment> _SubjectDepartment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnSchoolPickedSubjectChanging(System.Nullable<int> value);
    partial void OnSchoolPickedSubjectChanged();
    partial void OnDepartmentIdChanging(System.Nullable<long> value);
    partial void OnDepartmentIdChanged();
    partial void OnReportCardOrderChanging(System.Nullable<int> value);
    partial void OnReportCardOrderChanged();
    partial void OnMaximumScoreChanging(System.Nullable<int> value);
    partial void OnMaximumScoreChanged();
    partial void OnCAChanging(System.Nullable<bool> value);
    partial void OnCAChanged();
    partial void OnExamChanging(System.Nullable<bool> value);
    partial void OnExamChanged();
    #endregion
		
		public SubjectsInSchool()
		{
			this._Groupings = new EntitySet<Grouping>(new Action<Grouping>(this.attach_Groupings), new Action<Grouping>(this.detach_Groupings));
			this._HomeRoomTeachers = new EntitySet<HomeRoomTeacher>(new Action<HomeRoomTeacher>(this.attach_HomeRoomTeachers), new Action<HomeRoomTeacher>(this.detach_HomeRoomTeachers));
			this._OptionGroupSubjects = new EntitySet<OptionGroupSubject>(new Action<OptionGroupSubject>(this.attach_OptionGroupSubjects), new Action<OptionGroupSubject>(this.detach_OptionGroupSubjects));
			this._Subject = default(EntityRef<Subject>);
			this._SubjectDepartment = default(EntityRef<SubjectDepartment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolPickedSubject", DbType="Int")]
		public System.Nullable<int> SchoolPickedSubject
		{
			get
			{
				return this._SchoolPickedSubject;
			}
			set
			{
				if ((this._SchoolPickedSubject != value))
				{
					this.OnSchoolPickedSubjectChanging(value);
					this.SendPropertyChanging();
					this._SchoolPickedSubject = value;
					this.SendPropertyChanged("SchoolPickedSubject");
					this.OnSchoolPickedSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt")]
		public System.Nullable<long> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._SubjectDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportCardOrder", DbType="Int")]
		public System.Nullable<int> ReportCardOrder
		{
			get
			{
				return this._ReportCardOrder;
			}
			set
			{
				if ((this._ReportCardOrder != value))
				{
					this.OnReportCardOrderChanging(value);
					this.SendPropertyChanging();
					this._ReportCardOrder = value;
					this.SendPropertyChanged("ReportCardOrder");
					this.OnReportCardOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumScore", DbType="Int")]
		public System.Nullable<int> MaximumScore
		{
			get
			{
				return this._MaximumScore;
			}
			set
			{
				if ((this._MaximumScore != value))
				{
					this.OnMaximumScoreChanging(value);
					this.SendPropertyChanging();
					this._MaximumScore = value;
					this.SendPropertyChanged("MaximumScore");
					this.OnMaximumScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CA", DbType="Bit")]
		public System.Nullable<bool> CA
		{
			get
			{
				return this._CA;
			}
			set
			{
				if ((this._CA != value))
				{
					this.OnCAChanging(value);
					this.SendPropertyChanging();
					this._CA = value;
					this.SendPropertyChanged("CA");
					this.OnCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam", DbType="Bit")]
		public System.Nullable<bool> Exam
		{
			get
			{
				return this._Exam;
			}
			set
			{
				if ((this._Exam != value))
				{
					this.OnExamChanging(value);
					this.SendPropertyChanging();
					this._Exam = value;
					this.SendPropertyChanged("Exam");
					this.OnExamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectsInSchool_Grouping", Storage="_Groupings", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<Grouping> Groupings
		{
			get
			{
				return this._Groupings;
			}
			set
			{
				this._Groupings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectsInSchool_HomeRoomTeacher", Storage="_HomeRoomTeachers", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<HomeRoomTeacher> HomeRoomTeachers
		{
			get
			{
				return this._HomeRoomTeachers;
			}
			set
			{
				this._HomeRoomTeachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectsInSchool_OptionGroupSubject", Storage="_OptionGroupSubjects", ThisKey="Id", OtherKey="SubjectId")]
		public EntitySet<OptionGroupSubject> OptionGroupSubjects
		{
			get
			{
				return this._OptionGroupSubjects;
			}
			set
			{
				this._OptionGroupSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectsInSchool", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.SubjectsInSchools.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.SubjectsInSchools.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectDepartment_SubjectsInSchool", Storage="_SubjectDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public SubjectDepartment SubjectDepartment
		{
			get
			{
				return this._SubjectDepartment.Entity;
			}
			set
			{
				SubjectDepartment previousValue = this._SubjectDepartment.Entity;
				if (((previousValue != value) 
							|| (this._SubjectDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectDepartment.Entity = null;
						previousValue.SubjectsInSchools.Remove(this);
					}
					this._SubjectDepartment.Entity = value;
					if ((value != null))
					{
						value.SubjectsInSchools.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubjectDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groupings(Grouping entity)
		{
			this.SendPropertyChanging();
			entity.SubjectsInSchool = this;
		}
		
		private void detach_Groupings(Grouping entity)
		{
			this.SendPropertyChanging();
			entity.SubjectsInSchool = null;
		}
		
		private void attach_HomeRoomTeachers(HomeRoomTeacher entity)
		{
			this.SendPropertyChanging();
			entity.SubjectsInSchool = this;
		}
		
		private void detach_HomeRoomTeachers(HomeRoomTeacher entity)
		{
			this.SendPropertyChanging();
			entity.SubjectsInSchool = null;
		}
		
		private void attach_OptionGroupSubjects(OptionGroupSubject entity)
		{
			this.SendPropertyChanging();
			entity.SubjectsInSchool = this;
		}
		
		private void detach_OptionGroupSubjects(OptionGroupSubject entity)
		{
			this.SendPropertyChanging();
			entity.SubjectsInSchool = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcademicSession")]
	public partial class AcademicSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _DateStart;
		
		private System.DateTime _DateEnd;
		
		private long _AcademicSessionId;
		
		private System.Nullable<long> _AcademicTermId;
		
		private System.Nullable<long> _CreatedBy;
		
		private long _SchoolId;
		
		private bool _IsCurrent;
		
		private System.Nullable<bool> _IsOpened;
		
		private System.Nullable<bool> _IsClosed;
		
		private System.Nullable<bool> _IsLocked;
		
		private EntitySet<YearBill> _YearBills;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnAcademicSessionIdChanging(long value);
    partial void OnAcademicSessionIdChanged();
    partial void OnAcademicTermIdChanging(System.Nullable<long> value);
    partial void OnAcademicTermIdChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnSchoolIdChanging(long value);
    partial void OnSchoolIdChanged();
    partial void OnIsCurrentChanging(bool value);
    partial void OnIsCurrentChanged();
    partial void OnIsOpenedChanging(System.Nullable<bool> value);
    partial void OnIsOpenedChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public AcademicSession()
		{
			this._YearBills = new EntitySet<YearBill>(new Action<YearBill>(this.attach_YearBills), new Action<YearBill>(this.detach_YearBills));
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicSessionId", DbType="BigInt NOT NULL")]
		public long AcademicSessionId
		{
			get
			{
				return this._AcademicSessionId;
			}
			set
			{
				if ((this._AcademicSessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicSessionId = value;
					this.SendPropertyChanged("AcademicSessionId");
					this.OnAcademicSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicTermId", DbType="BigInt")]
		public System.Nullable<long> AcademicTermId
		{
			get
			{
				return this._AcademicTermId;
			}
			set
			{
				if ((this._AcademicTermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcademicTermIdChanging(value);
					this.SendPropertyChanging();
					this._AcademicTermId = value;
					this.SendPropertyChanged("AcademicTermId");
					this.OnAcademicTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt NOT NULL")]
		public long SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit NOT NULL")]
		public bool IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOpened", DbType="Bit")]
		public System.Nullable<bool> IsOpened
		{
			get
			{
				return this._IsOpened;
			}
			set
			{
				if ((this._IsOpened != value))
				{
					this.OnIsOpenedChanging(value);
					this.SendPropertyChanging();
					this._IsOpened = value;
					this.SendPropertyChanged("IsOpened");
					this.OnIsOpenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit")]
		public System.Nullable<bool> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSession_YearBill", Storage="_YearBills", ThisKey="Id", OtherKey="AcademicSession")]
		public EntitySet<YearBill> YearBills
		{
			get
			{
				return this._YearBills;
			}
			set
			{
				this._YearBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_AcademicSession", Storage="_AcademicSessionName", ThisKey="AcademicSessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.AcademicSessions.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.AcademicSessions.Add(this);
						this._AcademicSessionId = value.ID;
					}
					else
					{
						this._AcademicSessionId = default(long);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_AcademicSession", Storage="_AcademicTerm1", ThisKey="AcademicTermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.AcademicSessions.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.AcademicSessions.Add(this);
						this._AcademicTermId = value.Id;
					}
					else
					{
						this._AcademicTermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YearBills(YearBill entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSession1 = this;
		}
		
		private void detach_YearBills(YearBill entity)
		{
			this.SendPropertyChanging();
			entity.AcademicSession1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportCardPrintConfig")]
	public partial class ReportCardPrintConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<bool> _CA;
		
		private System.Nullable<bool> _Exam;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnCAChanging(System.Nullable<bool> value);
    partial void OnCAChanged();
    partial void OnExamChanging(System.Nullable<bool> value);
    partial void OnExamChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ReportCardPrintConfig()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CA", DbType="Bit")]
		public System.Nullable<bool> CA
		{
			get
			{
				return this._CA;
			}
			set
			{
				if ((this._CA != value))
				{
					this.OnCAChanging(value);
					this.SendPropertyChanging();
					this._CA = value;
					this.SendPropertyChanged("CA");
					this.OnCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam", DbType="Bit")]
		public System.Nullable<bool> Exam
		{
			get
			{
				return this._Exam;
			}
			set
			{
				if ((this._Exam != value))
				{
					this.OnExamChanging(value);
					this.SendPropertyChanging();
					this._Exam = value;
					this.SendPropertyChanged("Exam");
					this.OnExamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ReportCardPrintConfig", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ReportCardPrintConfigs.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ReportCardPrintConfigs.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ReportCardPrintConfig", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ReportCardPrintConfigs.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ReportCardPrintConfigs.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ReportCardPrintConfig", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ReportCardPrintConfigs.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardPrintConfigs.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ReportCardPrintConfig", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ReportCardPrintConfigs.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ReportCardPrintConfigs.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ReportCardPrintConfig", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ReportCardPrintConfigs.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ReportCardPrintConfigs.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ReportCardPrintConfig", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ReportCardPrintConfigs.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ReportCardPrintConfigs.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ReportCardPrintConfig", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.ReportCardPrintConfigs.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.ReportCardPrintConfigs.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalResourceType")]
	public partial class ExternalResourceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ExternalResourceType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalResourceLink")]
	public partial class ExternalResourceLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _UserTypeId;
		
		private string _Link;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _dateCreated;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnUserTypeIdChanging(System.Nullable<long> value);
    partial void OnUserTypeIdChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OndateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreatedChanged();
    #endregion
		
		public ExternalResourceLink()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if ((this._Class_Grade.HasLoadedOrAssignedValue || this._Grade.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="BigInt")]
		public System.Nullable<long> UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(MAX)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="Date")]
		public System.Nullable<System.DateTime> dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ExternalResourceLink", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ExternalResourceLinks.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceLinks.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ExternalResourceLink", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ExternalResourceLinks.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceLinks.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ExternalResourceLink", Storage="_Class_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ExternalResourceLinks.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceLinks.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ExternalResourceLink", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ExternalResourceLinks.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceLinks.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ExternalResourceLink", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ExternalResourceLinks.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceLinks.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ExternalResourceLink", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ExternalResourceLinks.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceLinks.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalResourceDocument")]
	public partial class ExternalResourceDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _UserTypeId;
		
		private string _DocumentName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _dateCreated;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnUserTypeIdChanging(System.Nullable<long> value);
    partial void OnUserTypeIdChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OndateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreatedChanged();
    #endregion
		
		public ExternalResourceDocument()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if ((this._Class_Grade.HasLoadedOrAssignedValue || this._Grade.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="BigInt")]
		public System.Nullable<long> UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="VarChar(MAX)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="Date")]
		public System.Nullable<System.DateTime> dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ExternalResourceDocument", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ExternalResourceDocuments.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceDocuments.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ExternalResourceDocument", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ExternalResourceDocuments.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceDocuments.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ExternalResourceDocument", Storage="_Class_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ExternalResourceDocuments.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceDocuments.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ExternalResourceDocument", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ExternalResourceDocuments.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceDocuments.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ExternalResourceDocument", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ExternalResourceDocuments.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceDocuments.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ExternalResourceDocument", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ExternalResourceDocuments.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceDocuments.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalResourceMediaType")]
	public partial class ExternalResourceMediaType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private EntitySet<ExternalResourceMultimedia> _ExternalResourceMultimedias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ExternalResourceMediaType()
		{
			this._ExternalResourceMultimedias = new EntitySet<ExternalResourceMultimedia>(new Action<ExternalResourceMultimedia>(this.attach_ExternalResourceMultimedias), new Action<ExternalResourceMultimedia>(this.detach_ExternalResourceMultimedias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExternalResourceMediaType_ExternalResourceMultimedia", Storage="_ExternalResourceMultimedias", ThisKey="Id", OtherKey="MediaTypeId")]
		public EntitySet<ExternalResourceMultimedia> ExternalResourceMultimedias
		{
			get
			{
				return this._ExternalResourceMultimedias;
			}
			set
			{
				this._ExternalResourceMultimedias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.ExternalResourceMediaType = this;
		}
		
		private void detach_ExternalResourceMultimedias(ExternalResourceMultimedia entity)
		{
			this.SendPropertyChanging();
			entity.ExternalResourceMediaType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalResourceMultimedia")]
	public partial class ExternalResourceMultimedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _UserTypeId;
		
		private System.Nullable<long> _MediaTypeId;
		
		private string _MediaName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _dateCreated;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<ExternalResourceMediaType> _ExternalResourceMediaType;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnUserTypeIdChanging(System.Nullable<long> value);
    partial void OnUserTypeIdChanged();
    partial void OnMediaTypeIdChanging(System.Nullable<long> value);
    partial void OnMediaTypeIdChanged();
    partial void OnMediaNameChanging(string value);
    partial void OnMediaNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OndateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreatedChanged();
    #endregion
		
		public ExternalResourceMultimedia()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._ExternalResourceMediaType = default(EntityRef<ExternalResourceMediaType>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="BigInt")]
		public System.Nullable<long> UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaTypeId", DbType="BigInt")]
		public System.Nullable<long> MediaTypeId
		{
			get
			{
				return this._MediaTypeId;
			}
			set
			{
				if ((this._MediaTypeId != value))
				{
					if (this._ExternalResourceMediaType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMediaTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MediaTypeId = value;
					this.SendPropertyChanged("MediaTypeId");
					this.OnMediaTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaName", DbType="VarChar(MAX)")]
		public string MediaName
		{
			get
			{
				return this._MediaName;
			}
			set
			{
				if ((this._MediaName != value))
				{
					this.OnMediaNameChanging(value);
					this.SendPropertyChanging();
					this._MediaName = value;
					this.SendPropertyChanged("MediaName");
					this.OnMediaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="Date")]
		public System.Nullable<System.DateTime> dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_ExternalResourceMultimedia", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.ExternalResourceMultimedias.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceMultimedias.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_ExternalResourceMultimedia", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.ExternalResourceMultimedias.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceMultimedias.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_ExternalResourceMultimedia", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.ExternalResourceMultimedias.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceMultimedias.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExternalResourceMediaType_ExternalResourceMultimedia", Storage="_ExternalResourceMediaType", ThisKey="MediaTypeId", OtherKey="Id", IsForeignKey=true)]
		public ExternalResourceMediaType ExternalResourceMediaType
		{
			get
			{
				return this._ExternalResourceMediaType.Entity;
			}
			set
			{
				ExternalResourceMediaType previousValue = this._ExternalResourceMediaType.Entity;
				if (((previousValue != value) 
							|| (this._ExternalResourceMediaType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExternalResourceMediaType.Entity = null;
						previousValue.ExternalResourceMultimedias.Remove(this);
					}
					this._ExternalResourceMediaType.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceMultimedias.Add(this);
						this._MediaTypeId = value.Id;
					}
					else
					{
						this._MediaTypeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ExternalResourceMediaType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_ExternalResourceMultimedia", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.ExternalResourceMultimedias.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceMultimedias.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_ExternalResourceMultimedia", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.ExternalResourceMultimedias.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceMultimedias.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_ExternalResourceMultimedia", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.ExternalResourceMultimedias.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.ExternalResourceMultimedias.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CbtAssessmentRecord")]
	public partial class CbtAssessmentRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _ExamId;
		
		private System.Nullable<long> _TypeId;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<long> _NoOfQuestion;
		
		private System.Nullable<long> _RightAnswers;
		
		private System.Nullable<long> _WrongAnswers;
		
		private System.Nullable<long> _Score;
		
		private System.Nullable<decimal> _ScorePercentage;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _NextRetake;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
		private EntityRef<User> _User;
		
		private EntityRef<CbtCategory> _CbtCategory;
		
		private EntityRef<CbtExamination> _CbtExamination;
		
		private EntityRef<CbtType> _CbtType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnExamIdChanging(System.Nullable<long> value);
    partial void OnExamIdChanged();
    partial void OnTypeIdChanging(System.Nullable<long> value);
    partial void OnTypeIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnNoOfQuestionChanging(System.Nullable<long> value);
    partial void OnNoOfQuestionChanged();
    partial void OnRightAnswersChanging(System.Nullable<long> value);
    partial void OnRightAnswersChanged();
    partial void OnWrongAnswersChanging(System.Nullable<long> value);
    partial void OnWrongAnswersChanged();
    partial void OnScoreChanging(System.Nullable<long> value);
    partial void OnScoreChanged();
    partial void OnScorePercentageChanging(System.Nullable<decimal> value);
    partial void OnScorePercentageChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNextRetakeChanging(System.Nullable<System.DateTime> value);
    partial void OnNextRetakeChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public CbtAssessmentRecord()
		{
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			this._User = default(EntityRef<User>);
			this._CbtCategory = default(EntityRef<CbtCategory>);
			this._CbtExamination = default(EntityRef<CbtExamination>);
			this._CbtType = default(EntityRef<CbtType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", DbType="BigInt")]
		public System.Nullable<long> ExamId
		{
			get
			{
				return this._ExamId;
			}
			set
			{
				if ((this._ExamId != value))
				{
					if (this._CbtExamination.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamIdChanging(value);
					this.SendPropertyChanging();
					this._ExamId = value;
					this.SendPropertyChanged("ExamId");
					this.OnExamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="BigInt")]
		public System.Nullable<long> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._CbtType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._CbtCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfQuestion", DbType="BigInt")]
		public System.Nullable<long> NoOfQuestion
		{
			get
			{
				return this._NoOfQuestion;
			}
			set
			{
				if ((this._NoOfQuestion != value))
				{
					this.OnNoOfQuestionChanging(value);
					this.SendPropertyChanging();
					this._NoOfQuestion = value;
					this.SendPropertyChanged("NoOfQuestion");
					this.OnNoOfQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightAnswers", DbType="BigInt")]
		public System.Nullable<long> RightAnswers
		{
			get
			{
				return this._RightAnswers;
			}
			set
			{
				if ((this._RightAnswers != value))
				{
					this.OnRightAnswersChanging(value);
					this.SendPropertyChanging();
					this._RightAnswers = value;
					this.SendPropertyChanged("RightAnswers");
					this.OnRightAnswersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrongAnswers", DbType="BigInt")]
		public System.Nullable<long> WrongAnswers
		{
			get
			{
				return this._WrongAnswers;
			}
			set
			{
				if ((this._WrongAnswers != value))
				{
					this.OnWrongAnswersChanging(value);
					this.SendPropertyChanging();
					this._WrongAnswers = value;
					this.SendPropertyChanged("WrongAnswers");
					this.OnWrongAnswersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="BigInt")]
		public System.Nullable<long> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScorePercentage", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ScorePercentage
		{
			get
			{
				return this._ScorePercentage;
			}
			set
			{
				if ((this._ScorePercentage != value))
				{
					this.OnScorePercentageChanging(value);
					this.SendPropertyChanging();
					this._ScorePercentage = value;
					this.SendPropertyChanged("ScorePercentage");
					this.OnScorePercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextRetake", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextRetake
		{
			get
			{
				return this._NextRetake;
			}
			set
			{
				if ((this._NextRetake != value))
				{
					this.OnNextRetakeChanging(value);
					this.SendPropertyChanging();
					this._NextRetake = value;
					this.SendPropertyChanged("NextRetake");
					this.OnNextRetakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_CbtAssessmentRecord", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_CbtAssessmentRecord", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_CbtAssessmentRecord", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_CbtAssessmentRecord", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_CbtAssessmentRecord", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_CbtAssessmentRecord", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CbtAssessmentRecord", Storage="_User", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtCategory_CbtAssessmentRecord", Storage="_CbtCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public CbtCategory CbtCategory
		{
			get
			{
				return this._CbtCategory.Entity;
			}
			set
			{
				CbtCategory previousValue = this._CbtCategory.Entity;
				if (((previousValue != value) 
							|| (this._CbtCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CbtCategory.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._CbtCategory.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CbtCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtExamination_CbtAssessmentRecord", Storage="_CbtExamination", ThisKey="ExamId", OtherKey="Id", IsForeignKey=true)]
		public CbtExamination CbtExamination
		{
			get
			{
				return this._CbtExamination.Entity;
			}
			set
			{
				CbtExamination previousValue = this._CbtExamination.Entity;
				if (((previousValue != value) 
							|| (this._CbtExamination.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CbtExamination.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._CbtExamination.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._ExamId = value.Id;
					}
					else
					{
						this._ExamId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CbtExamination");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtType_CbtAssessmentRecord", Storage="_CbtType", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public CbtType CbtType
		{
			get
			{
				return this._CbtType.Entity;
			}
			set
			{
				CbtType previousValue = this._CbtType.Entity;
				if (((previousValue != value) 
							|| (this._CbtType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CbtType.Entity = null;
						previousValue.CbtAssessmentRecords.Remove(this);
					}
					this._CbtType.Entity = value;
					if ((value != null))
					{
						value.CbtAssessmentRecords.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CbtType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CbtCategory")]
	public partial class CbtCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Category;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public CbtCategory()
		{
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtCategory_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtCategory_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.CbtCategory = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.CbtCategory = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.CbtCategory = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.CbtCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CbtExamination")]
	public partial class CbtExamination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _TeacherId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _TermId;
		
		private System.Nullable<long> _SessionId;
		
		private System.Nullable<long> _TypeId;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<System.DateTime> _DateRegistered;
		
		private System.Nullable<long> _Duration;
		
		private System.Nullable<long> _Passmark;
		
		private System.Nullable<long> _Reexam;
		
		private string _Terms;
		
		private string _Status;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntityRef<AcademicSessionName> _AcademicSessionName;
		
		private EntityRef<AcademicTerm1> _AcademicTerm1;
		
		private EntityRef<CbtCategory> _CbtCategory;
		
		private EntityRef<Class_Grade> _Class_Grade;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<User> _User;
		
		private EntityRef<CbtType> _CbtType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnTeacherIdChanging(System.Nullable<long> value);
    partial void OnTeacherIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnTermIdChanging(System.Nullable<long> value);
    partial void OnTermIdChanged();
    partial void OnSessionIdChanging(System.Nullable<long> value);
    partial void OnSessionIdChanged();
    partial void OnTypeIdChanging(System.Nullable<long> value);
    partial void OnTypeIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnDateRegisteredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRegisteredChanged();
    partial void OnDurationChanging(System.Nullable<long> value);
    partial void OnDurationChanged();
    partial void OnPassmarkChanging(System.Nullable<long> value);
    partial void OnPassmarkChanged();
    partial void OnReexamChanging(System.Nullable<long> value);
    partial void OnReexamChanged();
    partial void OnTermsChanging(string value);
    partial void OnTermsChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public CbtExamination()
		{
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._AcademicSessionName = default(EntityRef<AcademicSessionName>);
			this._AcademicTerm1 = default(EntityRef<AcademicTerm1>);
			this._CbtCategory = default(EntityRef<CbtCategory>);
			this._Class_Grade = default(EntityRef<Class_Grade>);
			this._Grade = default(EntityRef<Grade>);
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			this._Subject = default(EntityRef<Subject>);
			this._User = default(EntityRef<User>);
			this._CbtType = default(EntityRef<CbtType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class_Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt")]
		public System.Nullable<long> TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt")]
		public System.Nullable<long> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._AcademicTerm1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="BigInt")]
		public System.Nullable<long> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._AcademicSessionName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="BigInt")]
		public System.Nullable<long> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._CbtType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._CbtCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRegistered
		{
			get
			{
				return this._DateRegistered;
			}
			set
			{
				if ((this._DateRegistered != value))
				{
					this.OnDateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistered = value;
					this.SendPropertyChanged("DateRegistered");
					this.OnDateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="BigInt")]
		public System.Nullable<long> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passmark", DbType="BigInt")]
		public System.Nullable<long> Passmark
		{
			get
			{
				return this._Passmark;
			}
			set
			{
				if ((this._Passmark != value))
				{
					this.OnPassmarkChanging(value);
					this.SendPropertyChanging();
					this._Passmark = value;
					this.SendPropertyChanged("Passmark");
					this.OnPassmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reexam", DbType="BigInt")]
		public System.Nullable<long> Reexam
		{
			get
			{
				return this._Reexam;
			}
			set
			{
				if ((this._Reexam != value))
				{
					this.OnReexamChanging(value);
					this.SendPropertyChanging();
					this._Reexam = value;
					this.SendPropertyChanged("Reexam");
					this.OnReexamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terms", DbType="VarChar(MAX)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this.OnTermsChanging(value);
					this.SendPropertyChanging();
					this._Terms = value;
					this.SendPropertyChanged("Terms");
					this.OnTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtExamination_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="ExamId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicSessionName_CbtExamination", Storage="_AcademicSessionName", ThisKey="SessionId", OtherKey="ID", IsForeignKey=true)]
		public AcademicSessionName AcademicSessionName
		{
			get
			{
				return this._AcademicSessionName.Entity;
			}
			set
			{
				AcademicSessionName previousValue = this._AcademicSessionName.Entity;
				if (((previousValue != value) 
							|| (this._AcademicSessionName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicSessionName.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._AcademicSessionName.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._SessionId = value.ID;
					}
					else
					{
						this._SessionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicSessionName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcademicTerm1_CbtExamination", Storage="_AcademicTerm1", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public AcademicTerm1 AcademicTerm1
		{
			get
			{
				return this._AcademicTerm1.Entity;
			}
			set
			{
				AcademicTerm1 previousValue = this._AcademicTerm1.Entity;
				if (((previousValue != value) 
							|| (this._AcademicTerm1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcademicTerm1.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._AcademicTerm1.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AcademicTerm1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtCategory_CbtExamination", Storage="_CbtCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public CbtCategory CbtCategory
		{
			get
			{
				return this._CbtCategory.Entity;
			}
			set
			{
				CbtCategory previousValue = this._CbtCategory.Entity;
				if (((previousValue != value) 
							|| (this._CbtCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CbtCategory.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._CbtCategory.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CbtCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Grade_CbtExamination", Storage="_Class_Grade", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true)]
		public Class_Grade Class_Grade
		{
			get
			{
				return this._Class_Grade.Entity;
			}
			set
			{
				Class_Grade previousValue = this._Class_Grade.Entity;
				if (((previousValue != value) 
							|| (this._Class_Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Grade.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._Class_Grade.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._ClassId = value.Id;
					}
					else
					{
						this._ClassId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Class_Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_CbtExamination", Storage="_Grade", ThisKey="GradeId", OtherKey="Id", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._GradeId = value.Id;
					}
					else
					{
						this._GradeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_CbtExamination", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_CbtExamination", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_CbtExamination", Storage="_Subject", ThisKey="SubjectId", OtherKey="Id", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._SubjectId = value.Id;
					}
					else
					{
						this._SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CbtExamination", Storage="_User", ThisKey="TeacherId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._TeacherId = value.Id;
					}
					else
					{
						this._TeacherId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtType_CbtExamination", Storage="_CbtType", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public CbtType CbtType
		{
			get
			{
				return this._CbtType.Entity;
			}
			set
			{
				CbtType previousValue = this._CbtType.Entity;
				if (((previousValue != value) 
							|| (this._CbtType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CbtType.Entity = null;
						previousValue.CbtExaminations.Remove(this);
					}
					this._CbtType.Entity = value;
					if ((value != null))
					{
						value.CbtExaminations.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CbtType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.CbtExamination = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.CbtExamination = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CbtNotice")]
	public partial class CbtNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<System.DateTime> _postDate;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private string _Description;
		
		private string _Title;
		
		private EntityRef<SchoolCampus> _SchoolCampus;
		
		private EntityRef<School> _School;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnpostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpostDateChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public CbtNotice()
		{
			this._SchoolCampus = default(EntityRef<SchoolCampus>);
			this._School = default(EntityRef<School>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					if (this._SchoolCampus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> postDate
		{
			get
			{
				return this._postDate;
			}
			set
			{
				if ((this._postDate != value))
				{
					this.OnpostDateChanging(value);
					this.SendPropertyChanging();
					this._postDate = value;
					this.SendPropertyChanged("postDate");
					this.OnpostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolCampus_CbtNotice", Storage="_SchoolCampus", ThisKey="CampusId", OtherKey="Id", IsForeignKey=true)]
		public SchoolCampus SchoolCampus
		{
			get
			{
				return this._SchoolCampus.Entity;
			}
			set
			{
				SchoolCampus previousValue = this._SchoolCampus.Entity;
				if (((previousValue != value) 
							|| (this._SchoolCampus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolCampus.Entity = null;
						previousValue.CbtNotices.Remove(this);
					}
					this._SchoolCampus.Entity = value;
					if ((value != null))
					{
						value.CbtNotices.Add(this);
						this._CampusId = value.Id;
					}
					else
					{
						this._CampusId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SchoolCampus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_CbtNotice", Storage="_School", ThisKey="SchoolId", OtherKey="Id", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.CbtNotices.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.CbtNotices.Add(this);
						this._SchoolId = value.Id;
					}
					else
					{
						this._SchoolId = default(Nullable<long>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CbtNotice", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CbtNotices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CbtNotices.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CbtPracticeExamination")]
	public partial class CbtPracticeExamination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _GradeId;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<long> _TeacherId;
		
		private System.Nullable<long> _SchoolId;
		
		private System.Nullable<long> _CampusId;
		
		private System.Nullable<long> _CategoryId;
		
		private System.Nullable<System.DateTime> _DateRegistered;
		
		private System.Nullable<long> _Duration;
		
		private System.Nullable<long> _Passmark;
		
		private System.Nullable<long> _Reexam;
		
		private string _Terms;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnGradeIdChanging(System.Nullable<long> value);
    partial void OnGradeIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnTeacherIdChanging(System.Nullable<long> value);
    partial void OnTeacherIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<long> value);
    partial void OnSchoolIdChanged();
    partial void OnCampusIdChanging(System.Nullable<long> value);
    partial void OnCampusIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<long> value);
    partial void OnCategoryIdChanged();
    partial void OnDateRegisteredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRegisteredChanged();
    partial void OnDurationChanging(System.Nullable<long> value);
    partial void OnDurationChanged();
    partial void OnPassmarkChanging(System.Nullable<long> value);
    partial void OnPassmarkChanged();
    partial void OnReexamChanging(System.Nullable<long> value);
    partial void OnReexamChanged();
    partial void OnTermsChanging(string value);
    partial void OnTermsChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public CbtPracticeExamination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="BigInt")]
		public System.Nullable<long> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="BigInt")]
		public System.Nullable<long> TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="BigInt")]
		public System.Nullable<long> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusId", DbType="BigInt")]
		public System.Nullable<long> CampusId
		{
			get
			{
				return this._CampusId;
			}
			set
			{
				if ((this._CampusId != value))
				{
					this.OnCampusIdChanging(value);
					this.SendPropertyChanging();
					this._CampusId = value;
					this.SendPropertyChanged("CampusId");
					this.OnCampusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt")]
		public System.Nullable<long> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRegistered
		{
			get
			{
				return this._DateRegistered;
			}
			set
			{
				if ((this._DateRegistered != value))
				{
					this.OnDateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistered = value;
					this.SendPropertyChanged("DateRegistered");
					this.OnDateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="BigInt")]
		public System.Nullable<long> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passmark", DbType="BigInt")]
		public System.Nullable<long> Passmark
		{
			get
			{
				return this._Passmark;
			}
			set
			{
				if ((this._Passmark != value))
				{
					this.OnPassmarkChanging(value);
					this.SendPropertyChanging();
					this._Passmark = value;
					this.SendPropertyChanged("Passmark");
					this.OnPassmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reexam", DbType="BigInt")]
		public System.Nullable<long> Reexam
		{
			get
			{
				return this._Reexam;
			}
			set
			{
				if ((this._Reexam != value))
				{
					this.OnReexamChanging(value);
					this.SendPropertyChanging();
					this._Reexam = value;
					this.SendPropertyChanged("Reexam");
					this.OnReexamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terms", DbType="VarChar(50)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this.OnTermsChanging(value);
					this.SendPropertyChanging();
					this._Terms = value;
					this.SendPropertyChanged("Terms");
					this.OnTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CbtQuestions")]
	public partial class CbtQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ExamId;
		
		private string _Type;
		
		private string _Question;
		
		private string _Option1;
		
		private string _Option2;
		
		private string _Option3;
		
		private string _Option4;
		
		private string _Answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnExamIdChanging(System.Nullable<long> value);
    partial void OnExamIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnOption2Changing(string value);
    partial void OnOption2Changed();
    partial void OnOption3Changing(string value);
    partial void OnOption3Changed();
    partial void OnOption4Changing(string value);
    partial void OnOption4Changed();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public CbtQuestion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", DbType="BigInt")]
		public System.Nullable<long> ExamId
		{
			get
			{
				return this._ExamId;
			}
			set
			{
				if ((this._ExamId != value))
				{
					this.OnExamIdChanging(value);
					this.SendPropertyChanging();
					this._ExamId = value;
					this.SendPropertyChanged("ExamId");
					this.OnExamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="VarChar(MAX)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="VarChar(MAX)")]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option2", DbType="VarChar(MAX)")]
		public string Option2
		{
			get
			{
				return this._Option2;
			}
			set
			{
				if ((this._Option2 != value))
				{
					this.OnOption2Changing(value);
					this.SendPropertyChanging();
					this._Option2 = value;
					this.SendPropertyChanged("Option2");
					this.OnOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option3", DbType="VarChar(MAX)")]
		public string Option3
		{
			get
			{
				return this._Option3;
			}
			set
			{
				if ((this._Option3 != value))
				{
					this.OnOption3Changing(value);
					this.SendPropertyChanging();
					this._Option3 = value;
					this.SendPropertyChanged("Option3");
					this.OnOption3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option4", DbType="VarChar(MAX)")]
		public string Option4
		{
			get
			{
				return this._Option4;
			}
			set
			{
				if ((this._Option4 != value))
				{
					this.OnOption4Changing(value);
					this.SendPropertyChanging();
					this._Option4 = value;
					this.SendPropertyChanged("Option4");
					this.OnOption4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CbtType")]
	public partial class CbtType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Type;
		
		private EntitySet<CbtAssessmentRecord> _CbtAssessmentRecords;
		
		private EntitySet<CbtExamination> _CbtExaminations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public CbtType()
		{
			this._CbtAssessmentRecords = new EntitySet<CbtAssessmentRecord>(new Action<CbtAssessmentRecord>(this.attach_CbtAssessmentRecords), new Action<CbtAssessmentRecord>(this.detach_CbtAssessmentRecords));
			this._CbtExaminations = new EntitySet<CbtExamination>(new Action<CbtExamination>(this.attach_CbtExaminations), new Action<CbtExamination>(this.detach_CbtExaminations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtType_CbtAssessmentRecord", Storage="_CbtAssessmentRecords", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<CbtAssessmentRecord> CbtAssessmentRecords
		{
			get
			{
				return this._CbtAssessmentRecords;
			}
			set
			{
				this._CbtAssessmentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CbtType_CbtExamination", Storage="_CbtExaminations", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<CbtExamination> CbtExaminations
		{
			get
			{
				return this._CbtExaminations;
			}
			set
			{
				this._CbtExaminations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.CbtType = this;
		}
		
		private void detach_CbtAssessmentRecords(CbtAssessmentRecord entity)
		{
			this.SendPropertyChanging();
			entity.CbtType = null;
		}
		
		private void attach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.CbtType = this;
		}
		
		private void detach_CbtExaminations(CbtExamination entity)
		{
			this.SendPropertyChanging();
			entity.CbtType = null;
		}
	}
}
#pragma warning restore 1591
